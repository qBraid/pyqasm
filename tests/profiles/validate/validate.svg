<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="906" onload="init(evt)" viewBox="0 0 1200 906" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="906" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o tests/profiles/validate/validate.svg -- python3 /Users/vinay/Desktop/test.py</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="895.00"> </text><svg id="frames" x="10" width="1180" total_samples="3850"><g><title>&lt;module&gt; (test.py:7) (7 samples, 0.18%)</title><rect x="0.0000%" y="68" width="0.1818%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="7"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.18%)</title><rect x="0.0000%" y="84" width="0.1818%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="7"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.18%)</title><rect x="0.0000%" y="100" width="0.1818%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="7"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.18%)</title><rect x="0.0000%" y="116" width="0.1818%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="7"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (7 samples, 0.18%)</title><rect x="0.0000%" y="132" width="0.1818%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="7"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.18%)</title><rect x="0.0000%" y="148" width="0.1818%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="7"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (pyqasm/__init__.py:64) (7 samples, 0.18%)</title><rect x="0.0000%" y="164" width="0.1818%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="7"/><text x="0.2500%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.18%)</title><rect x="0.0000%" y="180" width="0.1818%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="7"/><text x="0.2500%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.18%)</title><rect x="0.0000%" y="196" width="0.1818%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="7"/><text x="0.2500%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.18%)</title><rect x="0.0000%" y="212" width="0.1818%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="7"/><text x="0.2500%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (7 samples, 0.18%)</title><rect x="0.0000%" y="228" width="0.1818%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="7"/><text x="0.2500%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.18%)</title><rect x="0.0000%" y="244" width="0.1818%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="7"/><text x="0.2500%" y="254.50"></text></g><g><title>&lt;module&gt; (pyqasm/entrypoint.py:28) (4 samples, 0.10%)</title><rect x="0.0779%" y="260" width="0.1039%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="4"/><text x="0.3279%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (4 samples, 0.10%)</title><rect x="0.0779%" y="276" width="0.1039%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="4"/><text x="0.3279%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (4 samples, 0.10%)</title><rect x="0.0779%" y="292" width="0.1039%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="4"/><text x="0.3279%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (4 samples, 0.10%)</title><rect x="0.0779%" y="308" width="0.1039%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="4"/><text x="0.3279%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (4 samples, 0.10%)</title><rect x="0.0779%" y="324" width="0.1039%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="4"/><text x="0.3279%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (4 samples, 0.10%)</title><rect x="0.0779%" y="340" width="0.1039%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="4"/><text x="0.3279%" y="350.50"></text></g><g><title>&lt;module&gt; (pyqasm/modules/__init__.py:32) (4 samples, 0.10%)</title><rect x="0.0779%" y="356" width="0.1039%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="4"/><text x="0.3279%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (4 samples, 0.10%)</title><rect x="0.0779%" y="372" width="0.1039%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="4"/><text x="0.3279%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (4 samples, 0.10%)</title><rect x="0.0779%" y="388" width="0.1039%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="4"/><text x="0.3279%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (4 samples, 0.10%)</title><rect x="0.0779%" y="404" width="0.1039%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="4"/><text x="0.3279%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (4 samples, 0.10%)</title><rect x="0.0779%" y="420" width="0.1039%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="4"/><text x="0.3279%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (4 samples, 0.10%)</title><rect x="0.0779%" y="436" width="0.1039%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="4"/><text x="0.3279%" y="446.50"></text></g><g><title>&lt;module&gt; (pyqasm/modules/base.py:30) (4 samples, 0.10%)</title><rect x="0.0779%" y="452" width="0.1039%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="4"/><text x="0.3279%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (4 samples, 0.10%)</title><rect x="0.0779%" y="468" width="0.1039%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="4"/><text x="0.3279%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (4 samples, 0.10%)</title><rect x="0.0779%" y="484" width="0.1039%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="4"/><text x="0.3279%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (4 samples, 0.10%)</title><rect x="0.0779%" y="500" width="0.1039%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="4"/><text x="0.3279%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (4 samples, 0.10%)</title><rect x="0.0779%" y="516" width="0.1039%" height="15" fill="rgb(214,148,48)" fg:x="3" fg:w="4"/><text x="0.3279%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (4 samples, 0.10%)</title><rect x="0.0779%" y="532" width="0.1039%" height="15" fill="rgb(232,36,49)" fg:x="3" fg:w="4"/><text x="0.3279%" y="542.50"></text></g><g><title>&lt;module&gt; (pyqasm/analyzer.py:24) (4 samples, 0.10%)</title><rect x="0.0779%" y="548" width="0.1039%" height="15" fill="rgb(209,103,24)" fg:x="3" fg:w="4"/><text x="0.3279%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (4 samples, 0.10%)</title><rect x="0.0779%" y="564" width="0.1039%" height="15" fill="rgb(229,88,8)" fg:x="3" fg:w="4"/><text x="0.3279%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (4 samples, 0.10%)</title><rect x="0.0779%" y="580" width="0.1039%" height="15" fill="rgb(213,181,19)" fg:x="3" fg:w="4"/><text x="0.3279%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (4 samples, 0.10%)</title><rect x="0.0779%" y="596" width="0.1039%" height="15" fill="rgb(254,191,54)" fg:x="3" fg:w="4"/><text x="0.3279%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (4 samples, 0.10%)</title><rect x="0.0779%" y="612" width="0.1039%" height="15" fill="rgb(241,83,37)" fg:x="3" fg:w="4"/><text x="0.3279%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (4 samples, 0.10%)</title><rect x="0.0779%" y="628" width="0.1039%" height="15" fill="rgb(233,36,39)" fg:x="3" fg:w="4"/><text x="0.3279%" y="638.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:112) (4 samples, 0.10%)</title><rect x="0.0779%" y="644" width="0.1039%" height="15" fill="rgb(226,3,54)" fg:x="3" fg:w="4"/><text x="0.3279%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (4 samples, 0.10%)</title><rect x="0.0779%" y="660" width="0.1039%" height="15" fill="rgb(245,192,40)" fg:x="3" fg:w="4"/><text x="0.3279%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (4 samples, 0.10%)</title><rect x="0.0779%" y="676" width="0.1039%" height="15" fill="rgb(238,167,29)" fg:x="3" fg:w="4"/><text x="0.3279%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (4 samples, 0.10%)</title><rect x="0.0779%" y="692" width="0.1039%" height="15" fill="rgb(232,182,51)" fg:x="3" fg:w="4"/><text x="0.3279%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (4 samples, 0.10%)</title><rect x="0.0779%" y="708" width="0.1039%" height="15" fill="rgb(231,60,39)" fg:x="3" fg:w="4"/><text x="0.3279%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (4 samples, 0.10%)</title><rect x="0.0779%" y="724" width="0.1039%" height="15" fill="rgb(208,69,12)" fg:x="3" fg:w="4"/><text x="0.3279%" y="734.50"></text></g><g><title>&lt;module&gt; (numpy/__config__.py:4) (4 samples, 0.10%)</title><rect x="0.0779%" y="740" width="0.1039%" height="15" fill="rgb(235,93,37)" fg:x="3" fg:w="4"/><text x="0.3279%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (4 samples, 0.10%)</title><rect x="0.0779%" y="756" width="0.1039%" height="15" fill="rgb(213,116,39)" fg:x="3" fg:w="4"/><text x="0.3279%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1310) (4 samples, 0.10%)</title><rect x="0.0779%" y="772" width="0.1039%" height="15" fill="rgb(222,207,29)" fg:x="3" fg:w="4"/><text x="0.3279%" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (4 samples, 0.10%)</title><rect x="0.0779%" y="788" width="0.1039%" height="15" fill="rgb(206,96,30)" fg:x="3" fg:w="4"/><text x="0.3279%" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (4 samples, 0.10%)</title><rect x="0.0779%" y="804" width="0.1039%" height="15" fill="rgb(218,138,4)" fg:x="3" fg:w="4"/><text x="0.3279%" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (4 samples, 0.10%)</title><rect x="0.0779%" y="820" width="0.1039%" height="15" fill="rgb(250,191,14)" fg:x="3" fg:w="4"/><text x="0.3279%" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (4 samples, 0.10%)</title><rect x="0.0779%" y="836" width="0.1039%" height="15" fill="rgb(239,60,40)" fg:x="3" fg:w="4"/><text x="0.3279%" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (4 samples, 0.10%)</title><rect x="0.0779%" y="852" width="0.1039%" height="15" fill="rgb(206,27,48)" fg:x="3" fg:w="4"/><text x="0.3279%" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (4 samples, 0.10%)</title><rect x="0.0779%" y="868" width="0.1039%" height="15" fill="rgb(225,35,8)" fg:x="3" fg:w="4"/><text x="0.3279%" y="878.50"></text></g><g><title>_process_file (pyqasm/preprocess.py:132) (4 samples, 0.10%)</title><rect x="0.3377%" y="116" width="0.1039%" height="15" fill="rgb(250,213,24)" fg:x="13" fg:w="4"/><text x="0.5877%" y="126.50"></text></g><g><title>_process_file (pyqasm/preprocess.py:134) (6 samples, 0.16%)</title><rect x="0.4416%" y="116" width="0.1558%" height="15" fill="rgb(247,123,22)" fg:x="17" fg:w="6"/><text x="0.6916%" y="126.50"></text></g><g><title>load (pyqasm/entrypoint.py:49) (17 samples, 0.44%)</title><rect x="0.1818%" y="84" width="0.4416%" height="15" fill="rgb(231,138,38)" fg:x="7" fg:w="17"/><text x="0.4318%" y="94.50"></text></g><g><title>process_include_statements (pyqasm/preprocess.py:77) (14 samples, 0.36%)</title><rect x="0.2597%" y="100" width="0.3636%" height="15" fill="rgb(231,145,46)" fg:x="10" fg:w="14"/><text x="0.5097%" y="110.50"></text></g><g><title>__init__ (qasm3Parser.py:1258) (6 samples, 0.16%)</title><rect x="0.8831%" y="164" width="0.1558%" height="15" fill="rgb(251,118,11)" fg:x="34" fg:w="6"/><text x="1.1331%" y="174.50"></text></g><g><title>statementOrScope (qasm3Parser.py:1292) (18 samples, 0.47%)</title><rect x="0.7532%" y="148" width="0.4675%" height="15" fill="rgb(217,147,25)" fg:x="29" fg:w="18"/><text x="1.0032%" y="158.50"></text></g><g><title>__init__ (qasm3Parser.py:1259) (7 samples, 0.18%)</title><rect x="1.0390%" y="164" width="0.1818%" height="15" fill="rgb(247,81,37)" fg:x="40" fg:w="7"/><text x="1.2890%" y="174.50"></text></g><g><title>statementOrScope (qasm3Parser.py:1293) (12 samples, 0.31%)</title><rect x="1.2208%" y="148" width="0.3117%" height="15" fill="rgb(209,12,38)" fg:x="47" fg:w="12"/><text x="1.4708%" y="158.50"></text></g><g><title>enterRule (antlr4/Parser.py:376) (7 samples, 0.18%)</title><rect x="1.3506%" y="164" width="0.1818%" height="15" fill="rgb(227,1,9)" fg:x="52" fg:w="7"/><text x="1.6006%" y="174.50"></text></g><g><title>addContextToParseTree (antlr4/Parser.py:366) (4 samples, 0.10%)</title><rect x="1.4286%" y="180" width="0.1039%" height="15" fill="rgb(248,47,43)" fg:x="55" fg:w="4"/><text x="1.6786%" y="190.50"></text></g><g><title>statementOrScope (qasm3Parser.py:1297) (7 samples, 0.18%)</title><rect x="1.6364%" y="148" width="0.1818%" height="15" fill="rgb(221,10,30)" fg:x="63" fg:w="7"/><text x="1.8864%" y="158.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (6 samples, 0.16%)</title><rect x="1.6623%" y="164" width="0.1558%" height="15" fill="rgb(210,229,1)" fg:x="64" fg:w="6"/><text x="1.9123%" y="174.50"></text></g><g><title>statementOrScope (qasm3Parser.py:1299) (5 samples, 0.13%)</title><rect x="1.8961%" y="148" width="0.1299%" height="15" fill="rgb(222,148,37)" fg:x="73" fg:w="5"/><text x="2.1461%" y="158.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (5 samples, 0.13%)</title><rect x="2.4416%" y="212" width="0.1299%" height="15" fill="rgb(234,67,33)" fg:x="94" fg:w="5"/><text x="2.6916%" y="222.50"></text></g><g><title>__init__ (antlr4/RuleContext.py:40) (4 samples, 0.10%)</title><rect x="2.4675%" y="228" width="0.1039%" height="15" fill="rgb(247,98,35)" fg:x="95" fg:w="4"/><text x="2.7175%" y="238.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2365) (14 samples, 0.36%)</title><rect x="2.2597%" y="180" width="0.3636%" height="15" fill="rgb(247,138,52)" fg:x="87" fg:w="14"/><text x="2.5097%" y="190.50"></text></g><g><title>__init__ (qasm3Parser.py:2306) (8 samples, 0.21%)</title><rect x="2.4156%" y="196" width="0.2078%" height="15" fill="rgb(213,79,30)" fg:x="93" fg:w="8"/><text x="2.6656%" y="206.50"></text></g><g><title>enterRule (antlr4/Parser.py:374) (6 samples, 0.16%)</title><rect x="2.6753%" y="196" width="0.1558%" height="15" fill="rgb(246,177,23)" fg:x="103" fg:w="6"/><text x="2.9253%" y="206.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2366) (12 samples, 0.31%)</title><rect x="2.6234%" y="180" width="0.3117%" height="15" fill="rgb(230,62,27)" fg:x="101" fg:w="12"/><text x="2.8734%" y="190.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (10 samples, 0.26%)</title><rect x="3.1169%" y="196" width="0.2597%" height="15" fill="rgb(216,154,8)" fg:x="120" fg:w="10"/><text x="3.3669%" y="206.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (8 samples, 0.21%)</title><rect x="3.3766%" y="196" width="0.2078%" height="15" fill="rgb(244,35,45)" fg:x="130" fg:w="8"/><text x="3.6266%" y="206.50"></text></g><g><title>seek (antlr4/BufferedTokenStream.py:77) (7 samples, 0.18%)</title><rect x="3.4026%" y="212" width="0.1818%" height="15" fill="rgb(251,115,12)" fg:x="131" fg:w="7"/><text x="3.6526%" y="222.50"></text></g><g><title>adjustSeekIndex (antlr4/CommonTokenStream.py:45) (6 samples, 0.16%)</title><rect x="3.4286%" y="228" width="0.1558%" height="15" fill="rgb(240,54,50)" fg:x="132" fg:w="6"/><text x="3.6786%" y="238.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2371) (22 samples, 0.57%)</title><rect x="3.0390%" y="180" width="0.5714%" height="15" fill="rgb(233,84,52)" fg:x="117" fg:w="22"/><text x="3.2890%" y="190.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2376) (5 samples, 0.13%)</title><rect x="3.7403%" y="180" width="0.1299%" height="15" fill="rgb(207,117,47)" fg:x="144" fg:w="5"/><text x="3.9903%" y="190.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (4 samples, 0.10%)</title><rect x="3.7662%" y="196" width="0.1039%" height="15" fill="rgb(249,43,39)" fg:x="145" fg:w="4"/><text x="4.0162%" y="206.50"></text></g><g><title>match (antlr4/Parser.py:121) (6 samples, 0.16%)</title><rect x="4.0260%" y="196" width="0.1558%" height="15" fill="rgb(209,38,44)" fg:x="155" fg:w="6"/><text x="4.2760%" y="206.50"></text></g><g><title>getCurrentToken (antlr4/Parser.py:313) (6 samples, 0.16%)</title><rect x="4.0260%" y="212" width="0.1558%" height="15" fill="rgb(236,212,23)" fg:x="155" fg:w="6"/><text x="4.2760%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:348) (8 samples, 0.21%)</title><rect x="4.3117%" y="212" width="0.2078%" height="15" fill="rgb(242,79,21)" fg:x="166" fg:w="8"/><text x="4.5617%" y="222.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:85) (5 samples, 0.13%)</title><rect x="4.6494%" y="244" width="0.1299%" height="15" fill="rgb(211,96,35)" fg:x="179" fg:w="5"/><text x="4.8994%" y="254.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (12 samples, 0.31%)</title><rect x="4.5714%" y="228" width="0.3117%" height="15" fill="rgb(253,215,40)" fg:x="176" fg:w="12"/><text x="4.8214%" y="238.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2385) (38 samples, 0.99%)</title><rect x="3.9481%" y="180" width="0.9870%" height="15" fill="rgb(211,81,21)" fg:x="152" fg:w="38"/><text x="4.1981%" y="190.50"></text></g><g><title>match (antlr4/Parser.py:124) (27 samples, 0.70%)</title><rect x="4.2338%" y="196" width="0.7013%" height="15" fill="rgb(208,190,38)" fg:x="163" fg:w="27"/><text x="4.4838%" y="206.50"></text></g><g><title>consume (antlr4/Parser.py:354) (14 samples, 0.36%)</title><rect x="4.5714%" y="212" width="0.3636%" height="15" fill="rgb(235,213,38)" fg:x="176" fg:w="14"/><text x="4.8214%" y="222.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2386) (4 samples, 0.10%)</title><rect x="4.9351%" y="180" width="0.1039%" height="15" fill="rgb(237,122,38)" fg:x="190" fg:w="4"/><text x="5.1851%" y="190.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2388) (7 samples, 0.18%)</title><rect x="5.0649%" y="180" width="0.1818%" height="15" fill="rgb(244,218,35)" fg:x="195" fg:w="7"/><text x="5.3149%" y="190.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (7 samples, 0.18%)</title><rect x="5.0649%" y="196" width="0.1818%" height="15" fill="rgb(240,68,47)" fg:x="195" fg:w="7"/><text x="5.3149%" y="206.50"></text></g><g><title>match (antlr4/Parser.py:121) (4 samples, 0.10%)</title><rect x="5.2468%" y="196" width="0.1039%" height="15" fill="rgb(210,16,53)" fg:x="202" fg:w="4"/><text x="5.4968%" y="206.50"></text></g><g><title>consume (antlr4/Parser.py:346) (5 samples, 0.13%)</title><rect x="5.4026%" y="212" width="0.1299%" height="15" fill="rgb(235,124,12)" fg:x="208" fg:w="5"/><text x="5.6526%" y="222.50"></text></g><g><title>getCurrentToken (antlr4/Parser.py:313) (4 samples, 0.10%)</title><rect x="5.4286%" y="228" width="0.1039%" height="15" fill="rgb(224,169,11)" fg:x="209" fg:w="4"/><text x="5.6786%" y="238.50"></text></g><g><title>consume (antlr4/Parser.py:348) (9 samples, 0.23%)</title><rect x="5.5325%" y="212" width="0.2338%" height="15" fill="rgb(250,166,2)" fg:x="213" fg:w="9"/><text x="5.7825%" y="222.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (5 samples, 0.13%)</title><rect x="5.7662%" y="228" width="0.1299%" height="15" fill="rgb(242,216,29)" fg:x="222" fg:w="5"/><text x="6.0162%" y="238.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2391) (26 samples, 0.68%)</title><rect x="5.2468%" y="180" width="0.6753%" height="15" fill="rgb(230,116,27)" fg:x="202" fg:w="26"/><text x="5.4968%" y="190.50"></text></g><g><title>match (antlr4/Parser.py:124) (21 samples, 0.55%)</title><rect x="5.3766%" y="196" width="0.5455%" height="15" fill="rgb(228,99,48)" fg:x="207" fg:w="21"/><text x="5.6266%" y="206.50"></text></g><g><title>consume (antlr4/Parser.py:354) (6 samples, 0.16%)</title><rect x="5.7662%" y="212" width="0.1558%" height="15" fill="rgb(253,11,6)" fg:x="222" fg:w="6"/><text x="6.0162%" y="222.50"></text></g><g><title>__init__ (qasm3Parser.py:6622) (4 samples, 0.10%)</title><rect x="6.0779%" y="212" width="0.1039%" height="15" fill="rgb(247,143,39)" fg:x="234" fg:w="4"/><text x="6.3279%" y="222.50"></text></g><g><title>expressionList (qasm3Parser.py:6661) (9 samples, 0.23%)</title><rect x="6.0000%" y="196" width="0.2338%" height="15" fill="rgb(236,97,10)" fg:x="231" fg:w="9"/><text x="6.2500%" y="206.50"></text></g><g><title>enterRule (antlr4/Parser.py:374) (4 samples, 0.10%)</title><rect x="6.2597%" y="212" width="0.1039%" height="15" fill="rgb(233,208,19)" fg:x="241" fg:w="4"/><text x="6.5097%" y="222.50"></text></g><g><title>expressionList (qasm3Parser.py:6662) (8 samples, 0.21%)</title><rect x="6.2338%" y="196" width="0.2078%" height="15" fill="rgb(216,164,2)" fg:x="240" fg:w="8"/><text x="6.4838%" y="206.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (5 samples, 0.13%)</title><rect x="6.7013%" y="244" width="0.1299%" height="15" fill="rgb(220,129,5)" fg:x="258" fg:w="5"/><text x="6.9513%" y="254.50"></text></g><g><title>expression (qasm3Parser.py:4277) (8 samples, 0.21%)</title><rect x="6.6494%" y="212" width="0.2078%" height="15" fill="rgb(242,17,10)" fg:x="256" fg:w="8"/><text x="6.8994%" y="222.50"></text></g><g><title>__init__ (qasm3Parser.py:3684) (6 samples, 0.16%)</title><rect x="6.7013%" y="228" width="0.1558%" height="15" fill="rgb(242,107,0)" fg:x="258" fg:w="6"/><text x="6.9513%" y="238.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (4 samples, 0.10%)</title><rect x="7.0909%" y="228" width="0.1039%" height="15" fill="rgb(251,28,31)" fg:x="273" fg:w="4"/><text x="7.3409%" y="238.50"></text></g><g><title>expression (qasm3Parser.py:4286) (10 samples, 0.26%)</title><rect x="7.0130%" y="212" width="0.2597%" height="15" fill="rgb(233,223,10)" fg:x="270" fg:w="10"/><text x="7.2630%" y="222.50"></text></g><g><title>expression (qasm3Parser.py:4313) (7 samples, 0.18%)</title><rect x="7.4286%" y="212" width="0.1818%" height="15" fill="rgb(215,21,27)" fg:x="286" fg:w="7"/><text x="7.6786%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:348) (6 samples, 0.16%)</title><rect x="7.7922%" y="228" width="0.1558%" height="15" fill="rgb(232,23,21)" fg:x="300" fg:w="6"/><text x="8.0422%" y="238.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (5 samples, 0.13%)</title><rect x="7.9481%" y="244" width="0.1299%" height="15" fill="rgb(244,5,23)" fg:x="306" fg:w="5"/><text x="8.1981%" y="254.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:104) (4 samples, 0.10%)</title><rect x="8.0779%" y="244" width="0.1039%" height="15" fill="rgb(226,81,46)" fg:x="311" fg:w="4"/><text x="8.3279%" y="254.50"></text></g><g><title>expression (qasm3Parser.py:4386) (20 samples, 0.52%)</title><rect x="7.7403%" y="212" width="0.5195%" height="15" fill="rgb(247,70,30)" fg:x="298" fg:w="20"/><text x="7.9903%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:354) (12 samples, 0.31%)</title><rect x="7.9481%" y="228" width="0.3117%" height="15" fill="rgb(212,68,19)" fg:x="306" fg:w="12"/><text x="8.1981%" y="238.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (6 samples, 0.16%)</title><rect x="8.4935%" y="228" width="0.1558%" height="15" fill="rgb(240,187,13)" fg:x="327" fg:w="6"/><text x="8.7435%" y="238.50"></text></g><g><title>expression (qasm3Parser.py:4393) (14 samples, 0.36%)</title><rect x="8.3636%" y="212" width="0.3636%" height="15" fill="rgb(223,113,26)" fg:x="322" fg:w="14"/><text x="8.6136%" y="222.50"></text></g><g><title>expression (qasm3Parser.py:4429) (5 samples, 0.13%)</title><rect x="9.1169%" y="212" width="0.1299%" height="15" fill="rgb(206,192,2)" fg:x="351" fg:w="5"/><text x="9.3669%" y="222.50"></text></g><g><title>expression (qasm3Parser.py:4286) (5 samples, 0.13%)</title><rect x="9.3247%" y="228" width="0.1299%" height="15" fill="rgb(241,108,4)" fg:x="359" fg:w="5"/><text x="9.5747%" y="238.50"></text></g><g><title>expression (qasm3Parser.py:4377) (5 samples, 0.13%)</title><rect x="9.4545%" y="228" width="0.1299%" height="15" fill="rgb(247,173,49)" fg:x="364" fg:w="5"/><text x="9.7045%" y="238.50"></text></g><g><title>__init__ (qasm3Parser.py:4232) (4 samples, 0.10%)</title><rect x="9.4805%" y="244" width="0.1039%" height="15" fill="rgb(224,114,35)" fg:x="365" fg:w="4"/><text x="9.7305%" y="254.50"></text></g><g><title>__init__ (qasm3Parser.py:3684) (4 samples, 0.10%)</title><rect x="9.4805%" y="260" width="0.1039%" height="15" fill="rgb(245,159,27)" fg:x="365" fg:w="4"/><text x="9.7305%" y="270.50"></text></g><g><title>expression (qasm3Parser.py:4386) (4 samples, 0.10%)</title><rect x="9.5844%" y="228" width="0.1039%" height="15" fill="rgb(245,172,44)" fg:x="369" fg:w="4"/><text x="9.8344%" y="238.50"></text></g><g><title>expression (qasm3Parser.py:4431) (20 samples, 0.52%)</title><rect x="9.2468%" y="212" width="0.5195%" height="15" fill="rgb(236,23,11)" fg:x="356" fg:w="20"/><text x="9.4968%" y="222.50"></text></g><g><title>expressionList (qasm3Parser.py:6667) (132 samples, 3.43%)</title><rect x="6.5974%" y="196" width="3.4286%" height="15" fill="rgb(205,117,38)" fg:x="254" fg:w="132"/><text x="6.8474%" y="206.50">exp..</text></g><g><title>expression (qasm3Parser.py:4578) (8 samples, 0.21%)</title><rect x="9.8182%" y="212" width="0.2078%" height="15" fill="rgb(237,72,25)" fg:x="378" fg:w="8"/><text x="10.0682%" y="222.50"></text></g><g><title>unrollRecursionContexts (antlr4/Parser.py:436) (8 samples, 0.21%)</title><rect x="9.8182%" y="228" width="0.2078%" height="15" fill="rgb(244,70,9)" fg:x="378" fg:w="8"/><text x="10.0682%" y="238.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (4 samples, 0.10%)</title><rect x="9.9221%" y="244" width="0.1039%" height="15" fill="rgb(217,125,39)" fg:x="382" fg:w="4"/><text x="10.1721%" y="254.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (4 samples, 0.10%)</title><rect x="10.1558%" y="212" width="0.1039%" height="15" fill="rgb(235,36,10)" fg:x="391" fg:w="4"/><text x="10.4058%" y="222.50"></text></g><g><title>expressionList (qasm3Parser.py:6670) (6 samples, 0.16%)</title><rect x="10.1299%" y="196" width="0.1558%" height="15" fill="rgb(251,123,47)" fg:x="390" fg:w="6"/><text x="10.3799%" y="206.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2397) (176 samples, 4.57%)</title><rect x="5.9740%" y="180" width="4.5714%" height="15" fill="rgb(221,13,13)" fg:x="230" fg:w="176"/><text x="6.2240%" y="190.50">gateC..</text></g><g><title>expressionList (qasm3Parser.py:6694) (8 samples, 0.21%)</title><rect x="10.3377%" y="196" width="0.2078%" height="15" fill="rgb(238,131,9)" fg:x="398" fg:w="8"/><text x="10.5877%" y="206.50"></text></g><g><title>exitRule (antlr4/Parser.py:381) (8 samples, 0.21%)</title><rect x="10.3377%" y="212" width="0.2078%" height="15" fill="rgb(211,50,8)" fg:x="398" fg:w="8"/><text x="10.5877%" y="222.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (5 samples, 0.13%)</title><rect x="10.4156%" y="228" width="0.1299%" height="15" fill="rgb(245,182,24)" fg:x="401" fg:w="5"/><text x="10.6656%" y="238.50"></text></g><g><title>consume (antlr4/Parser.py:348) (5 samples, 0.13%)</title><rect x="10.8312%" y="212" width="0.1299%" height="15" fill="rgb(242,14,37)" fg:x="417" fg:w="5"/><text x="11.0812%" y="222.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (9 samples, 0.23%)</title><rect x="10.9610%" y="228" width="0.2338%" height="15" fill="rgb(246,228,12)" fg:x="422" fg:w="9"/><text x="11.2110%" y="238.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2401) (28 samples, 0.73%)</title><rect x="10.5974%" y="180" width="0.7273%" height="15" fill="rgb(213,55,15)" fg:x="408" fg:w="28"/><text x="10.8474%" y="190.50"></text></g><g><title>match (antlr4/Parser.py:124) (23 samples, 0.60%)</title><rect x="10.7273%" y="196" width="0.5974%" height="15" fill="rgb(209,9,3)" fg:x="413" fg:w="23"/><text x="10.9773%" y="206.50"></text></g><g><title>consume (antlr4/Parser.py:354) (14 samples, 0.36%)</title><rect x="10.9610%" y="212" width="0.3636%" height="15" fill="rgb(230,59,30)" fg:x="422" fg:w="14"/><text x="11.2110%" y="222.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2406) (7 samples, 0.18%)</title><rect x="11.4286%" y="180" width="0.1818%" height="15" fill="rgb(209,121,21)" fg:x="440" fg:w="7"/><text x="11.6786%" y="190.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (7 samples, 0.18%)</title><rect x="11.4286%" y="196" width="0.1818%" height="15" fill="rgb(220,109,13)" fg:x="440" fg:w="7"/><text x="11.6786%" y="206.50"></text></g><g><title>__init__ (qasm3Parser.py:6779) (30 samples, 0.78%)</title><rect x="11.7403%" y="212" width="0.7792%" height="15" fill="rgb(232,18,1)" fg:x="452" fg:w="30"/><text x="11.9903%" y="222.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (4 samples, 0.10%)</title><rect x="12.5714%" y="228" width="0.1039%" height="15" fill="rgb(215,41,42)" fg:x="484" fg:w="4"/><text x="12.8214%" y="238.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6818) (41 samples, 1.06%)</title><rect x="11.6883%" y="196" width="1.0649%" height="15" fill="rgb(224,123,36)" fg:x="450" fg:w="41"/><text x="11.9383%" y="206.50"></text></g><g><title>__init__ (qasm3Parser.py:6780) (9 samples, 0.23%)</title><rect x="12.5195%" y="212" width="0.2338%" height="15" fill="rgb(240,125,3)" fg:x="482" fg:w="9"/><text x="12.7695%" y="222.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6819) (7 samples, 0.18%)</title><rect x="12.7532%" y="196" width="0.1818%" height="15" fill="rgb(205,98,50)" fg:x="491" fg:w="7"/><text x="13.0032%" y="206.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6822) (4 samples, 0.10%)</title><rect x="12.9351%" y="196" width="0.1039%" height="15" fill="rgb(205,185,37)" fg:x="498" fg:w="4"/><text x="13.1851%" y="206.50"></text></g><g><title>__init__ (qasm3Parser.py:6121) (17 samples, 0.44%)</title><rect x="13.3766%" y="228" width="0.4416%" height="15" fill="rgb(238,207,15)" fg:x="515" fg:w="17"/><text x="13.6266%" y="238.50"></text></g><g><title>gateOperand (qasm3Parser.py:6154) (26 samples, 0.68%)</title><rect x="13.2987%" y="212" width="0.6753%" height="15" fill="rgb(213,199,42)" fg:x="512" fg:w="26"/><text x="13.5487%" y="222.50"></text></g><g><title>__init__ (qasm3Parser.py:6122) (6 samples, 0.16%)</title><rect x="13.8182%" y="228" width="0.1558%" height="15" fill="rgb(235,201,11)" fg:x="532" fg:w="6"/><text x="14.0682%" y="238.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (5 samples, 0.13%)</title><rect x="13.8442%" y="244" width="0.1299%" height="15" fill="rgb(207,46,11)" fg:x="533" fg:w="5"/><text x="14.0942%" y="254.50"></text></g><g><title>enterRule (antlr4/Parser.py:374) (4 samples, 0.10%)</title><rect x="14.0779%" y="228" width="0.1039%" height="15" fill="rgb(241,35,35)" fg:x="542" fg:w="4"/><text x="14.3279%" y="238.50"></text></g><g><title>gateOperand (qasm3Parser.py:6155) (12 samples, 0.31%)</title><rect x="13.9740%" y="212" width="0.3117%" height="15" fill="rgb(243,32,47)" fg:x="538" fg:w="12"/><text x="14.2240%" y="222.50"></text></g><g><title>enterRule (antlr4/Parser.py:376) (4 samples, 0.10%)</title><rect x="14.1818%" y="228" width="0.1039%" height="15" fill="rgb(247,202,23)" fg:x="546" fg:w="4"/><text x="14.4318%" y="238.50"></text></g><g><title>addContextToParseTree (antlr4/Parser.py:366) (4 samples, 0.10%)</title><rect x="14.1818%" y="244" width="0.1039%" height="15" fill="rgb(219,102,11)" fg:x="546" fg:w="4"/><text x="14.4318%" y="254.50"></text></g><g><title>gateOperand (qasm3Parser.py:6157) (49 samples, 1.27%)</title><rect x="14.2857%" y="212" width="1.2727%" height="15" fill="rgb(243,110,44)" fg:x="550" fg:w="49"/><text x="14.5357%" y="222.50"></text></g><g><title>state (antlr4/Recognizer.py:143) (49 samples, 1.27%)</title><rect x="14.2857%" y="228" width="1.2727%" height="15" fill="rgb(222,74,54)" fg:x="550" fg:w="49"/><text x="14.5357%" y="238.50"></text></g><g><title>gateOperand (qasm3Parser.py:6159) (4 samples, 0.10%)</title><rect x="15.5584%" y="212" width="0.1039%" height="15" fill="rgb(216,99,12)" fg:x="599" fg:w="4"/><text x="15.8084%" y="222.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5253) (8 samples, 0.21%)</title><rect x="15.7143%" y="228" width="0.2078%" height="15" fill="rgb(226,22,26)" fg:x="605" fg:w="8"/><text x="15.9643%" y="238.50"></text></g><g><title>__init__ (qasm3Parser.py:5218) (6 samples, 0.16%)</title><rect x="15.7662%" y="244" width="0.1558%" height="15" fill="rgb(217,163,10)" fg:x="607" fg:w="6"/><text x="16.0162%" y="254.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5254) (10 samples, 0.26%)</title><rect x="15.9221%" y="228" width="0.2597%" height="15" fill="rgb(213,25,53)" fg:x="613" fg:w="10"/><text x="16.1721%" y="238.50"></text></g><g><title>enterRule (antlr4/Parser.py:376) (6 samples, 0.16%)</title><rect x="16.0260%" y="244" width="0.1558%" height="15" fill="rgb(252,105,26)" fg:x="617" fg:w="6"/><text x="16.2760%" y="254.50"></text></g><g><title>addContextToParseTree (antlr4/Parser.py:366) (5 samples, 0.13%)</title><rect x="16.0519%" y="260" width="0.1299%" height="15" fill="rgb(220,39,43)" fg:x="618" fg:w="5"/><text x="16.3019%" y="270.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5257) (5 samples, 0.13%)</title><rect x="16.1818%" y="228" width="0.1299%" height="15" fill="rgb(229,68,48)" fg:x="623" fg:w="5"/><text x="16.4318%" y="238.50"></text></g><g><title>match (antlr4/Parser.py:121) (4 samples, 0.10%)</title><rect x="16.3896%" y="244" width="0.1039%" height="15" fill="rgb(252,8,32)" fg:x="631" fg:w="4"/><text x="16.6396%" y="254.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:145) (4 samples, 0.10%)</title><rect x="16.8831%" y="356" width="0.1039%" height="15" fill="rgb(223,20,43)" fg:x="650" fg:w="4"/><text x="17.1331%" y="366.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:170) (5 samples, 0.13%)</title><rect x="16.9870%" y="356" width="0.1299%" height="15" fill="rgb(229,81,49)" fg:x="654" fg:w="5"/><text x="17.2370%" y="366.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (5 samples, 0.13%)</title><rect x="17.1169%" y="356" width="0.1299%" height="15" fill="rgb(236,28,36)" fg:x="659" fg:w="5"/><text x="17.3669%" y="366.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:553) (6 samples, 0.16%)</title><rect x="17.2468%" y="372" width="0.1558%" height="15" fill="rgb(249,185,26)" fg:x="664" fg:w="6"/><text x="17.4968%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (8 samples, 0.21%)</title><rect x="17.2468%" y="356" width="0.2078%" height="15" fill="rgb(249,174,33)" fg:x="664" fg:w="8"/><text x="17.4968%" y="366.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (33 samples, 0.86%)</title><rect x="16.8571%" y="340" width="0.8571%" height="15" fill="rgb(233,201,37)" fg:x="649" fg:w="33"/><text x="17.1071%" y="350.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:195) (5 samples, 0.13%)</title><rect x="17.5844%" y="356" width="0.1299%" height="15" fill="rgb(221,78,26)" fg:x="677" fg:w="5"/><text x="17.8344%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (35 samples, 0.91%)</title><rect x="16.8312%" y="324" width="0.9091%" height="15" fill="rgb(250,127,30)" fg:x="648" fg:w="35"/><text x="17.0812%" y="334.50"></text></g><g><title>__init__ (antlr4/Token.py:85) (4 samples, 0.10%)</title><rect x="18.0260%" y="372" width="0.1039%" height="15" fill="rgb(230,49,44)" fg:x="694" fg:w="4"/><text x="18.2760%" y="382.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (14 samples, 0.36%)</title><rect x="17.8182%" y="340" width="0.3636%" height="15" fill="rgb(229,67,23)" fg:x="686" fg:w="14"/><text x="18.0682%" y="350.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (14 samples, 0.36%)</title><rect x="17.8182%" y="356" width="0.3636%" height="15" fill="rgb(249,83,47)" fg:x="686" fg:w="14"/><text x="18.0682%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (17 samples, 0.44%)</title><rect x="17.7922%" y="324" width="0.4416%" height="15" fill="rgb(215,43,3)" fg:x="685" fg:w="17"/><text x="18.0422%" y="334.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (64 samples, 1.66%)</title><rect x="16.5974%" y="276" width="1.6623%" height="15" fill="rgb(238,154,13)" fg:x="639" fg:w="64"/><text x="16.8474%" y="286.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (61 samples, 1.58%)</title><rect x="16.6753%" y="292" width="1.5844%" height="15" fill="rgb(219,56,2)" fg:x="642" fg:w="61"/><text x="16.9253%" y="302.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (59 samples, 1.53%)</title><rect x="16.7273%" y="308" width="1.5325%" height="15" fill="rgb(233,0,4)" fg:x="644" fg:w="59"/><text x="16.9773%" y="318.50"></text></g><g><title>consume (antlr4/Parser.py:348) (68 samples, 1.77%)</title><rect x="16.5714%" y="260" width="1.7662%" height="15" fill="rgb(235,30,7)" fg:x="638" fg:w="68"/><text x="16.8214%" y="270.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:86) (4 samples, 0.10%)</title><rect x="18.5195%" y="292" width="0.1039%" height="15" fill="rgb(250,79,13)" fg:x="713" fg:w="4"/><text x="18.7695%" y="302.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (10 samples, 0.26%)</title><rect x="18.4156%" y="276" width="0.2597%" height="15" fill="rgb(211,146,34)" fg:x="709" fg:w="10"/><text x="18.6656%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:104) (4 samples, 0.10%)</title><rect x="18.6753%" y="276" width="0.1039%" height="15" fill="rgb(228,22,38)" fg:x="719" fg:w="4"/><text x="18.9253%" y="286.50"></text></g><g><title>__setattr__ (antlr4/tree/Tree.py:88) (4 samples, 0.10%)</title><rect x="18.8052%" y="292" width="0.1039%" height="15" fill="rgb(235,168,5)" fg:x="724" fg:w="4"/><text x="19.0552%" y="302.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5259) (99 samples, 2.57%)</title><rect x="16.3896%" y="228" width="2.5714%" height="15" fill="rgb(221,155,16)" fg:x="631" fg:w="99"/><text x="16.6396%" y="238.50">in..</text></g><g><title>match (antlr4/Parser.py:124) (93 samples, 2.42%)</title><rect x="16.5455%" y="244" width="2.4156%" height="15" fill="rgb(215,215,53)" fg:x="637" fg:w="93"/><text x="16.7955%" y="254.50">ma..</text></g><g><title>consume (antlr4/Parser.py:354) (22 samples, 0.57%)</title><rect x="18.3896%" y="260" width="0.5714%" height="15" fill="rgb(223,4,10)" fg:x="708" fg:w="22"/><text x="18.6396%" y="270.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:105) (7 samples, 0.18%)</title><rect x="18.7792%" y="276" width="0.1818%" height="15" fill="rgb(234,103,6)" fg:x="723" fg:w="7"/><text x="19.0292%" y="286.50"></text></g><g><title>__init__ (qasm3Parser.py:5081) (4 samples, 0.10%)</title><rect x="19.2468%" y="260" width="0.1039%" height="15" fill="rgb(227,97,0)" fg:x="741" fg:w="4"/><text x="19.4968%" y="270.50"></text></g><g><title>__init__ (qasm3Parser.py:5082) (8 samples, 0.21%)</title><rect x="19.3506%" y="260" width="0.2078%" height="15" fill="rgb(234,150,53)" fg:x="745" fg:w="8"/><text x="19.6006%" y="270.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (6 samples, 0.16%)</title><rect x="19.4026%" y="276" width="0.1558%" height="15" fill="rgb(228,201,54)" fg:x="747" fg:w="6"/><text x="19.6526%" y="286.50"></text></g><g><title>indexOperator (qasm3Parser.py:5137) (17 samples, 0.44%)</title><rect x="19.1429%" y="244" width="0.4416%" height="15" fill="rgb(222,22,37)" fg:x="737" fg:w="17"/><text x="19.3929%" y="254.50"></text></g><g><title>indexOperator (qasm3Parser.py:5138) (9 samples, 0.23%)</title><rect x="19.5844%" y="244" width="0.2338%" height="15" fill="rgb(237,53,32)" fg:x="754" fg:w="9"/><text x="19.8344%" y="254.50"></text></g><g><title>enterRule (antlr4/Parser.py:376) (6 samples, 0.16%)</title><rect x="19.6623%" y="260" width="0.1558%" height="15" fill="rgb(233,25,53)" fg:x="757" fg:w="6"/><text x="19.9123%" y="270.50"></text></g><g><title>addContextToParseTree (antlr4/Parser.py:366) (6 samples, 0.16%)</title><rect x="19.6623%" y="276" width="0.1558%" height="15" fill="rgb(210,40,34)" fg:x="757" fg:w="6"/><text x="19.9123%" y="286.50"></text></g><g><title>getExistingTargetState (antlr4/atn/LexerATNSimulator.py:207) (6 samples, 0.16%)</title><rect x="20.7273%" y="388" width="0.1558%" height="15" fill="rgb(241,220,44)" fg:x="798" fg:w="6"/><text x="20.9773%" y="398.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:170) (11 samples, 0.29%)</title><rect x="20.7013%" y="372" width="0.2857%" height="15" fill="rgb(235,28,35)" fg:x="797" fg:w="11"/><text x="20.9513%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (16 samples, 0.42%)</title><rect x="21.0130%" y="372" width="0.4156%" height="15" fill="rgb(210,56,17)" fg:x="809" fg:w="16"/><text x="21.2630%" y="382.50"></text></g><g><title>__eq__ (antlr4/dfa/DFAState.py:113) (10 samples, 0.26%)</title><rect x="21.1688%" y="388" width="0.2597%" height="15" fill="rgb(224,130,29)" fg:x="815" fg:w="10"/><text x="21.4188%" y="398.50"></text></g><g><title>__eq__ (antlr4/atn/ATNConfigSet.py:144) (4 samples, 0.10%)</title><rect x="21.3247%" y="404" width="0.1039%" height="15" fill="rgb(235,212,8)" fg:x="821" fg:w="4"/><text x="21.5747%" y="414.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:553) (4 samples, 0.10%)</title><rect x="21.4805%" y="388" width="0.1039%" height="15" fill="rgb(223,33,50)" fg:x="827" fg:w="4"/><text x="21.7305%" y="398.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (14 samples, 0.36%)</title><rect x="21.4286%" y="372" width="0.3636%" height="15" fill="rgb(219,149,13)" fg:x="825" fg:w="14"/><text x="21.6786%" y="382.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:559) (4 samples, 0.10%)</title><rect x="21.6883%" y="388" width="0.1039%" height="15" fill="rgb(250,156,29)" fg:x="835" fg:w="4"/><text x="21.9383%" y="398.50"></text></g><g><title>consume (antlr4/InputStream.py:46) (4 samples, 0.10%)</title><rect x="21.6883%" y="404" width="0.1039%" height="15" fill="rgb(216,193,19)" fg:x="835" fg:w="4"/><text x="21.9383%" y="414.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:187) (5 samples, 0.13%)</title><rect x="21.7922%" y="372" width="0.1299%" height="15" fill="rgb(216,135,14)" fg:x="839" fg:w="5"/><text x="22.0422%" y="382.50"></text></g><g><title>captureSimState (antlr4/atn/LexerATNSimulator.py:473) (5 samples, 0.13%)</title><rect x="21.7922%" y="388" width="0.1299%" height="15" fill="rgb(241,47,5)" fg:x="839" fg:w="5"/><text x="22.0422%" y="398.50"></text></g><g><title>LA (antlr4/InputStream.py:53) (5 samples, 0.13%)</title><rect x="22.0779%" y="388" width="0.1299%" height="15" fill="rgb(233,42,35)" fg:x="850" fg:w="5"/><text x="22.3279%" y="398.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:191) (12 samples, 0.31%)</title><rect x="21.9221%" y="372" width="0.3117%" height="15" fill="rgb(231,13,6)" fg:x="844" fg:w="12"/><text x="22.1721%" y="382.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (66 samples, 1.71%)</title><rect x="20.5455%" y="356" width="1.7143%" height="15" fill="rgb(207,181,40)" fg:x="791" fg:w="66"/><text x="20.7955%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (72 samples, 1.87%)</title><rect x="20.4935%" y="340" width="1.8701%" height="15" fill="rgb(254,173,49)" fg:x="789" fg:w="72"/><text x="20.7435%" y="350.50">n..</text></g><g><title>emit (antlr4/Lexer.py:222) (7 samples, 0.18%)</title><rect x="22.5455%" y="356" width="0.1818%" height="15" fill="rgb(221,1,38)" fg:x="868" fg:w="7"/><text x="22.7955%" y="366.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (6 samples, 0.16%)</title><rect x="22.5714%" y="372" width="0.1558%" height="15" fill="rgb(206,124,46)" fg:x="869" fg:w="6"/><text x="22.8214%" y="382.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (99 samples, 2.57%)</title><rect x="20.2078%" y="292" width="2.5714%" height="15" fill="rgb(249,21,11)" fg:x="778" fg:w="99"/><text x="20.4578%" y="302.50">co..</text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (98 samples, 2.55%)</title><rect x="20.2338%" y="308" width="2.5455%" height="15" fill="rgb(222,201,40)" fg:x="779" fg:w="98"/><text x="20.4838%" y="318.50">sy..</text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (93 samples, 2.42%)</title><rect x="20.3636%" y="324" width="2.4156%" height="15" fill="rgb(235,61,29)" fg:x="784" fg:w="93"/><text x="20.6136%" y="334.50">fe..</text></g><g><title>nextToken (antlr4/Lexer.py:153) (11 samples, 0.29%)</title><rect x="22.4935%" y="340" width="0.2857%" height="15" fill="rgb(219,207,3)" fg:x="866" fg:w="11"/><text x="22.7435%" y="350.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:101) (4 samples, 0.10%)</title><rect x="22.7792%" y="292" width="0.1039%" height="15" fill="rgb(222,56,46)" fg:x="877" fg:w="4"/><text x="23.0292%" y="302.50"></text></g><g><title>consume (antlr4/Parser.py:348) (106 samples, 2.75%)</title><rect x="20.1558%" y="276" width="2.7532%" height="15" fill="rgb(239,76,54)" fg:x="776" fg:w="106"/><text x="20.4058%" y="286.50">co..</text></g><g><title>__init__ (antlr4/tree/Tree.py:86) (4 samples, 0.10%)</title><rect x="22.9610%" y="308" width="0.1039%" height="15" fill="rgb(231,124,27)" fg:x="884" fg:w="4"/><text x="23.2110%" y="318.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (7 samples, 0.18%)</title><rect x="22.9351%" y="292" width="0.1818%" height="15" fill="rgb(249,195,6)" fg:x="883" fg:w="7"/><text x="23.1851%" y="302.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:104) (4 samples, 0.10%)</title><rect x="23.1169%" y="292" width="0.1039%" height="15" fill="rgb(237,174,47)" fg:x="890" fg:w="4"/><text x="23.3669%" y="302.50"></text></g><g><title>indexOperator (qasm3Parser.py:5143) (130 samples, 3.38%)</title><rect x="19.8961%" y="244" width="3.3766%" height="15" fill="rgb(206,201,31)" fg:x="766" fg:w="130"/><text x="20.1461%" y="254.50">ind..</text></g><g><title>match (antlr4/Parser.py:124) (124 samples, 3.22%)</title><rect x="20.0519%" y="260" width="3.2208%" height="15" fill="rgb(231,57,52)" fg:x="772" fg:w="124"/><text x="20.3019%" y="270.50">mat..</text></g><g><title>consume (antlr4/Parser.py:354) (13 samples, 0.34%)</title><rect x="22.9351%" y="276" width="0.3377%" height="15" fill="rgb(248,177,22)" fg:x="883" fg:w="13"/><text x="23.1851%" y="286.50"></text></g><g><title>indexOperator (qasm3Parser.py:5146) (4 samples, 0.10%)</title><rect x="23.3247%" y="244" width="0.1039%" height="15" fill="rgb(215,211,37)" fg:x="898" fg:w="4"/><text x="23.5747%" y="254.50"></text></g><g><title>indexOperator (qasm3Parser.py:5151) (4 samples, 0.10%)</title><rect x="23.4545%" y="244" width="0.1039%" height="15" fill="rgb(241,128,51)" fg:x="903" fg:w="4"/><text x="23.7045%" y="254.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:395) (4 samples, 0.10%)</title><rect x="23.7403%" y="276" width="0.1039%" height="15" fill="rgb(227,165,31)" fg:x="914" fg:w="4"/><text x="23.9903%" y="286.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:170) (7 samples, 0.18%)</title><rect x="24.4675%" y="372" width="0.1818%" height="15" fill="rgb(228,167,24)" fg:x="942" fg:w="7"/><text x="24.7175%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (6 samples, 0.16%)</title><rect x="24.6494%" y="372" width="0.1558%" height="15" fill="rgb(228,143,12)" fg:x="949" fg:w="6"/><text x="24.8994%" y="382.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:553) (6 samples, 0.16%)</title><rect x="24.8312%" y="388" width="0.1558%" height="15" fill="rgb(249,149,8)" fg:x="956" fg:w="6"/><text x="25.0812%" y="398.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (8 samples, 0.21%)</title><rect x="24.8052%" y="372" width="0.2078%" height="15" fill="rgb(243,35,44)" fg:x="955" fg:w="8"/><text x="25.0552%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:191) (5 samples, 0.13%)</title><rect x="25.0649%" y="372" width="0.1299%" height="15" fill="rgb(246,89,9)" fg:x="965" fg:w="5"/><text x="25.3149%" y="382.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (35 samples, 0.91%)</title><rect x="24.3636%" y="356" width="0.9091%" height="15" fill="rgb(233,213,13)" fg:x="938" fg:w="35"/><text x="24.6136%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (38 samples, 0.99%)</title><rect x="24.3377%" y="340" width="0.9870%" height="15" fill="rgb(233,141,41)" fg:x="937" fg:w="38"/><text x="24.5877%" y="350.50"></text></g><g><title>__init__ (antlr4/Token.py:76) (136 samples, 3.53%)</title><rect x="25.6104%" y="388" width="3.5325%" height="15" fill="rgb(239,167,4)" fg:x="986" fg:w="136"/><text x="25.8604%" y="398.50">__i..</text></g><g><title>emit (antlr4/Lexer.py:222) (144 samples, 3.74%)</title><rect x="25.4805%" y="356" width="3.7403%" height="15" fill="rgb(209,217,16)" fg:x="981" fg:w="144"/><text x="25.7305%" y="366.50">emit..</text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (141 samples, 3.66%)</title><rect x="25.5584%" y="372" width="3.6623%" height="15" fill="rgb(219,88,35)" fg:x="984" fg:w="141"/><text x="25.8084%" y="382.50">crea..</text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (196 samples, 5.09%)</title><rect x="24.1818%" y="324" width="5.0909%" height="15" fill="rgb(220,193,23)" fg:x="931" fg:w="196"/><text x="24.4318%" y="334.50">fetch ..</text></g><g><title>nextToken (antlr4/Lexer.py:153) (149 samples, 3.87%)</title><rect x="25.4026%" y="340" width="3.8701%" height="15" fill="rgb(230,90,52)" fg:x="978" fg:w="149"/><text x="25.6526%" y="350.50">next..</text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (200 samples, 5.19%)</title><rect x="24.1039%" y="292" width="5.1948%" height="15" fill="rgb(252,106,19)" fg:x="928" fg:w="200"/><text x="24.3539%" y="302.50">consum..</text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (198 samples, 5.14%)</title><rect x="24.1558%" y="308" width="5.1429%" height="15" fill="rgb(206,74,20)" fg:x="930" fg:w="198"/><text x="24.4058%" y="318.50">sync (..</text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:467) (204 samples, 5.30%)</title><rect x="24.0779%" y="276" width="5.2987%" height="15" fill="rgb(230,138,44)" fg:x="927" fg:w="204"/><text x="24.3279%" y="286.50">execAT..</text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (223 samples, 5.79%)</title><rect x="23.6623%" y="260" width="5.7922%" height="15" fill="rgb(235,182,43)" fg:x="911" fg:w="223"/><text x="23.9123%" y="270.50">adaptiv..</text></g><g><title>nextTokenOnChannel (antlr4/BufferedTokenStream.py:206) (4 samples, 0.10%)</title><rect x="29.5325%" y="308" width="0.1039%" height="15" fill="rgb(242,16,51)" fg:x="1137" fg:w="4"/><text x="29.7825%" y="318.50"></text></g><g><title>indexOperator (qasm3Parser.py:5154) (233 samples, 6.05%)</title><rect x="23.6104%" y="244" width="6.0519%" height="15" fill="rgb(248,9,4)" fg:x="909" fg:w="233"/><text x="23.8604%" y="254.50">indexOpe..</text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (8 samples, 0.21%)</title><rect x="29.4545%" y="260" width="0.2078%" height="15" fill="rgb(210,31,22)" fg:x="1134" fg:w="8"/><text x="29.7045%" y="270.50"></text></g><g><title>seek (antlr4/BufferedTokenStream.py:77) (7 samples, 0.18%)</title><rect x="29.4805%" y="276" width="0.1818%" height="15" fill="rgb(239,54,39)" fg:x="1135" fg:w="7"/><text x="29.7305%" y="286.50"></text></g><g><title>adjustSeekIndex (antlr4/CommonTokenStream.py:45) (7 samples, 0.18%)</title><rect x="29.4805%" y="292" width="0.1818%" height="15" fill="rgb(230,99,41)" fg:x="1135" fg:w="7"/><text x="29.7305%" y="302.50"></text></g><g><title>indexOperator (qasm3Parser.py:5156) (4 samples, 0.10%)</title><rect x="29.6623%" y="244" width="0.1039%" height="15" fill="rgb(253,106,12)" fg:x="1142" fg:w="4"/><text x="29.9123%" y="254.50"></text></g><g><title>expression (qasm3Parser.py:4277) (11 samples, 0.29%)</title><rect x="29.9221%" y="260" width="0.2857%" height="15" fill="rgb(213,46,41)" fg:x="1152" fg:w="11"/><text x="30.1721%" y="270.50"></text></g><g><title>__init__ (qasm3Parser.py:3684) (8 samples, 0.21%)</title><rect x="30.0000%" y="276" width="0.2078%" height="15" fill="rgb(215,133,35)" fg:x="1155" fg:w="8"/><text x="30.2500%" y="286.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (4 samples, 0.10%)</title><rect x="30.1039%" y="292" width="0.1039%" height="15" fill="rgb(213,28,5)" fg:x="1159" fg:w="4"/><text x="30.3539%" y="302.50"></text></g><g><title>expression (qasm3Parser.py:4280) (9 samples, 0.23%)</title><rect x="30.2078%" y="260" width="0.2338%" height="15" fill="rgb(215,77,49)" fg:x="1163" fg:w="9"/><text x="30.4578%" y="270.50"></text></g><g><title>enterRecursionRule (antlr4/Parser.py:413) (5 samples, 0.13%)</title><rect x="30.3117%" y="276" width="0.1299%" height="15" fill="rgb(248,100,22)" fg:x="1167" fg:w="5"/><text x="30.5617%" y="286.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:395) (4 samples, 0.10%)</title><rect x="30.7273%" y="292" width="0.1039%" height="15" fill="rgb(208,67,9)" fg:x="1183" fg:w="4"/><text x="30.9773%" y="302.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (4 samples, 0.10%)</title><rect x="30.7273%" y="308" width="0.1039%" height="15" fill="rgb(219,133,21)" fg:x="1183" fg:w="4"/><text x="30.9773%" y="318.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (7 samples, 0.18%)</title><rect x="30.7013%" y="276" width="0.1818%" height="15" fill="rgb(246,46,29)" fg:x="1182" fg:w="7"/><text x="30.9513%" y="286.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (5 samples, 0.13%)</title><rect x="30.8831%" y="276" width="0.1299%" height="15" fill="rgb(246,185,52)" fg:x="1189" fg:w="5"/><text x="31.1331%" y="286.50"></text></g><g><title>expression (qasm3Parser.py:4286) (19 samples, 0.49%)</title><rect x="30.5455%" y="260" width="0.4935%" height="15" fill="rgb(252,136,11)" fg:x="1176" fg:w="19"/><text x="30.7955%" y="270.50"></text></g><g><title>__init__ (qasm3Parser.py:4232) (4 samples, 0.10%)</title><rect x="31.2727%" y="276" width="0.1039%" height="15" fill="rgb(219,138,53)" fg:x="1204" fg:w="4"/><text x="31.5227%" y="286.50"></text></g><g><title>expression (qasm3Parser.py:4377) (11 samples, 0.29%)</title><rect x="31.1429%" y="260" width="0.2857%" height="15" fill="rgb(211,51,23)" fg:x="1199" fg:w="11"/><text x="31.3929%" y="270.50"></text></g><g><title>expression (qasm3Parser.py:4381) (4 samples, 0.10%)</title><rect x="31.4545%" y="260" width="0.1039%" height="15" fill="rgb(247,221,28)" fg:x="1211" fg:w="4"/><text x="31.7045%" y="270.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (4 samples, 0.10%)</title><rect x="31.4545%" y="276" width="0.1039%" height="15" fill="rgb(251,222,45)" fg:x="1211" fg:w="4"/><text x="31.7045%" y="286.50"></text></g><g><title>consume (antlr4/Parser.py:346) (6 samples, 0.16%)</title><rect x="31.7143%" y="276" width="0.1558%" height="15" fill="rgb(217,162,53)" fg:x="1221" fg:w="6"/><text x="31.9643%" y="286.50"></text></g><g><title>getCurrentToken (antlr4/Parser.py:313) (6 samples, 0.16%)</title><rect x="31.7143%" y="292" width="0.1558%" height="15" fill="rgb(229,93,14)" fg:x="1221" fg:w="6"/><text x="31.9643%" y="302.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:101) (4 samples, 0.10%)</title><rect x="31.9221%" y="292" width="0.1039%" height="15" fill="rgb(209,67,49)" fg:x="1229" fg:w="4"/><text x="32.1721%" y="302.50"></text></g><g><title>adjustSeekIndex (antlr4/CommonTokenStream.py:45) (4 samples, 0.10%)</title><rect x="31.9221%" y="308" width="0.1039%" height="15" fill="rgb(213,87,29)" fg:x="1229" fg:w="4"/><text x="32.1721%" y="318.50"></text></g><g><title>consume (antlr4/Parser.py:348) (7 samples, 0.18%)</title><rect x="31.8701%" y="276" width="0.1818%" height="15" fill="rgb(205,151,52)" fg:x="1227" fg:w="7"/><text x="32.1201%" y="286.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:85) (4 samples, 0.10%)</title><rect x="32.1558%" y="308" width="0.1039%" height="15" fill="rgb(253,215,39)" fg:x="1238" fg:w="4"/><text x="32.4058%" y="318.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (15 samples, 0.39%)</title><rect x="32.1039%" y="292" width="0.3896%" height="15" fill="rgb(221,220,41)" fg:x="1236" fg:w="15"/><text x="32.3539%" y="302.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:87) (7 samples, 0.18%)</title><rect x="32.3117%" y="308" width="0.1818%" height="15" fill="rgb(218,133,21)" fg:x="1244" fg:w="7"/><text x="32.5617%" y="318.50"></text></g><g><title>__setattr__ (antlr4/tree/Tree.py:89) (5 samples, 0.13%)</title><rect x="32.3636%" y="324" width="0.1299%" height="15" fill="rgb(221,193,43)" fg:x="1246" fg:w="5"/><text x="32.6136%" y="334.50"></text></g><g><title>expression (qasm3Parser.py:4386) (39 samples, 1.01%)</title><rect x="31.6623%" y="260" width="1.0130%" height="15" fill="rgb(240,128,52)" fg:x="1219" fg:w="39"/><text x="31.9123%" y="270.50"></text></g><g><title>consume (antlr4/Parser.py:354) (22 samples, 0.57%)</title><rect x="32.1039%" y="276" width="0.5714%" height="15" fill="rgb(253,114,12)" fg:x="1236" fg:w="22"/><text x="32.3539%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:105) (5 samples, 0.13%)</title><rect x="32.5455%" y="292" width="0.1299%" height="15" fill="rgb(215,223,47)" fg:x="1253" fg:w="5"/><text x="32.7955%" y="302.50"></text></g><g><title>expression (qasm3Parser.py:4390) (7 samples, 0.18%)</title><rect x="32.6753%" y="260" width="0.1818%" height="15" fill="rgb(248,225,23)" fg:x="1258" fg:w="7"/><text x="32.9253%" y="270.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (4 samples, 0.10%)</title><rect x="32.7532%" y="276" width="0.1039%" height="15" fill="rgb(250,108,0)" fg:x="1261" fg:w="4"/><text x="33.0032%" y="286.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:315) (5 samples, 0.13%)</title><rect x="32.9610%" y="276" width="0.1299%" height="15" fill="rgb(228,208,7)" fg:x="1269" fg:w="5"/><text x="33.2110%" y="286.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (6 samples, 0.16%)</title><rect x="33.0909%" y="276" width="0.1558%" height="15" fill="rgb(244,45,10)" fg:x="1274" fg:w="6"/><text x="33.3409%" y="286.50"></text></g><g><title>expression (qasm3Parser.py:4393) (21 samples, 0.55%)</title><rect x="32.8831%" y="260" width="0.5455%" height="15" fill="rgb(207,125,25)" fg:x="1266" fg:w="21"/><text x="33.1331%" y="270.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (6 samples, 0.16%)</title><rect x="33.2727%" y="276" width="0.1558%" height="15" fill="rgb(210,195,18)" fg:x="1281" fg:w="6"/><text x="33.5227%" y="286.50"></text></g><g><title>seek (antlr4/BufferedTokenStream.py:77) (6 samples, 0.16%)</title><rect x="33.2727%" y="292" width="0.1558%" height="15" fill="rgb(249,80,12)" fg:x="1281" fg:w="6"/><text x="33.5227%" y="302.50"></text></g><g><title>adjustSeekIndex (antlr4/CommonTokenStream.py:45) (5 samples, 0.13%)</title><rect x="33.2987%" y="308" width="0.1299%" height="15" fill="rgb(221,65,9)" fg:x="1282" fg:w="5"/><text x="33.5487%" y="318.50"></text></g><g><title>unrollRecursionContexts (antlr4/Parser.py:436) (6 samples, 0.16%)</title><rect x="33.5584%" y="276" width="0.1558%" height="15" fill="rgb(235,49,36)" fg:x="1292" fg:w="6"/><text x="33.8084%" y="286.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (5 samples, 0.13%)</title><rect x="33.5844%" y="292" width="0.1299%" height="15" fill="rgb(225,32,20)" fg:x="1293" fg:w="5"/><text x="33.8344%" y="302.50"></text></g><g><title>indexOperator (qasm3Parser.py:5157) (155 samples, 4.03%)</title><rect x="29.7662%" y="244" width="4.0260%" height="15" fill="rgb(215,141,46)" fg:x="1146" fg:w="155"/><text x="30.0162%" y="254.50">inde..</text></g><g><title>expression (qasm3Parser.py:4578) (14 samples, 0.36%)</title><rect x="33.4286%" y="260" width="0.3636%" height="15" fill="rgb(250,160,47)" fg:x="1287" fg:w="14"/><text x="33.6786%" y="270.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (6 samples, 0.16%)</title><rect x="33.8961%" y="260" width="0.1558%" height="15" fill="rgb(216,222,40)" fg:x="1305" fg:w="6"/><text x="34.1461%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5168) (16 samples, 0.42%)</title><rect x="33.7922%" y="244" width="0.4156%" height="15" fill="rgb(234,217,39)" fg:x="1301" fg:w="16"/><text x="34.0422%" y="254.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (4 samples, 0.10%)</title><rect x="34.1039%" y="260" width="0.1039%" height="15" fill="rgb(207,178,40)" fg:x="1313" fg:w="4"/><text x="34.3539%" y="270.50"></text></g><g><title>seek (antlr4/BufferedTokenStream.py:77) (4 samples, 0.10%)</title><rect x="34.1039%" y="276" width="0.1039%" height="15" fill="rgb(221,136,13)" fg:x="1313" fg:w="4"/><text x="34.3539%" y="286.50"></text></g><g><title>adjustSeekIndex (antlr4/CommonTokenStream.py:45) (4 samples, 0.10%)</title><rect x="34.1039%" y="292" width="0.1039%" height="15" fill="rgb(249,199,10)" fg:x="1313" fg:w="4"/><text x="34.3539%" y="302.50"></text></g><g><title>consume (antlr4/Parser.py:346) (10 samples, 0.26%)</title><rect x="34.5455%" y="276" width="0.2597%" height="15" fill="rgb(249,222,13)" fg:x="1330" fg:w="10"/><text x="34.7955%" y="286.50"></text></g><g><title>getCurrentToken (antlr4/Parser.py:313) (9 samples, 0.23%)</title><rect x="34.5714%" y="292" width="0.2338%" height="15" fill="rgb(244,185,38)" fg:x="1331" fg:w="9"/><text x="34.8214%" y="302.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:145) (4 samples, 0.10%)</title><rect x="35.0130%" y="372" width="0.1039%" height="15" fill="rgb(236,202,9)" fg:x="1348" fg:w="4"/><text x="35.2630%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (8 samples, 0.21%)</title><rect x="35.1688%" y="372" width="0.2078%" height="15" fill="rgb(250,229,37)" fg:x="1354" fg:w="8"/><text x="35.4188%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (4 samples, 0.10%)</title><rect x="35.4026%" y="372" width="0.1039%" height="15" fill="rgb(206,174,23)" fg:x="1363" fg:w="4"/><text x="35.6526%" y="382.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (28 samples, 0.73%)</title><rect x="34.9870%" y="356" width="0.7273%" height="15" fill="rgb(211,33,43)" fg:x="1347" fg:w="28"/><text x="35.2370%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (30 samples, 0.78%)</title><rect x="34.9610%" y="340" width="0.7792%" height="15" fill="rgb(245,58,50)" fg:x="1346" fg:w="30"/><text x="35.2110%" y="350.50"></text></g><g><title>nextToken (antlr4/Lexer.py:141) (6 samples, 0.16%)</title><rect x="35.7403%" y="340" width="0.1558%" height="15" fill="rgb(244,68,36)" fg:x="1376" fg:w="6"/><text x="35.9903%" y="350.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (7 samples, 0.18%)</title><rect x="35.9740%" y="372" width="0.1818%" height="15" fill="rgb(232,229,15)" fg:x="1385" fg:w="7"/><text x="36.2240%" y="382.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (53 samples, 1.38%)</title><rect x="34.8052%" y="292" width="1.3766%" height="15" fill="rgb(254,30,23)" fg:x="1340" fg:w="53"/><text x="35.0552%" y="302.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (53 samples, 1.38%)</title><rect x="34.8052%" y="308" width="1.3766%" height="15" fill="rgb(235,160,14)" fg:x="1340" fg:w="53"/><text x="35.0552%" y="318.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (52 samples, 1.35%)</title><rect x="34.8312%" y="324" width="1.3506%" height="15" fill="rgb(212,155,44)" fg:x="1341" fg:w="52"/><text x="35.0812%" y="334.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (10 samples, 0.26%)</title><rect x="35.9221%" y="340" width="0.2597%" height="15" fill="rgb(226,2,50)" fg:x="1383" fg:w="10"/><text x="36.1721%" y="350.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (10 samples, 0.26%)</title><rect x="35.9221%" y="356" width="0.2597%" height="15" fill="rgb(234,177,6)" fg:x="1383" fg:w="10"/><text x="36.1721%" y="366.50"></text></g><g><title>consume (antlr4/Parser.py:348) (60 samples, 1.56%)</title><rect x="34.8052%" y="276" width="1.5584%" height="15" fill="rgb(217,24,9)" fg:x="1340" fg:w="60"/><text x="35.0552%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (6 samples, 0.16%)</title><rect x="36.4675%" y="292" width="0.1558%" height="15" fill="rgb(220,13,46)" fg:x="1404" fg:w="6"/><text x="36.7175%" y="302.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:104) (5 samples, 0.13%)</title><rect x="36.6234%" y="292" width="0.1299%" height="15" fill="rgb(239,221,27)" fg:x="1410" fg:w="5"/><text x="36.8734%" y="302.50"></text></g><g><title>indexOperator (qasm3Parser.py:5204) (93 samples, 2.42%)</title><rect x="34.3636%" y="244" width="2.4156%" height="15" fill="rgb(222,198,25)" fg:x="1323" fg:w="93"/><text x="34.6136%" y="254.50">in..</text></g><g><title>match (antlr4/Parser.py:124) (88 samples, 2.29%)</title><rect x="34.4935%" y="260" width="2.2857%" height="15" fill="rgb(211,99,13)" fg:x="1328" fg:w="88"/><text x="34.7435%" y="270.50">m..</text></g><g><title>consume (antlr4/Parser.py:354) (13 samples, 0.34%)</title><rect x="36.4416%" y="276" width="0.3377%" height="15" fill="rgb(232,111,31)" fg:x="1403" fg:w="13"/><text x="36.6916%" y="286.50"></text></g><g><title>exitRule (antlr4/Parser.py:381) (4 samples, 0.10%)</title><rect x="36.7792%" y="260" width="0.1039%" height="15" fill="rgb(245,82,37)" fg:x="1416" fg:w="4"/><text x="37.0292%" y="270.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5265) (687 samples, 17.84%)</title><rect x="19.1169%" y="228" width="17.8442%" height="15" fill="rgb(227,149,46)" fg:x="736" fg:w="687"/><text x="19.3669%" y="238.50">indexedIdentifier (qasm3Pars..</text></g><g><title>indexOperator (qasm3Parser.py:5210) (7 samples, 0.18%)</title><rect x="36.7792%" y="244" width="0.1818%" height="15" fill="rgb(218,36,50)" fg:x="1416" fg:w="7"/><text x="37.0292%" y="254.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5268) (4 samples, 0.10%)</title><rect x="37.0390%" y="228" width="0.1039%" height="15" fill="rgb(226,80,48)" fg:x="1426" fg:w="4"/><text x="37.2890%" y="238.50"></text></g><g><title>gateOperand (qasm3Parser.py:6163) (834 samples, 21.66%)</title><rect x="15.6883%" y="212" width="21.6623%" height="15" fill="rgb(238,224,15)" fg:x="604" fg:w="834"/><text x="15.9383%" y="222.50">gateOperand (qasm3Parser.py:6163)</text></g><g><title>indexedIdentifier (qasm3Parser.py:5275) (8 samples, 0.21%)</title><rect x="37.1429%" y="228" width="0.2078%" height="15" fill="rgb(241,136,10)" fg:x="1430" fg:w="8"/><text x="37.3929%" y="238.50"></text></g><g><title>exitRule (antlr4/Parser.py:381) (7 samples, 0.18%)</title><rect x="37.1688%" y="244" width="0.1818%" height="15" fill="rgb(208,32,45)" fg:x="1431" fg:w="7"/><text x="37.4188%" y="254.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (6 samples, 0.16%)</title><rect x="37.1948%" y="260" width="0.1558%" height="15" fill="rgb(207,135,9)" fg:x="1432" fg:w="6"/><text x="37.4448%" y="270.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6824) (946 samples, 24.57%)</title><rect x="13.0909%" y="196" width="24.5714%" height="15" fill="rgb(206,86,44)" fg:x="504" fg:w="946"/><text x="13.3409%" y="206.50">gateOperandList (qasm3Parser.py:6824)</text></g><g><title>gateOperand (qasm3Parser.py:6178) (12 samples, 0.31%)</title><rect x="37.3506%" y="212" width="0.3117%" height="15" fill="rgb(245,177,15)" fg:x="1438" fg:w="12"/><text x="37.6006%" y="222.50"></text></g><g><title>exitRule (antlr4/Parser.py:381) (9 samples, 0.23%)</title><rect x="37.4286%" y="228" width="0.2338%" height="15" fill="rgb(206,64,50)" fg:x="1441" fg:w="9"/><text x="37.6786%" y="238.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (6 samples, 0.16%)</title><rect x="37.5065%" y="244" width="0.1558%" height="15" fill="rgb(234,36,40)" fg:x="1444" fg:w="6"/><text x="37.7565%" y="254.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:395) (4 samples, 0.10%)</title><rect x="37.7922%" y="228" width="0.1039%" height="15" fill="rgb(213,64,8)" fg:x="1455" fg:w="4"/><text x="38.0422%" y="238.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (4 samples, 0.10%)</title><rect x="38.2078%" y="324" width="0.1039%" height="15" fill="rgb(210,75,36)" fg:x="1471" fg:w="4"/><text x="38.4578%" y="334.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (9 samples, 0.23%)</title><rect x="38.1039%" y="308" width="0.2338%" height="15" fill="rgb(229,88,21)" fg:x="1467" fg:w="9"/><text x="38.3539%" y="318.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (11 samples, 0.29%)</title><rect x="38.1039%" y="292" width="0.2857%" height="15" fill="rgb(252,204,47)" fg:x="1467" fg:w="11"/><text x="38.3539%" y="302.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:467) (17 samples, 0.44%)</title><rect x="38.0260%" y="228" width="0.4416%" height="15" fill="rgb(208,77,27)" fg:x="1464" fg:w="17"/><text x="38.2760%" y="238.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (17 samples, 0.44%)</title><rect x="38.0260%" y="244" width="0.4416%" height="15" fill="rgb(221,76,26)" fg:x="1464" fg:w="17"/><text x="38.2760%" y="254.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (16 samples, 0.42%)</title><rect x="38.0519%" y="260" width="0.4156%" height="15" fill="rgb(225,139,18)" fg:x="1465" fg:w="16"/><text x="38.3019%" y="270.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (15 samples, 0.39%)</title><rect x="38.0779%" y="276" width="0.3896%" height="15" fill="rgb(230,137,11)" fg:x="1466" fg:w="15"/><text x="38.3279%" y="286.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (28 samples, 0.73%)</title><rect x="37.7922%" y="212" width="0.7273%" height="15" fill="rgb(212,28,1)" fg:x="1455" fg:w="28"/><text x="38.0422%" y="222.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6827) (33 samples, 0.86%)</title><rect x="37.7403%" y="196" width="0.8571%" height="15" fill="rgb(248,164,17)" fg:x="1453" fg:w="33"/><text x="37.9903%" y="206.50"></text></g><g><title>consume (antlr4/Parser.py:348) (4 samples, 0.10%)</title><rect x="38.7273%" y="228" width="0.1039%" height="15" fill="rgb(222,171,42)" fg:x="1491" fg:w="4"/><text x="38.9773%" y="238.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (5 samples, 0.13%)</title><rect x="38.8312%" y="244" width="0.1299%" height="15" fill="rgb(243,84,45)" fg:x="1495" fg:w="5"/><text x="39.0812%" y="254.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:86) (4 samples, 0.10%)</title><rect x="38.8571%" y="260" width="0.1039%" height="15" fill="rgb(252,49,23)" fg:x="1496" fg:w="4"/><text x="39.1071%" y="270.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:104) (4 samples, 0.10%)</title><rect x="38.9610%" y="244" width="0.1039%" height="15" fill="rgb(215,19,7)" fg:x="1500" fg:w="4"/><text x="39.2110%" y="254.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6831) (18 samples, 0.47%)</title><rect x="38.6494%" y="196" width="0.4675%" height="15" fill="rgb(238,81,41)" fg:x="1488" fg:w="18"/><text x="38.8994%" y="206.50"></text></g><g><title>match (antlr4/Parser.py:124) (16 samples, 0.42%)</title><rect x="38.7013%" y="212" width="0.4156%" height="15" fill="rgb(210,199,37)" fg:x="1490" fg:w="16"/><text x="38.9513%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:354) (11 samples, 0.29%)</title><rect x="38.8312%" y="228" width="0.2857%" height="15" fill="rgb(244,192,49)" fg:x="1495" fg:w="11"/><text x="39.0812%" y="238.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (4 samples, 0.10%)</title><rect x="39.1169%" y="244" width="0.1039%" height="15" fill="rgb(226,211,11)" fg:x="1506" fg:w="4"/><text x="39.3669%" y="254.50"></text></g><g><title>gateOperand (qasm3Parser.py:6154) (5 samples, 0.13%)</title><rect x="39.1169%" y="212" width="0.1299%" height="15" fill="rgb(236,162,54)" fg:x="1506" fg:w="5"/><text x="39.3669%" y="222.50"></text></g><g><title>__init__ (qasm3Parser.py:6122) (5 samples, 0.13%)</title><rect x="39.1169%" y="228" width="0.1299%" height="15" fill="rgb(220,229,9)" fg:x="1506" fg:w="5"/><text x="39.3669%" y="238.50"></text></g><g><title>gateOperand (qasm3Parser.py:6155) (4 samples, 0.10%)</title><rect x="39.2468%" y="212" width="0.1039%" height="15" fill="rgb(250,87,22)" fg:x="1511" fg:w="4"/><text x="39.4968%" y="222.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5253) (4 samples, 0.10%)</title><rect x="39.4805%" y="228" width="0.1039%" height="15" fill="rgb(239,43,17)" fg:x="1520" fg:w="4"/><text x="39.7305%" y="238.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (13 samples, 0.34%)</title><rect x="39.8701%" y="340" width="0.3377%" height="15" fill="rgb(231,177,25)" fg:x="1535" fg:w="13"/><text x="40.1201%" y="350.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (14 samples, 0.36%)</title><rect x="39.8701%" y="324" width="0.3636%" height="15" fill="rgb(219,179,1)" fg:x="1535" fg:w="14"/><text x="40.1201%" y="334.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (22 samples, 0.57%)</title><rect x="39.8701%" y="308" width="0.5714%" height="15" fill="rgb(238,219,53)" fg:x="1535" fg:w="22"/><text x="40.1201%" y="318.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (6 samples, 0.16%)</title><rect x="40.2857%" y="324" width="0.1558%" height="15" fill="rgb(232,167,36)" fg:x="1551" fg:w="6"/><text x="40.5357%" y="334.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (6 samples, 0.16%)</title><rect x="40.2857%" y="340" width="0.1558%" height="15" fill="rgb(244,19,51)" fg:x="1551" fg:w="6"/><text x="40.5357%" y="350.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (5 samples, 0.13%)</title><rect x="40.3117%" y="356" width="0.1299%" height="15" fill="rgb(224,6,22)" fg:x="1552" fg:w="5"/><text x="40.5617%" y="366.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (24 samples, 0.62%)</title><rect x="39.8442%" y="276" width="0.6234%" height="15" fill="rgb(224,145,5)" fg:x="1534" fg:w="24"/><text x="40.0942%" y="286.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (23 samples, 0.60%)</title><rect x="39.8701%" y="292" width="0.5974%" height="15" fill="rgb(234,130,49)" fg:x="1535" fg:w="23"/><text x="40.1201%" y="302.50"></text></g><g><title>consume (antlr4/Parser.py:348) (25 samples, 0.65%)</title><rect x="39.8442%" y="260" width="0.6494%" height="15" fill="rgb(254,6,2)" fg:x="1534" fg:w="25"/><text x="40.0942%" y="270.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5259) (36 samples, 0.94%)</title><rect x="39.7403%" y="228" width="0.9351%" height="15" fill="rgb(208,96,46)" fg:x="1530" fg:w="36"/><text x="39.9903%" y="238.50"></text></g><g><title>match (antlr4/Parser.py:124) (33 samples, 0.86%)</title><rect x="39.8182%" y="244" width="0.8571%" height="15" fill="rgb(239,3,39)" fg:x="1533" fg:w="33"/><text x="40.0682%" y="254.50"></text></g><g><title>consume (antlr4/Parser.py:354) (5 samples, 0.13%)</title><rect x="40.5455%" y="260" width="0.1299%" height="15" fill="rgb(233,210,1)" fg:x="1561" fg:w="5"/><text x="40.7955%" y="270.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (5 samples, 0.13%)</title><rect x="40.5455%" y="276" width="0.1299%" height="15" fill="rgb(244,137,37)" fg:x="1561" fg:w="5"/><text x="40.7955%" y="286.50"></text></g><g><title>__init__ (qasm3Parser.py:5081) (31 samples, 0.81%)</title><rect x="40.8052%" y="260" width="0.8052%" height="15" fill="rgb(240,136,2)" fg:x="1571" fg:w="31"/><text x="41.0552%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5137) (39 samples, 1.01%)</title><rect x="40.7532%" y="244" width="1.0130%" height="15" fill="rgb(239,18,37)" fg:x="1569" fg:w="39"/><text x="41.0032%" y="254.50"></text></g><g><title>__init__ (qasm3Parser.py:5082) (6 samples, 0.16%)</title><rect x="41.6104%" y="260" width="0.1558%" height="15" fill="rgb(218,185,22)" fg:x="1602" fg:w="6"/><text x="41.8604%" y="270.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:553) (7 samples, 0.18%)</title><rect x="42.2338%" y="388" width="0.1818%" height="15" fill="rgb(225,218,4)" fg:x="1626" fg:w="7"/><text x="42.4838%" y="398.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (8 samples, 0.21%)</title><rect x="42.2338%" y="372" width="0.2078%" height="15" fill="rgb(230,182,32)" fg:x="1626" fg:w="8"/><text x="42.4838%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:187) (5 samples, 0.13%)</title><rect x="42.4675%" y="372" width="0.1299%" height="15" fill="rgb(242,56,43)" fg:x="1635" fg:w="5"/><text x="42.7175%" y="382.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (28 samples, 0.73%)</title><rect x="42.0000%" y="356" width="0.7273%" height="15" fill="rgb(233,99,24)" fg:x="1617" fg:w="28"/><text x="42.2500%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (32 samples, 0.83%)</title><rect x="42.0000%" y="340" width="0.8312%" height="15" fill="rgb(234,209,42)" fg:x="1617" fg:w="32"/><text x="42.2500%" y="350.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (5 samples, 0.13%)</title><rect x="42.9351%" y="356" width="0.1299%" height="15" fill="rgb(227,7,12)" fg:x="1653" fg:w="5"/><text x="43.1851%" y="366.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (5 samples, 0.13%)</title><rect x="42.9351%" y="372" width="0.1299%" height="15" fill="rgb(245,203,43)" fg:x="1653" fg:w="5"/><text x="43.1851%" y="382.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (43 samples, 1.12%)</title><rect x="41.9740%" y="324" width="1.1169%" height="15" fill="rgb(238,205,33)" fg:x="1616" fg:w="43"/><text x="42.2240%" y="334.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (6 samples, 0.16%)</title><rect x="42.9351%" y="340" width="0.1558%" height="15" fill="rgb(231,56,7)" fg:x="1653" fg:w="6"/><text x="43.1851%" y="350.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (44 samples, 1.14%)</title><rect x="41.9740%" y="292" width="1.1429%" height="15" fill="rgb(244,186,29)" fg:x="1616" fg:w="44"/><text x="42.2240%" y="302.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (44 samples, 1.14%)</title><rect x="41.9740%" y="308" width="1.1429%" height="15" fill="rgb(234,111,31)" fg:x="1616" fg:w="44"/><text x="42.2240%" y="318.50"></text></g><g><title>consume (antlr4/Parser.py:348) (48 samples, 1.25%)</title><rect x="41.9221%" y="276" width="1.2468%" height="15" fill="rgb(241,149,10)" fg:x="1614" fg:w="48"/><text x="42.1721%" y="286.50"></text></g><g><title>indexOperator (qasm3Parser.py:5143) (67 samples, 1.74%)</title><rect x="41.8442%" y="244" width="1.7403%" height="15" fill="rgb(249,206,44)" fg:x="1611" fg:w="67"/><text x="42.0942%" y="254.50"></text></g><g><title>match (antlr4/Parser.py:124) (64 samples, 1.66%)</title><rect x="41.9221%" y="260" width="1.6623%" height="15" fill="rgb(251,153,30)" fg:x="1614" fg:w="64"/><text x="42.1721%" y="270.50"></text></g><g><title>consume (antlr4/Parser.py:354) (16 samples, 0.42%)</title><rect x="43.1688%" y="276" width="0.4156%" height="15" fill="rgb(239,152,38)" fg:x="1662" fg:w="16"/><text x="43.4188%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:105) (13 samples, 0.34%)</title><rect x="43.2468%" y="292" width="0.3377%" height="15" fill="rgb(249,139,47)" fg:x="1665" fg:w="13"/><text x="43.4968%" y="302.50"></text></g><g><title>__setattr__ (antlr4/tree/Tree.py:88) (13 samples, 0.34%)</title><rect x="43.2468%" y="308" width="0.3377%" height="15" fill="rgb(244,64,35)" fg:x="1665" fg:w="13"/><text x="43.4968%" y="318.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (7 samples, 0.18%)</title><rect x="44.0779%" y="356" width="0.1818%" height="15" fill="rgb(216,46,15)" fg:x="1697" fg:w="7"/><text x="44.3279%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (13 samples, 0.34%)</title><rect x="44.0000%" y="340" width="0.3377%" height="15" fill="rgb(250,74,19)" fg:x="1694" fg:w="13"/><text x="44.2500%" y="350.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (4 samples, 0.10%)</title><rect x="44.3377%" y="340" width="0.1039%" height="15" fill="rgb(249,42,33)" fg:x="1707" fg:w="4"/><text x="44.5877%" y="350.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (4 samples, 0.10%)</title><rect x="44.3377%" y="356" width="0.1039%" height="15" fill="rgb(242,149,17)" fg:x="1707" fg:w="4"/><text x="44.5877%" y="366.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (4 samples, 0.10%)</title><rect x="44.3377%" y="372" width="0.1039%" height="15" fill="rgb(244,29,21)" fg:x="1707" fg:w="4"/><text x="44.5877%" y="382.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (21 samples, 0.55%)</title><rect x="43.9221%" y="292" width="0.5455%" height="15" fill="rgb(220,130,37)" fg:x="1691" fg:w="21"/><text x="44.1721%" y="302.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (20 samples, 0.52%)</title><rect x="43.9481%" y="308" width="0.5195%" height="15" fill="rgb(211,67,2)" fg:x="1692" fg:w="20"/><text x="44.1981%" y="318.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (20 samples, 0.52%)</title><rect x="43.9481%" y="324" width="0.5195%" height="15" fill="rgb(235,68,52)" fg:x="1692" fg:w="20"/><text x="44.1981%" y="334.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:467) (25 samples, 0.65%)</title><rect x="43.9221%" y="276" width="0.6494%" height="15" fill="rgb(246,142,3)" fg:x="1691" fg:w="25"/><text x="44.1721%" y="286.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (34 samples, 0.88%)</title><rect x="43.7403%" y="260" width="0.8831%" height="15" fill="rgb(241,25,7)" fg:x="1684" fg:w="34"/><text x="43.9903%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5154) (38 samples, 0.99%)</title><rect x="43.6883%" y="244" width="0.9870%" height="15" fill="rgb(242,119,39)" fg:x="1682" fg:w="38"/><text x="43.9383%" y="254.50"></text></g><g><title>expression (qasm3Parser.py:4277) (7 samples, 0.18%)</title><rect x="44.7273%" y="260" width="0.1818%" height="15" fill="rgb(241,98,45)" fg:x="1722" fg:w="7"/><text x="44.9773%" y="270.50"></text></g><g><title>__init__ (qasm3Parser.py:3684) (6 samples, 0.16%)</title><rect x="44.7532%" y="276" width="0.1558%" height="15" fill="rgb(254,28,30)" fg:x="1723" fg:w="6"/><text x="45.0032%" y="286.50"></text></g><g><title>expression (qasm3Parser.py:4286) (6 samples, 0.16%)</title><rect x="45.0130%" y="260" width="0.1558%" height="15" fill="rgb(241,142,54)" fg:x="1733" fg:w="6"/><text x="45.2630%" y="270.50"></text></g><g><title>expression (qasm3Parser.py:4377) (4 samples, 0.10%)</title><rect x="45.1688%" y="260" width="0.1039%" height="15" fill="rgb(222,85,15)" fg:x="1739" fg:w="4"/><text x="45.4188%" y="270.50"></text></g><g><title>__init__ (qasm3Parser.py:4232) (4 samples, 0.10%)</title><rect x="45.1688%" y="276" width="0.1039%" height="15" fill="rgb(210,85,47)" fg:x="1739" fg:w="4"/><text x="45.4188%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (17 samples, 0.44%)</title><rect x="45.4545%" y="292" width="0.4416%" height="15" fill="rgb(224,206,25)" fg:x="1750" fg:w="17"/><text x="45.7045%" y="302.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:85) (16 samples, 0.42%)</title><rect x="45.4805%" y="308" width="0.4156%" height="15" fill="rgb(243,201,19)" fg:x="1751" fg:w="16"/><text x="45.7305%" y="318.50"></text></g><g><title>expression (qasm3Parser.py:4386) (25 samples, 0.65%)</title><rect x="45.2987%" y="260" width="0.6494%" height="15" fill="rgb(236,59,4)" fg:x="1744" fg:w="25"/><text x="45.5487%" y="270.50"></text></g><g><title>consume (antlr4/Parser.py:354) (19 samples, 0.49%)</title><rect x="45.4545%" y="276" width="0.4935%" height="15" fill="rgb(254,179,45)" fg:x="1750" fg:w="19"/><text x="45.7045%" y="286.50"></text></g><g><title>expression (qasm3Parser.py:4390) (5 samples, 0.13%)</title><rect x="45.9481%" y="260" width="0.1299%" height="15" fill="rgb(226,14,10)" fg:x="1769" fg:w="5"/><text x="46.1981%" y="270.50"></text></g><g><title>expression (qasm3Parser.py:4393) (7 samples, 0.18%)</title><rect x="46.1039%" y="260" width="0.1818%" height="15" fill="rgb(244,27,41)" fg:x="1775" fg:w="7"/><text x="46.3539%" y="270.50"></text></g><g><title>unrollRecursionContexts (antlr4/Parser.py:436) (6 samples, 0.16%)</title><rect x="46.2857%" y="276" width="0.1558%" height="15" fill="rgb(235,35,32)" fg:x="1782" fg:w="6"/><text x="46.5357%" y="286.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (5 samples, 0.13%)</title><rect x="46.3117%" y="292" width="0.1299%" height="15" fill="rgb(218,68,31)" fg:x="1783" fg:w="5"/><text x="46.5617%" y="302.50"></text></g><g><title>indexOperator (qasm3Parser.py:5157) (68 samples, 1.77%)</title><rect x="44.7013%" y="244" width="1.7662%" height="15" fill="rgb(207,120,37)" fg:x="1721" fg:w="68"/><text x="44.9513%" y="254.50"></text></g><g><title>expression (qasm3Parser.py:4578) (7 samples, 0.18%)</title><rect x="46.2857%" y="260" width="0.1818%" height="15" fill="rgb(227,98,0)" fg:x="1782" fg:w="7"/><text x="46.5357%" y="270.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (5 samples, 0.13%)</title><rect x="46.4935%" y="260" width="0.1299%" height="15" fill="rgb(207,7,3)" fg:x="1790" fg:w="5"/><text x="46.7435%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5168) (8 samples, 0.21%)</title><rect x="46.4675%" y="244" width="0.2078%" height="15" fill="rgb(206,98,19)" fg:x="1789" fg:w="8"/><text x="46.7175%" y="254.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (4 samples, 0.10%)</title><rect x="47.0390%" y="356" width="0.1039%" height="15" fill="rgb(217,5,26)" fg:x="1811" fg:w="4"/><text x="47.2890%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (6 samples, 0.16%)</title><rect x="47.0130%" y="340" width="0.1558%" height="15" fill="rgb(235,190,38)" fg:x="1810" fg:w="6"/><text x="47.2630%" y="350.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (18 samples, 0.47%)</title><rect x="46.9870%" y="324" width="0.4675%" height="15" fill="rgb(247,86,24)" fg:x="1809" fg:w="18"/><text x="47.2370%" y="334.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (9 samples, 0.23%)</title><rect x="47.2208%" y="340" width="0.2338%" height="15" fill="rgb(205,101,16)" fg:x="1818" fg:w="9"/><text x="47.4708%" y="350.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (9 samples, 0.23%)</title><rect x="47.2208%" y="356" width="0.2338%" height="15" fill="rgb(246,168,33)" fg:x="1818" fg:w="9"/><text x="47.4708%" y="366.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (7 samples, 0.18%)</title><rect x="47.2727%" y="372" width="0.1818%" height="15" fill="rgb(231,114,1)" fg:x="1820" fg:w="7"/><text x="47.5227%" y="382.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (22 samples, 0.57%)</title><rect x="46.9091%" y="292" width="0.5714%" height="15" fill="rgb(207,184,53)" fg:x="1806" fg:w="22"/><text x="47.1591%" y="302.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (19 samples, 0.49%)</title><rect x="46.9870%" y="308" width="0.4935%" height="15" fill="rgb(224,95,51)" fg:x="1809" fg:w="19"/><text x="47.2370%" y="318.50"></text></g><g><title>consume (antlr4/Parser.py:348) (25 samples, 0.65%)</title><rect x="46.8571%" y="276" width="0.6494%" height="15" fill="rgb(212,188,45)" fg:x="1804" fg:w="25"/><text x="47.1071%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (4 samples, 0.10%)</title><rect x="47.5065%" y="292" width="0.1039%" height="15" fill="rgb(223,154,38)" fg:x="1829" fg:w="4"/><text x="47.7565%" y="302.50"></text></g><g><title>indexOperator (qasm3Parser.py:5204) (33 samples, 0.86%)</title><rect x="46.7792%" y="244" width="0.8571%" height="15" fill="rgb(251,22,52)" fg:x="1801" fg:w="33"/><text x="47.0292%" y="254.50"></text></g><g><title>match (antlr4/Parser.py:124) (31 samples, 0.81%)</title><rect x="46.8312%" y="260" width="0.8052%" height="15" fill="rgb(229,209,22)" fg:x="1803" fg:w="31"/><text x="47.0812%" y="270.50"></text></g><g><title>consume (antlr4/Parser.py:354) (5 samples, 0.13%)</title><rect x="47.5065%" y="276" width="0.1299%" height="15" fill="rgb(234,138,34)" fg:x="1829" fg:w="5"/><text x="47.7565%" y="286.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5265) (266 samples, 6.91%)</title><rect x="40.7532%" y="228" width="6.9091%" height="15" fill="rgb(212,95,11)" fg:x="1569" fg:w="266"/><text x="41.0032%" y="238.50">indexedId..</text></g><g><title>gateOperand (qasm3Parser.py:6163) (322 samples, 8.36%)</title><rect x="39.4545%" y="212" width="8.3636%" height="15" fill="rgb(240,179,47)" fg:x="1519" fg:w="322"/><text x="39.7045%" y="222.50">gateOperand ..</text></g><g><title>indexedIdentifier (qasm3Parser.py:5275) (4 samples, 0.10%)</title><rect x="47.7143%" y="228" width="0.1039%" height="15" fill="rgb(240,163,11)" fg:x="1837" fg:w="4"/><text x="47.9643%" y="238.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6833) (340 samples, 8.83%)</title><rect x="39.1169%" y="196" width="8.8312%" height="15" fill="rgb(236,37,12)" fg:x="1506" fg:w="340"/><text x="39.3669%" y="206.50">gateOperandL..</text></g><g><title>gateOperand (qasm3Parser.py:6178) (5 samples, 0.13%)</title><rect x="47.8182%" y="212" width="0.1299%" height="15" fill="rgb(232,164,16)" fg:x="1841" fg:w="5"/><text x="48.0682%" y="222.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:395) (5 samples, 0.13%)</title><rect x="48.0000%" y="228" width="0.1299%" height="15" fill="rgb(244,205,15)" fg:x="1848" fg:w="5"/><text x="48.2500%" y="238.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (9 samples, 0.23%)</title><rect x="47.9740%" y="212" width="0.2338%" height="15" fill="rgb(223,117,47)" fg:x="1847" fg:w="9"/><text x="48.2240%" y="222.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6836) (12 samples, 0.31%)</title><rect x="47.9481%" y="196" width="0.3117%" height="15" fill="rgb(244,107,35)" fg:x="1846" fg:w="12"/><text x="48.1981%" y="206.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6840) (4 samples, 0.10%)</title><rect x="48.2597%" y="196" width="0.1039%" height="15" fill="rgb(205,140,8)" fg:x="1858" fg:w="4"/><text x="48.5097%" y="206.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (4 samples, 0.10%)</title><rect x="48.2597%" y="212" width="0.1039%" height="15" fill="rgb(228,84,46)" fg:x="1858" fg:w="4"/><text x="48.5097%" y="222.50"></text></g><g><title>exitRule (antlr4/Parser.py:381) (5 samples, 0.13%)</title><rect x="48.3636%" y="212" width="0.1299%" height="15" fill="rgb(254,188,9)" fg:x="1862" fg:w="5"/><text x="48.6136%" y="222.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2413) (1,420 samples, 36.88%)</title><rect x="11.6364%" y="180" width="36.8831%" height="15" fill="rgb(206,112,54)" fg:x="448" fg:w="1420"/><text x="11.8864%" y="190.50">gateCallStatement (qasm3Parser.py:2413)</text></g><g><title>gateOperandList (qasm3Parser.py:6851) (6 samples, 0.16%)</title><rect x="48.3636%" y="196" width="0.1558%" height="15" fill="rgb(216,84,49)" fg:x="1862" fg:w="6"/><text x="48.6136%" y="206.50"></text></g><g><title>match (antlr4/Parser.py:121) (6 samples, 0.16%)</title><rect x="48.5455%" y="196" width="0.1558%" height="15" fill="rgb(214,194,35)" fg:x="1869" fg:w="6"/><text x="48.7955%" y="206.50"></text></g><g><title>getCurrentToken (antlr4/Parser.py:313) (5 samples, 0.13%)</title><rect x="48.5714%" y="212" width="0.1299%" height="15" fill="rgb(249,28,3)" fg:x="1870" fg:w="5"/><text x="48.8214%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:346) (7 samples, 0.18%)</title><rect x="48.7013%" y="212" width="0.1818%" height="15" fill="rgb(222,56,52)" fg:x="1875" fg:w="7"/><text x="48.9513%" y="222.50"></text></g><g><title>getCurrentToken (antlr4/Parser.py:313) (5 samples, 0.13%)</title><rect x="48.7532%" y="228" width="0.1299%" height="15" fill="rgb(245,217,50)" fg:x="1877" fg:w="5"/><text x="49.0032%" y="238.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:145) (5 samples, 0.13%)</title><rect x="49.2468%" y="308" width="0.1299%" height="15" fill="rgb(213,201,24)" fg:x="1896" fg:w="5"/><text x="49.4968%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:170) (8 samples, 0.21%)</title><rect x="49.4026%" y="308" width="0.2078%" height="15" fill="rgb(248,116,28)" fg:x="1902" fg:w="8"/><text x="49.6526%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (16 samples, 0.42%)</title><rect x="49.6364%" y="308" width="0.4156%" height="15" fill="rgb(219,72,43)" fg:x="1911" fg:w="16"/><text x="49.8864%" y="318.50"></text></g><g><title>__eq__ (antlr4/dfa/DFAState.py:113) (11 samples, 0.29%)</title><rect x="49.7662%" y="324" width="0.2857%" height="15" fill="rgb(209,138,14)" fg:x="1916" fg:w="11"/><text x="50.0162%" y="334.50"></text></g><g><title>LA (antlr4/InputStream.py:53) (4 samples, 0.10%)</title><rect x="50.2338%" y="340" width="0.1039%" height="15" fill="rgb(222,18,33)" fg:x="1934" fg:w="4"/><text x="50.4838%" y="350.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:553) (9 samples, 0.23%)</title><rect x="50.1818%" y="324" width="0.2338%" height="15" fill="rgb(213,199,7)" fg:x="1932" fg:w="9"/><text x="50.4318%" y="334.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (15 samples, 0.39%)</title><rect x="50.1039%" y="308" width="0.3896%" height="15" fill="rgb(250,110,10)" fg:x="1929" fg:w="15"/><text x="50.3539%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:187) (11 samples, 0.29%)</title><rect x="50.4935%" y="308" width="0.2857%" height="15" fill="rgb(248,123,6)" fg:x="1944" fg:w="11"/><text x="50.7435%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:191) (7 samples, 0.18%)</title><rect x="50.8052%" y="308" width="0.1818%" height="15" fill="rgb(206,91,31)" fg:x="1956" fg:w="7"/><text x="51.0552%" y="318.50"></text></g><g><title>execute (antlr4/atn/LexerAction.py:51) (4 samples, 0.10%)</title><rect x="51.2987%" y="372" width="0.1039%" height="15" fill="rgb(211,154,13)" fg:x="1975" fg:w="4"/><text x="51.5487%" y="382.50"></text></g><g><title>failOrAccept (antlr4/atn/LexerATNSimulator.py:248) (15 samples, 0.39%)</title><rect x="51.0909%" y="324" width="0.3896%" height="15" fill="rgb(225,148,7)" fg:x="1967" fg:w="15"/><text x="51.3409%" y="334.50"></text></g><g><title>accept (antlr4/atn/LexerATNSimulator.py:295) (10 samples, 0.26%)</title><rect x="51.2208%" y="340" width="0.2597%" height="15" fill="rgb(220,160,43)" fg:x="1972" fg:w="10"/><text x="51.4708%" y="350.50"></text></g><g><title>execute (antlr4/atn/LexerActionExecutor.py:126) (7 samples, 0.18%)</title><rect x="51.2987%" y="356" width="0.1818%" height="15" fill="rgb(213,52,39)" fg:x="1975" fg:w="7"/><text x="51.5487%" y="366.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (91 samples, 2.36%)</title><rect x="49.1948%" y="292" width="2.3636%" height="15" fill="rgb(243,137,7)" fg:x="1894" fg:w="91"/><text x="49.4448%" y="302.50">ma..</text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:195) (21 samples, 0.55%)</title><rect x="51.0130%" y="308" width="0.5455%" height="15" fill="rgb(230,79,13)" fg:x="1964" fg:w="21"/><text x="51.2630%" y="318.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (94 samples, 2.44%)</title><rect x="49.1429%" y="276" width="2.4416%" height="15" fill="rgb(247,105,23)" fg:x="1892" fg:w="94"/><text x="49.3929%" y="286.50">ne..</text></g><g><title>nextToken (antlr4/Lexer.py:141) (5 samples, 0.13%)</title><rect x="51.5844%" y="276" width="0.1299%" height="15" fill="rgb(223,179,41)" fg:x="1986" fg:w="5"/><text x="51.8344%" y="286.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (10 samples, 0.26%)</title><rect x="51.7922%" y="276" width="0.2597%" height="15" fill="rgb(218,9,34)" fg:x="1994" fg:w="10"/><text x="52.0422%" y="286.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (10 samples, 0.26%)</title><rect x="51.7922%" y="292" width="0.2597%" height="15" fill="rgb(222,106,8)" fg:x="1994" fg:w="10"/><text x="52.0422%" y="302.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (8 samples, 0.21%)</title><rect x="51.8442%" y="308" width="0.2078%" height="15" fill="rgb(211,220,0)" fg:x="1996" fg:w="8"/><text x="52.0942%" y="318.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (124 samples, 3.22%)</title><rect x="48.8831%" y="228" width="3.2208%" height="15" fill="rgb(229,52,16)" fg:x="1882" fg:w="124"/><text x="49.1331%" y="238.50">con..</text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (123 samples, 3.19%)</title><rect x="48.9091%" y="244" width="3.1948%" height="15" fill="rgb(212,155,18)" fg:x="1883" fg:w="123"/><text x="49.1591%" y="254.50">syn..</text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (121 samples, 3.14%)</title><rect x="48.9610%" y="260" width="3.1429%" height="15" fill="rgb(242,21,14)" fg:x="1885" fg:w="121"/><text x="49.2110%" y="270.50">fet..</text></g><g><title>consume (antlr4/BufferedTokenStream.py:101) (8 samples, 0.21%)</title><rect x="52.1039%" y="228" width="0.2078%" height="15" fill="rgb(222,19,48)" fg:x="2006" fg:w="8"/><text x="52.3539%" y="238.50"></text></g><g><title>adjustSeekIndex (antlr4/CommonTokenStream.py:45) (8 samples, 0.21%)</title><rect x="52.1039%" y="244" width="0.2078%" height="15" fill="rgb(232,45,27)" fg:x="2006" fg:w="8"/><text x="52.3539%" y="254.50"></text></g><g><title>consume (antlr4/Parser.py:348) (133 samples, 3.45%)</title><rect x="48.8831%" y="212" width="3.4545%" height="15" fill="rgb(249,103,42)" fg:x="1882" fg:w="133"/><text x="49.1331%" y="222.50">con..</text></g><g><title>__init__ (antlr4/tree/Tree.py:85) (116 samples, 3.01%)</title><rect x="52.4156%" y="244" width="3.0130%" height="15" fill="rgb(246,81,33)" fg:x="2018" fg:w="116"/><text x="52.6656%" y="254.50">__i..</text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (126 samples, 3.27%)</title><rect x="52.3636%" y="228" width="3.2727%" height="15" fill="rgb(252,33,42)" fg:x="2016" fg:w="126"/><text x="52.6136%" y="238.50">add..</text></g><g><title>__init__ (antlr4/tree/Tree.py:87) (6 samples, 0.16%)</title><rect x="55.4805%" y="244" width="0.1558%" height="15" fill="rgb(209,212,41)" fg:x="2136" fg:w="6"/><text x="55.7305%" y="254.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2415) (278 samples, 7.22%)</title><rect x="48.5195%" y="180" width="7.2208%" height="15" fill="rgb(207,154,6)" fg:x="1868" fg:w="278"/><text x="48.7695%" y="190.50">gateCallSt..</text></g><g><title>match (antlr4/Parser.py:124) (271 samples, 7.04%)</title><rect x="48.7013%" y="196" width="7.0390%" height="15" fill="rgb(223,64,47)" fg:x="1875" fg:w="271"/><text x="48.9513%" y="206.50">match (an..</text></g><g><title>consume (antlr4/Parser.py:354) (131 samples, 3.40%)</title><rect x="52.3377%" y="212" width="3.4026%" height="15" fill="rgb(211,161,38)" fg:x="2015" fg:w="131"/><text x="52.5877%" y="222.50">con..</text></g><g><title>exitRule (antlr4/Parser.py:381) (6 samples, 0.16%)</title><rect x="55.7403%" y="196" width="0.1558%" height="15" fill="rgb(219,138,40)" fg:x="2146" fg:w="6"/><text x="55.9903%" y="206.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (5 samples, 0.13%)</title><rect x="55.7662%" y="212" width="0.1299%" height="15" fill="rgb(241,228,46)" fg:x="2147" fg:w="5"/><text x="56.0162%" y="222.50"></text></g><g><title>statement (qasm3Parser.py:1002) (2,071 samples, 53.79%)</title><rect x="2.1558%" y="164" width="53.7922%" height="15" fill="rgb(223,209,38)" fg:x="83" fg:w="2071"/><text x="2.4058%" y="174.50">statement (qasm3Parser.py:1002)</text></g><g><title>gateCallStatement (qasm3Parser.py:2476) (8 samples, 0.21%)</title><rect x="55.7403%" y="180" width="0.2078%" height="15" fill="rgb(236,164,45)" fg:x="2146" fg:w="8"/><text x="55.9903%" y="190.50"></text></g><g><title>exitRule (antlr4/Parser.py:381) (7 samples, 0.18%)</title><rect x="56.0519%" y="180" width="0.1818%" height="15" fill="rgb(231,15,5)" fg:x="2158" fg:w="7"/><text x="56.3019%" y="190.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (4 samples, 0.10%)</title><rect x="56.1299%" y="196" width="0.1039%" height="15" fill="rgb(252,35,15)" fg:x="2161" fg:w="4"/><text x="56.3799%" y="206.50"></text></g><g><title>statement (qasm3Parser.py:1070) (10 samples, 0.26%)</title><rect x="56.0260%" y="164" width="0.2597%" height="15" fill="rgb(248,181,18)" fg:x="2157" fg:w="10"/><text x="56.2760%" y="174.50"></text></g><g><title>statement (qasm3Parser.py:888) (10 samples, 0.26%)</title><rect x="56.2857%" y="164" width="0.2597%" height="15" fill="rgb(233,39,42)" fg:x="2167" fg:w="10"/><text x="56.5357%" y="174.50"></text></g><g><title>__init__ (qasm3Parser.py:736) (7 samples, 0.18%)</title><rect x="56.3636%" y="180" width="0.1818%" height="15" fill="rgb(238,110,33)" fg:x="2170" fg:w="7"/><text x="56.6136%" y="190.50"></text></g><g><title>statement (qasm3Parser.py:889) (4 samples, 0.10%)</title><rect x="56.5455%" y="164" width="0.1039%" height="15" fill="rgb(233,195,10)" fg:x="2177" fg:w="4"/><text x="56.7955%" y="174.50"></text></g><g><title>statement (qasm3Parser.py:892) (6 samples, 0.16%)</title><rect x="56.7273%" y="164" width="0.1558%" height="15" fill="rgb(254,105,3)" fg:x="2184" fg:w="6"/><text x="56.9773%" y="174.50"></text></g><g><title>state (antlr4/Recognizer.py:143) (5 samples, 0.13%)</title><rect x="56.7532%" y="180" width="0.1299%" height="15" fill="rgb(221,225,9)" fg:x="2185" fg:w="5"/><text x="57.0032%" y="190.50"></text></g><g><title>statement (qasm3Parser.py:894) (6 samples, 0.16%)</title><rect x="56.8831%" y="164" width="0.1558%" height="15" fill="rgb(224,227,45)" fg:x="2190" fg:w="6"/><text x="57.1331%" y="174.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (6 samples, 0.16%)</title><rect x="56.8831%" y="180" width="0.1558%" height="15" fill="rgb(229,198,43)" fg:x="2190" fg:w="6"/><text x="57.1331%" y="190.50"></text></g><g><title>statement (qasm3Parser.py:900) (5 samples, 0.13%)</title><rect x="57.0390%" y="164" width="0.1299%" height="15" fill="rgb(206,209,35)" fg:x="2196" fg:w="5"/><text x="57.2890%" y="174.50"></text></g><g><title>statement (qasm3Parser.py:901) (4 samples, 0.10%)</title><rect x="57.1688%" y="164" width="0.1039%" height="15" fill="rgb(245,195,53)" fg:x="2201" fg:w="4"/><text x="57.4188%" y="174.50"></text></g><g><title>statement (qasm3Parser.py:904) (5 samples, 0.13%)</title><rect x="57.2727%" y="164" width="0.1299%" height="15" fill="rgb(240,92,26)" fg:x="2205" fg:w="5"/><text x="57.5227%" y="174.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (5 samples, 0.13%)</title><rect x="57.2727%" y="180" width="0.1299%" height="15" fill="rgb(207,40,23)" fg:x="2205" fg:w="5"/><text x="57.5227%" y="190.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:398) (6 samples, 0.16%)</title><rect x="57.7662%" y="196" width="0.1558%" height="15" fill="rgb(223,111,35)" fg:x="2224" fg:w="6"/><text x="58.0162%" y="206.50"></text></g><g><title>LA (antlr4/InputStream.py:53) (5 samples, 0.13%)</title><rect x="59.2727%" y="308" width="0.1299%" height="15" fill="rgb(229,147,28)" fg:x="2282" fg:w="5"/><text x="59.5227%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:145) (13 samples, 0.34%)</title><rect x="59.0909%" y="292" width="0.3377%" height="15" fill="rgb(211,29,28)" fg:x="2275" fg:w="13"/><text x="59.3409%" y="302.50"></text></g><g><title>getExistingTargetState (antlr4/atn/LexerATNSimulator.py:207) (10 samples, 0.26%)</title><rect x="59.6104%" y="308" width="0.2597%" height="15" fill="rgb(228,72,33)" fg:x="2295" fg:w="10"/><text x="59.8604%" y="318.50"></text></g><g><title>getExistingTargetState (antlr4/atn/LexerATNSimulator.py:210) (8 samples, 0.21%)</title><rect x="59.8961%" y="308" width="0.2078%" height="15" fill="rgb(205,214,31)" fg:x="2306" fg:w="8"/><text x="60.1461%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:170) (26 samples, 0.68%)</title><rect x="59.4545%" y="292" width="0.6753%" height="15" fill="rgb(224,111,15)" fg:x="2289" fg:w="26"/><text x="59.7045%" y="302.50"></text></g><g><title>__eq__ (antlr4/atn/ATNConfigSet.py:144) (4 samples, 0.10%)</title><rect x="60.7013%" y="324" width="0.1039%" height="15" fill="rgb(253,21,26)" fg:x="2337" fg:w="4"/><text x="60.9513%" y="334.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (25 samples, 0.65%)</title><rect x="60.2338%" y="292" width="0.6494%" height="15" fill="rgb(245,139,43)" fg:x="2319" fg:w="25"/><text x="60.4838%" y="302.50"></text></g><g><title>__eq__ (antlr4/dfa/DFAState.py:113) (15 samples, 0.39%)</title><rect x="60.4935%" y="308" width="0.3896%" height="15" fill="rgb(252,170,7)" fg:x="2329" fg:w="15"/><text x="60.7435%" y="318.50"></text></g><g><title>LA (antlr4/InputStream.py:53) (6 samples, 0.16%)</title><rect x="61.1169%" y="324" width="0.1558%" height="15" fill="rgb(231,118,14)" fg:x="2353" fg:w="6"/><text x="61.3669%" y="334.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:553) (15 samples, 0.39%)</title><rect x="60.9610%" y="308" width="0.3896%" height="15" fill="rgb(238,83,0)" fg:x="2347" fg:w="15"/><text x="61.2110%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (28 samples, 0.73%)</title><rect x="60.9351%" y="292" width="0.7273%" height="15" fill="rgb(221,39,39)" fg:x="2346" fg:w="28"/><text x="61.1851%" y="302.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:559) (6 samples, 0.16%)</title><rect x="61.5065%" y="308" width="0.1558%" height="15" fill="rgb(222,119,46)" fg:x="2368" fg:w="6"/><text x="61.7565%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:187) (4 samples, 0.10%)</title><rect x="61.7143%" y="292" width="0.1039%" height="15" fill="rgb(222,165,49)" fg:x="2376" fg:w="4"/><text x="61.9643%" y="302.50"></text></g><g><title>LA (antlr4/InputStream.py:53) (4 samples, 0.10%)</title><rect x="61.9221%" y="308" width="0.1039%" height="15" fill="rgb(219,113,52)" fg:x="2384" fg:w="4"/><text x="62.1721%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:191) (10 samples, 0.26%)</title><rect x="61.8442%" y="292" width="0.2597%" height="15" fill="rgb(214,7,15)" fg:x="2381" fg:w="10"/><text x="62.0942%" y="302.50"></text></g><g><title>seek (antlr4/InputStream.py:72) (4 samples, 0.10%)</title><rect x="62.4416%" y="340" width="0.1039%" height="15" fill="rgb(235,32,4)" fg:x="2404" fg:w="4"/><text x="62.6916%" y="350.50"></text></g><g><title>accept (antlr4/atn/LexerATNSimulator.py:290) (10 samples, 0.26%)</title><rect x="62.3377%" y="324" width="0.2597%" height="15" fill="rgb(238,90,54)" fg:x="2400" fg:w="10"/><text x="62.5877%" y="334.50"></text></g><g><title>failOrAccept (antlr4/atn/LexerATNSimulator.py:248) (24 samples, 0.62%)</title><rect x="62.2597%" y="308" width="0.6234%" height="15" fill="rgb(213,208,19)" fg:x="2397" fg:w="24"/><text x="62.5097%" y="318.50"></text></g><g><title>accept (antlr4/atn/LexerATNSimulator.py:295) (11 samples, 0.29%)</title><rect x="62.5974%" y="324" width="0.2857%" height="15" fill="rgb(233,156,4)" fg:x="2410" fg:w="11"/><text x="62.8474%" y="334.50"></text></g><g><title>execute (antlr4/atn/LexerActionExecutor.py:126) (5 samples, 0.13%)</title><rect x="62.7532%" y="340" width="0.1299%" height="15" fill="rgb(207,194,5)" fg:x="2416" fg:w="5"/><text x="63.0032%" y="350.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (151 samples, 3.92%)</title><rect x="59.0130%" y="276" width="3.9221%" height="15" fill="rgb(206,111,30)" fg:x="2272" fg:w="151"/><text x="59.2630%" y="286.50">matc..</text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:195) (30 samples, 0.78%)</title><rect x="62.1558%" y="292" width="0.7792%" height="15" fill="rgb(243,70,54)" fg:x="2393" fg:w="30"/><text x="62.4058%" y="302.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:98) (4 samples, 0.10%)</title><rect x="63.0909%" y="276" width="0.1039%" height="15" fill="rgb(242,28,8)" fg:x="2429" fg:w="4"/><text x="63.3409%" y="286.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (171 samples, 4.44%)</title><rect x="58.9091%" y="260" width="4.4416%" height="15" fill="rgb(219,106,18)" fg:x="2268" fg:w="171"/><text x="59.1591%" y="270.50">nextT..</text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:99) (6 samples, 0.16%)</title><rect x="63.1948%" y="276" width="0.1558%" height="15" fill="rgb(244,222,10)" fg:x="2433" fg:w="6"/><text x="63.4448%" y="286.50"></text></g><g><title>LA (antlr4/InputStream.py:48) (4 samples, 0.10%)</title><rect x="63.5065%" y="276" width="0.1039%" height="15" fill="rgb(236,179,52)" fg:x="2445" fg:w="4"/><text x="63.7565%" y="286.50"></text></g><g><title>LA (antlr4/InputStream.py:53) (5 samples, 0.13%)</title><rect x="63.6623%" y="276" width="0.1299%" height="15" fill="rgb(213,23,39)" fg:x="2451" fg:w="5"/><text x="63.9123%" y="286.50"></text></g><g><title>nextToken (antlr4/Lexer.py:141) (21 samples, 0.55%)</title><rect x="63.3506%" y="260" width="0.5455%" height="15" fill="rgb(238,48,10)" fg:x="2439" fg:w="21"/><text x="63.6006%" y="270.50"></text></g><g><title>emit (antlr4/Lexer.py:221) (4 samples, 0.10%)</title><rect x="64.1299%" y="276" width="0.1039%" height="15" fill="rgb(251,196,23)" fg:x="2469" fg:w="4"/><text x="64.3799%" y="286.50"></text></g><g><title>__init__ (antlr4/Token.py:76) (29 samples, 0.75%)</title><rect x="64.5455%" y="308" width="0.7532%" height="15" fill="rgb(250,152,24)" fg:x="2485" fg:w="29"/><text x="64.7955%" y="318.50"></text></g><g><title>__init__ (antlr4/Token.py:77) (7 samples, 0.18%)</title><rect x="65.2987%" y="308" width="0.1818%" height="15" fill="rgb(209,150,17)" fg:x="2514" fg:w="7"/><text x="65.5487%" y="318.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (49 samples, 1.27%)</title><rect x="64.3117%" y="292" width="1.2727%" height="15" fill="rgb(234,202,34)" fg:x="2476" fg:w="49"/><text x="64.5617%" y="302.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (56 samples, 1.45%)</title><rect x="64.2338%" y="276" width="1.4545%" height="15" fill="rgb(253,148,53)" fg:x="2473" fg:w="56"/><text x="64.4838%" y="286.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (71 samples, 1.84%)</title><rect x="64.0000%" y="260" width="1.8442%" height="15" fill="rgb(218,129,16)" fg:x="2464" fg:w="71"/><text x="64.2500%" y="270.50">n..</text></g><g><title>emit (antlr4/Lexer.py:223) (6 samples, 0.16%)</title><rect x="65.6883%" y="276" width="0.1558%" height="15" fill="rgb(216,85,19)" fg:x="2529" fg:w="6"/><text x="65.9383%" y="286.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (284 samples, 7.38%)</title><rect x="58.4935%" y="244" width="7.3766%" height="15" fill="rgb(235,228,7)" fg:x="2252" fg:w="284"/><text x="58.7435%" y="254.50">fetch (ant..</text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (300 samples, 7.79%)</title><rect x="58.2078%" y="212" width="7.7922%" height="15" fill="rgb(245,175,0)" fg:x="2241" fg:w="300"/><text x="58.4578%" y="222.50">consume (an..</text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (295 samples, 7.66%)</title><rect x="58.3377%" y="228" width="7.6623%" height="15" fill="rgb(208,168,36)" fg:x="2246" fg:w="295"/><text x="58.5877%" y="238.50">sync (antl..</text></g><g><title>consume (antlr4/BufferedTokenStream.py:101) (9 samples, 0.23%)</title><rect x="66.0000%" y="212" width="0.2338%" height="15" fill="rgb(246,171,24)" fg:x="2541" fg:w="9"/><text x="66.2500%" y="222.50"></text></g><g><title>adjustSeekIndex (antlr4/CommonTokenStream.py:45) (6 samples, 0.16%)</title><rect x="66.0779%" y="228" width="0.1558%" height="15" fill="rgb(215,142,24)" fg:x="2544" fg:w="6"/><text x="66.3279%" y="238.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:467) (313 samples, 8.13%)</title><rect x="58.1818%" y="196" width="8.1299%" height="15" fill="rgb(250,187,7)" fg:x="2240" fg:w="313"/><text x="58.4318%" y="206.50">execATN (an..</text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (347 samples, 9.01%)</title><rect x="57.5844%" y="180" width="9.0130%" height="15" fill="rgb(228,66,33)" fg:x="2217" fg:w="347"/><text x="57.8344%" y="190.50">adaptivePredi..</text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:468) (11 samples, 0.29%)</title><rect x="66.3117%" y="196" width="0.2857%" height="15" fill="rgb(234,215,21)" fg:x="2553" fg:w="11"/><text x="66.5617%" y="206.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (10 samples, 0.26%)</title><rect x="66.3377%" y="212" width="0.2597%" height="15" fill="rgb(222,191,20)" fg:x="2554" fg:w="10"/><text x="66.5877%" y="222.50"></text></g><g><title>statement (qasm3Parser.py:914) (354 samples, 9.19%)</title><rect x="57.5065%" y="164" width="9.1948%" height="15" fill="rgb(245,79,54)" fg:x="2214" fg:w="354"/><text x="57.7565%" y="174.50">statement (qa..</text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (4 samples, 0.10%)</title><rect x="66.5974%" y="180" width="0.1039%" height="15" fill="rgb(240,10,37)" fg:x="2564" fg:w="4"/><text x="66.8474%" y="190.50"></text></g><g><title>statement (qasm3Parser.py:970) (6 samples, 0.16%)</title><rect x="66.7792%" y="164" width="0.1558%" height="15" fill="rgb(214,192,32)" fg:x="2571" fg:w="6"/><text x="67.0292%" y="174.50"></text></g><g><title>statementOrScope (qasm3Parser.py:1301) (2,498 samples, 64.88%)</title><rect x="2.0779%" y="148" width="64.8831%" height="15" fill="rgb(209,36,54)" fg:x="80" fg:w="2498"/><text x="2.3279%" y="158.50">statementOrScope (qasm3Parser.py:1301)</text></g><g><title>exitRule (antlr4/Parser.py:381) (7 samples, 0.18%)</title><rect x="66.9870%" y="164" width="0.1818%" height="15" fill="rgb(220,10,11)" fg:x="2579" fg:w="7"/><text x="67.2370%" y="174.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (4 samples, 0.10%)</title><rect x="67.0649%" y="180" width="0.1039%" height="15" fill="rgb(221,106,17)" fg:x="2582" fg:w="4"/><text x="67.3149%" y="190.50"></text></g><g><title>program (qasm3Parser.py:659) (2,560 samples, 66.49%)</title><rect x="0.7273%" y="132" width="66.4935%" height="15" fill="rgb(251,142,44)" fg:x="28" fg:w="2560"/><text x="0.9773%" y="142.50">program (qasm3Parser.py:659)</text></g><g><title>statementOrScope (qasm3Parser.py:1316) (10 samples, 0.26%)</title><rect x="66.9610%" y="148" width="0.2597%" height="15" fill="rgb(238,13,15)" fg:x="2578" fg:w="10"/><text x="67.2110%" y="158.50"></text></g><g><title>parse (openqasm3/parser.py:105) (2,567 samples, 66.68%)</title><rect x="0.6234%" y="116" width="66.6753%" height="15" fill="rgb(208,107,27)" fg:x="24" fg:w="2567"/><text x="0.8734%" y="126.50">parse (openqasm3/parser.py:105)</text></g><g><title>getChild (antlr4/ParserRuleContext.py:118) (4 samples, 0.10%)</title><rect x="67.5584%" y="244" width="0.1039%" height="15" fill="rgb(205,136,37)" fg:x="2601" fg:w="4"/><text x="67.8084%" y="254.50"></text></g><g><title>scope (qasm3Parser.py:1267) (7 samples, 0.18%)</title><rect x="67.5065%" y="212" width="0.1818%" height="15" fill="rgb(250,205,27)" fg:x="2599" fg:w="7"/><text x="67.7565%" y="222.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (6 samples, 0.16%)</title><rect x="67.5325%" y="228" width="0.1558%" height="15" fill="rgb(210,80,43)" fg:x="2600" fg:w="6"/><text x="67.7825%" y="238.50"></text></g><g><title>visitStatement (openqasm3/parser.py:215) (5 samples, 0.13%)</title><rect x="67.8961%" y="260" width="0.1299%" height="15" fill="rgb(247,160,36)" fg:x="2614" fg:w="5"/><text x="68.1461%" y="270.50"></text></g><g><title>pragma (qasm3Parser.py:740) (5 samples, 0.13%)</title><rect x="67.8961%" y="276" width="0.1299%" height="15" fill="rgb(234,13,49)" fg:x="2614" fg:w="5"/><text x="68.1461%" y="286.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (5 samples, 0.13%)</title><rect x="67.8961%" y="292" width="0.1299%" height="15" fill="rgb(234,122,0)" fg:x="2614" fg:w="5"/><text x="68.1461%" y="302.50"></text></g><g><title>visitGateCallStatement (openqasm3/parser.py:422) (8 samples, 0.21%)</title><rect x="68.2078%" y="324" width="0.2078%" height="15" fill="rgb(207,146,38)" fg:x="2626" fg:w="8"/><text x="68.4578%" y="334.50"></text></g><g><title>gateModifier (qasm3Parser.py:2321) (7 samples, 0.18%)</title><rect x="68.2338%" y="340" width="0.1818%" height="15" fill="rgb(207,177,25)" fg:x="2627" fg:w="7"/><text x="68.4838%" y="350.50"></text></g><g><title>_visit_binary_expression (openqasm3/parser.py:600) (4 samples, 0.10%)</title><rect x="68.5974%" y="388" width="0.1039%" height="15" fill="rgb(211,178,42)" fg:x="2641" fg:w="4"/><text x="68.8474%" y="398.50"></text></g><g><title>visit (antlr4/tree/Tree.py:34) (4 samples, 0.10%)</title><rect x="68.5974%" y="404" width="0.1039%" height="15" fill="rgb(230,69,54)" fg:x="2641" fg:w="4"/><text x="68.8474%" y="414.50"></text></g><g><title>accept (qasm3Parser.py:4224) (4 samples, 0.10%)</title><rect x="68.5974%" y="420" width="0.1039%" height="15" fill="rgb(214,135,41)" fg:x="2641" fg:w="4"/><text x="68.8474%" y="430.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:651) (103 samples, 2.68%)</title><rect x="68.7532%" y="452" width="2.6753%" height="15" fill="rgb(237,67,25)" fg:x="2647" fg:w="103"/><text x="69.0032%" y="462.50">vi..</text></g><g><title>Identifier (qasm3Parser.py:4236) (102 samples, 2.65%)</title><rect x="68.7792%" y="468" width="2.6494%" height="15" fill="rgb(222,189,50)" fg:x="2648" fg:w="102"/><text x="69.0292%" y="478.50">Id..</text></g><g><title>getToken (antlr4/ParserRuleContext.py:137) (102 samples, 2.65%)</title><rect x="68.7792%" y="484" width="2.6494%" height="15" fill="rgb(245,148,34)" fg:x="2648" fg:w="102"/><text x="69.0292%" y="494.50">ge..</text></g><g><title>accept (qasm3Parser.py:3881) (118 samples, 3.06%)</title><rect x="68.5714%" y="356" width="3.0649%" height="15" fill="rgb(222,29,6)" fg:x="2640" fg:w="118"/><text x="68.8214%" y="366.50">acc..</text></g><g><title>wrapped (openqasm3/parser.py:138) (118 samples, 3.06%)</title><rect x="68.5714%" y="372" width="3.0649%" height="15" fill="rgb(221,189,43)" fg:x="2640" fg:w="118"/><text x="68.8214%" y="382.50">wra..</text></g><g><title>_visit_binary_expression (openqasm3/parser.py:602) (112 samples, 2.91%)</title><rect x="68.7273%" y="388" width="2.9091%" height="15" fill="rgb(207,36,27)" fg:x="2646" fg:w="112"/><text x="68.9773%" y="398.50">_v..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (111 samples, 2.88%)</title><rect x="68.7532%" y="404" width="2.8831%" height="15" fill="rgb(217,90,24)" fg:x="2647" fg:w="111"/><text x="69.0032%" y="414.50">vi..</text></g><g><title>accept (qasm3Parser.py:4268) (111 samples, 2.88%)</title><rect x="68.7532%" y="420" width="2.8831%" height="15" fill="rgb(224,66,35)" fg:x="2647" fg:w="111"/><text x="69.0032%" y="430.50">ac..</text></g><g><title>wrapped (openqasm3/parser.py:138) (111 samples, 2.88%)</title><rect x="68.7532%" y="436" width="2.8831%" height="15" fill="rgb(221,13,50)" fg:x="2647" fg:w="111"/><text x="69.0032%" y="446.50">wr..</text></g><g><title>visitGateCallStatement (openqasm3/parser.py:424) (138 samples, 3.58%)</title><rect x="68.4156%" y="324" width="3.5844%" height="15" fill="rgb(236,68,49)" fg:x="2634" fg:w="138"/><text x="68.6656%" y="334.50">visi..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (133 samples, 3.45%)</title><rect x="68.5455%" y="340" width="3.4545%" height="15" fill="rgb(229,146,28)" fg:x="2639" fg:w="133"/><text x="68.7955%" y="350.50">vis..</text></g><g><title>accept (qasm3Parser.py:4268) (13 samples, 0.34%)</title><rect x="71.6623%" y="356" width="0.3377%" height="15" fill="rgb(225,31,38)" fg:x="2759" fg:w="13"/><text x="71.9123%" y="366.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (12 samples, 0.31%)</title><rect x="71.6883%" y="372" width="0.3117%" height="15" fill="rgb(250,208,3)" fg:x="2760" fg:w="12"/><text x="71.9383%" y="382.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:658) (5 samples, 0.13%)</title><rect x="71.8701%" y="388" width="0.1299%" height="15" fill="rgb(246,54,23)" fg:x="2767" fg:w="5"/><text x="72.1201%" y="398.50"></text></g><g><title>getText (antlr4/tree/Tree.py:116) (4 samples, 0.10%)</title><rect x="71.8961%" y="404" width="0.1039%" height="15" fill="rgb(243,76,11)" fg:x="2768" fg:w="4"/><text x="72.1461%" y="414.50"></text></g><g><title>getChild (antlr4/ParserRuleContext.py:118) (4 samples, 0.10%)</title><rect x="72.0519%" y="372" width="0.1039%" height="15" fill="rgb(245,21,50)" fg:x="2774" fg:w="4"/><text x="72.3019%" y="382.50"></text></g><g><title>visitGateCallStatement (openqasm3/parser.py:425) (9 samples, 0.23%)</title><rect x="72.0000%" y="324" width="0.2338%" height="15" fill="rgb(228,9,43)" fg:x="2772" fg:w="9"/><text x="72.2500%" y="334.50"></text></g><g><title>expressionList (qasm3Parser.py:2337) (8 samples, 0.21%)</title><rect x="72.0260%" y="340" width="0.2078%" height="15" fill="rgb(208,100,47)" fg:x="2773" fg:w="8"/><text x="72.2760%" y="350.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (8 samples, 0.21%)</title><rect x="72.0260%" y="356" width="0.2078%" height="15" fill="rgb(232,26,8)" fg:x="2773" fg:w="8"/><text x="72.2760%" y="366.50"></text></g><g><title>gateOperand (qasm3Parser.py:6785) (6 samples, 0.16%)</title><rect x="72.2857%" y="340" width="0.1558%" height="15" fill="rgb(216,166,38)" fg:x="2783" fg:w="6"/><text x="72.5357%" y="350.50"></text></g><g><title>gateOperandList (qasm3Parser.py:2313) (5 samples, 0.13%)</title><rect x="72.4416%" y="340" width="0.1299%" height="15" fill="rgb(251,202,51)" fg:x="2789" fg:w="5"/><text x="72.6916%" y="350.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (5 samples, 0.13%)</title><rect x="72.4416%" y="356" width="0.1299%" height="15" fill="rgb(254,216,34)" fg:x="2789" fg:w="5"/><text x="72.6916%" y="366.50"></text></g><g><title>wrapped (openqasm3/parser.py:137) (9 samples, 0.23%)</title><rect x="72.7273%" y="372" width="0.2338%" height="15" fill="rgb(251,32,27)" fg:x="2800" fg:w="9"/><text x="72.9773%" y="382.50"></text></g><g><title>get_span (openqasm3/parser.py:114) (6 samples, 0.16%)</title><rect x="72.8052%" y="388" width="0.1558%" height="15" fill="rgb(208,127,28)" fg:x="2803" fg:w="6"/><text x="73.0552%" y="398.50"></text></g><g><title>getToken (antlr4/ParserRuleContext.py:134) (7 samples, 0.18%)</title><rect x="73.0909%" y="420" width="0.1818%" height="15" fill="rgb(224,137,22)" fg:x="2814" fg:w="7"/><text x="73.3409%" y="430.50"></text></g><g><title>visitGateOperand (openqasm3/parser.py:864) (11 samples, 0.29%)</title><rect x="73.0390%" y="388" width="0.2857%" height="15" fill="rgb(254,70,32)" fg:x="2812" fg:w="11"/><text x="73.2890%" y="398.50"></text></g><g><title>HardwareQubit (qasm3Parser.py:6130) (9 samples, 0.23%)</title><rect x="73.0909%" y="404" width="0.2338%" height="15" fill="rgb(229,75,37)" fg:x="2814" fg:w="9"/><text x="73.3409%" y="414.50"></text></g><g><title>getChild (antlr4/ParserRuleContext.py:118) (4 samples, 0.10%)</title><rect x="73.4026%" y="436" width="0.1039%" height="15" fill="rgb(252,64,23)" fg:x="2826" fg:w="4"/><text x="73.6526%" y="446.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:6126) (7 samples, 0.18%)</title><rect x="73.3506%" y="404" width="0.1818%" height="15" fill="rgb(232,162,48)" fg:x="2824" fg:w="7"/><text x="73.6006%" y="414.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (6 samples, 0.16%)</title><rect x="73.3766%" y="420" width="0.1558%" height="15" fill="rgb(246,160,12)" fg:x="2825" fg:w="6"/><text x="73.6266%" y="430.50"></text></g><g><title>getTypedRuleContexts (antlr4/ParserRuleContext.py:164) (186 samples, 4.83%)</title><rect x="73.7662%" y="484" width="4.8312%" height="15" fill="rgb(247,166,0)" fg:x="2840" fg:w="186"/><text x="74.0162%" y="494.50">getTyp..</text></g><g><title>getChildren (antlr4/ParserRuleContext.py:126) (183 samples, 4.75%)</title><rect x="73.8442%" y="500" width="4.7532%" height="15" fill="rgb(249,219,21)" fg:x="2843" fg:w="183"/><text x="74.0942%" y="510.50">getChi..</text></g><g><title>visitIndexedIdentifier (openqasm3/parser.py:768) (191 samples, 4.96%)</title><rect x="73.7403%" y="452" width="4.9610%" height="15" fill="rgb(205,209,3)" fg:x="2839" fg:w="191"/><text x="73.9903%" y="462.50">visitI..</text></g><g><title>indexOperator (qasm3Parser.py:5226) (191 samples, 4.96%)</title><rect x="73.7403%" y="468" width="4.9610%" height="15" fill="rgb(243,44,1)" fg:x="2839" fg:w="191"/><text x="73.9903%" y="478.50">indexO..</text></g><g><title>getTypedRuleContexts (antlr4/ParserRuleContext.py:165) (4 samples, 0.10%)</title><rect x="78.5974%" y="484" width="0.1039%" height="15" fill="rgb(206,159,16)" fg:x="3026" fg:w="4"/><text x="78.8474%" y="494.50"></text></g><g><title>Identifier (qasm3Parser.py:5222) (5 samples, 0.13%)</title><rect x="78.7792%" y="468" width="0.1299%" height="15" fill="rgb(244,77,30)" fg:x="3033" fg:w="5"/><text x="79.0292%" y="478.50"></text></g><g><title>getText (antlr4/tree/Tree.py:116) (6 samples, 0.16%)</title><rect x="79.0909%" y="484" width="0.1558%" height="15" fill="rgb(218,69,12)" fg:x="3045" fg:w="6"/><text x="79.3409%" y="494.50"></text></g><g><title>visitIndexedIdentifier (openqasm3/parser.py:771) (24 samples, 0.62%)</title><rect x="78.7532%" y="452" width="0.6234%" height="15" fill="rgb(212,87,7)" fg:x="3032" fg:w="24"/><text x="79.0032%" y="462.50"></text></g><g><title>_visit_identifier (openqasm3/parser.py:147) (17 samples, 0.44%)</title><rect x="78.9351%" y="468" width="0.4416%" height="15" fill="rgb(245,114,25)" fg:x="3039" fg:w="17"/><text x="79.1851%" y="478.50"></text></g><g><title>get_span (openqasm3/parser.py:116) (4 samples, 0.10%)</title><rect x="79.2727%" y="484" width="0.1039%" height="15" fill="rgb(210,61,42)" fg:x="3052" fg:w="4"/><text x="79.5227%" y="494.50"></text></g><g><title>getChildren (antlr4/ParserRuleContext.py:126) (5 samples, 0.13%)</title><rect x="79.5065%" y="500" width="0.1299%" height="15" fill="rgb(211,52,33)" fg:x="3061" fg:w="5"/><text x="79.7565%" y="510.50"></text></g><g><title>getTypedRuleContexts (antlr4/ParserRuleContext.py:164) (8 samples, 0.21%)</title><rect x="79.4545%" y="484" width="0.2078%" height="15" fill="rgb(234,58,33)" fg:x="3059" fg:w="8"/><text x="79.7045%" y="494.50"></text></g><g><title>indexOperator (qasm3Parser.py:5226) (13 samples, 0.34%)</title><rect x="79.4545%" y="468" width="0.3377%" height="15" fill="rgb(220,115,36)" fg:x="3059" fg:w="13"/><text x="79.7045%" y="478.50"></text></g><g><title>getChild (antlr4/ParserRuleContext.py:118) (4 samples, 0.10%)</title><rect x="79.9481%" y="548" width="0.1039%" height="15" fill="rgb(243,153,54)" fg:x="3078" fg:w="4"/><text x="80.1981%" y="558.50"></text></g><g><title>visitIndexOperator (openqasm3/parser.py:753) (9 samples, 0.23%)</title><rect x="79.9221%" y="500" width="0.2338%" height="15" fill="rgb(251,47,18)" fg:x="3077" fg:w="9"/><text x="80.1721%" y="510.50"></text></g><g><title>setExpression (qasm3Parser.py:5092) (8 samples, 0.21%)</title><rect x="79.9481%" y="516" width="0.2078%" height="15" fill="rgb(242,102,42)" fg:x="3078" fg:w="8"/><text x="80.1981%" y="526.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (8 samples, 0.21%)</title><rect x="79.9481%" y="532" width="0.2078%" height="15" fill="rgb(234,31,38)" fg:x="3078" fg:w="8"/><text x="80.1981%" y="542.50"></text></g><g><title>getChild (antlr4/ParserRuleContext.py:119) (4 samples, 0.10%)</title><rect x="80.0519%" y="548" width="0.1039%" height="15" fill="rgb(221,117,51)" fg:x="3082" fg:w="4"/><text x="80.3019%" y="558.50"></text></g><g><title>getChildren (antlr4/ParserRuleContext.py:129) (8 samples, 0.21%)</title><rect x="80.3636%" y="516" width="0.2078%" height="15" fill="rgb(212,20,18)" fg:x="3094" fg:w="8"/><text x="80.6136%" y="526.50"></text></g><g><title>wrapped (openqasm3/parser.py:137) (7 samples, 0.18%)</title><rect x="80.5974%" y="548" width="0.1818%" height="15" fill="rgb(245,133,36)" fg:x="3103" fg:w="7"/><text x="80.8474%" y="558.50"></text></g><g><title>get_span (openqasm3/parser.py:114) (7 samples, 0.18%)</title><rect x="80.5974%" y="564" width="0.1818%" height="15" fill="rgb(212,6,19)" fg:x="3103" fg:w="7"/><text x="80.8474%" y="574.50"></text></g><g><title>__init__ (__init__) (4 samples, 0.10%)</title><rect x="80.6753%" y="580" width="0.1039%" height="15" fill="rgb(218,1,36)" fg:x="3106" fg:w="4"/><text x="80.9253%" y="590.50"></text></g><g><title>getToken (antlr4/ParserRuleContext.py:134) (7 samples, 0.18%)</title><rect x="80.8052%" y="596" width="0.1818%" height="15" fill="rgb(246,84,54)" fg:x="3111" fg:w="7"/><text x="81.0552%" y="606.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:651) (10 samples, 0.26%)</title><rect x="80.8052%" y="564" width="0.2597%" height="15" fill="rgb(242,110,6)" fg:x="3111" fg:w="10"/><text x="81.0552%" y="574.50"></text></g><g><title>Identifier (qasm3Parser.py:4236) (10 samples, 0.26%)</title><rect x="80.8052%" y="580" width="0.2597%" height="15" fill="rgb(214,47,5)" fg:x="3111" fg:w="10"/><text x="81.0552%" y="590.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:653) (5 samples, 0.13%)</title><rect x="81.0649%" y="564" width="0.1299%" height="15" fill="rgb(218,159,25)" fg:x="3121" fg:w="5"/><text x="81.3149%" y="574.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:655) (5 samples, 0.13%)</title><rect x="81.1948%" y="564" width="0.1299%" height="15" fill="rgb(215,211,28)" fg:x="3126" fg:w="5"/><text x="81.4448%" y="574.50"></text></g><g><title>OctalIntegerLiteral (qasm3Parser.py:4240) (5 samples, 0.13%)</title><rect x="81.1948%" y="580" width="0.1299%" height="15" fill="rgb(238,59,32)" fg:x="3126" fg:w="5"/><text x="81.4448%" y="590.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:657) (9 samples, 0.23%)</title><rect x="81.3247%" y="564" width="0.2338%" height="15" fill="rgb(226,82,3)" fg:x="3131" fg:w="9"/><text x="81.5747%" y="574.50"></text></g><g><title>DecimalIntegerLiteral (qasm3Parser.py:4242) (7 samples, 0.18%)</title><rect x="81.3766%" y="580" width="0.1818%" height="15" fill="rgb(240,164,32)" fg:x="3133" fg:w="7"/><text x="81.6266%" y="590.50"></text></g><g><title>getToken (antlr4/ParserRuleContext.py:134) (4 samples, 0.10%)</title><rect x="81.7922%" y="596" width="0.1039%" height="15" fill="rgb(232,46,7)" fg:x="3149" fg:w="4"/><text x="82.0422%" y="606.50"></text></g><g><title>DecimalIntegerLiteral (qasm3Parser.py:4242) (7 samples, 0.18%)</title><rect x="81.7662%" y="580" width="0.1818%" height="15" fill="rgb(229,129,53)" fg:x="3148" fg:w="7"/><text x="82.0162%" y="590.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (54 samples, 1.40%)</title><rect x="80.7792%" y="548" width="1.4026%" height="15" fill="rgb(234,188,29)" fg:x="3110" fg:w="54"/><text x="81.0292%" y="558.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:658) (24 samples, 0.62%)</title><rect x="81.5584%" y="564" width="0.6234%" height="15" fill="rgb(246,141,4)" fg:x="3140" fg:w="24"/><text x="81.8084%" y="574.50"></text></g><g><title>getText (antlr4/tree/Tree.py:116) (9 samples, 0.23%)</title><rect x="81.9481%" y="580" width="0.2338%" height="15" fill="rgb(229,23,39)" fg:x="3155" fg:w="9"/><text x="82.1981%" y="590.50"></text></g><g><title>text (antlr4/Token.py:119) (5 samples, 0.13%)</title><rect x="82.0519%" y="596" width="0.1299%" height="15" fill="rgb(206,12,3)" fg:x="3159" fg:w="5"/><text x="82.3019%" y="606.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (329 samples, 8.55%)</title><rect x="73.7143%" y="436" width="8.5455%" height="15" fill="rgb(252,226,20)" fg:x="2838" fg:w="329"/><text x="73.9643%" y="446.50">wrapped (ope..</text></g><g><title>visitIndexedIdentifier (openqasm3/parser.py:772) (111 samples, 2.88%)</title><rect x="79.3766%" y="452" width="2.8831%" height="15" fill="rgb(216,123,35)" fg:x="3056" fg:w="111"/><text x="79.6266%" y="462.50">vi..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (95 samples, 2.47%)</title><rect x="79.7922%" y="468" width="2.4675%" height="15" fill="rgb(212,68,40)" fg:x="3072" fg:w="95"/><text x="80.0422%" y="478.50">vi..</text></g><g><title>accept (qasm3Parser.py:5128) (93 samples, 2.42%)</title><rect x="79.8442%" y="484" width="2.4156%" height="15" fill="rgb(254,125,32)" fg:x="3074" fg:w="93"/><text x="80.0942%" y="494.50">ac..</text></g><g><title>visitIndexOperator (openqasm3/parser.py:764) (79 samples, 2.05%)</title><rect x="80.2078%" y="500" width="2.0519%" height="15" fill="rgb(253,97,22)" fg:x="3088" fg:w="79"/><text x="80.4578%" y="510.50">v..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (65 samples, 1.69%)</title><rect x="80.5714%" y="516" width="1.6883%" height="15" fill="rgb(241,101,14)" fg:x="3102" fg:w="65"/><text x="80.8214%" y="526.50"></text></g><g><title>accept (qasm3Parser.py:4268) (64 samples, 1.66%)</title><rect x="80.5974%" y="532" width="1.6623%" height="15" fill="rgb(238,103,29)" fg:x="3103" fg:w="64"/><text x="80.8474%" y="542.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (360 samples, 9.35%)</title><rect x="72.9610%" y="372" width="9.3506%" height="15" fill="rgb(233,195,47)" fg:x="2809" fg:w="360"/><text x="73.2110%" y="382.50">wrapped (open..</text></g><g><title>visitGateOperand (openqasm3/parser.py:866) (346 samples, 8.99%)</title><rect x="73.3247%" y="388" width="8.9870%" height="15" fill="rgb(246,218,30)" fg:x="2823" fg:w="346"/><text x="73.5747%" y="398.50">visitGateOper..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (338 samples, 8.78%)</title><rect x="73.5325%" y="404" width="8.7792%" height="15" fill="rgb(219,145,47)" fg:x="2831" fg:w="338"/><text x="73.7825%" y="414.50">visit (antlr..</text></g><g><title>accept (qasm3Parser.py:5244) (334 samples, 8.68%)</title><rect x="73.6364%" y="420" width="8.6753%" height="15" fill="rgb(243,12,26)" fg:x="2835" fg:w="334"/><text x="73.8864%" y="430.50">accept (qasm..</text></g><g><title>visitGateCallStatement (openqasm3/parser.py:429) (390 samples, 10.13%)</title><rect x="72.2338%" y="324" width="10.1299%" height="15" fill="rgb(214,87,16)" fg:x="2781" fg:w="390"/><text x="72.4838%" y="334.50">visitGateCallSt..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (377 samples, 9.79%)</title><rect x="72.5714%" y="340" width="9.7922%" height="15" fill="rgb(208,99,42)" fg:x="2794" fg:w="377"/><text x="72.8214%" y="350.50">visit (antlr4/..</text></g><g><title>accept (qasm3Parser.py:6145) (373 samples, 9.69%)</title><rect x="72.6753%" y="356" width="9.6883%" height="15" fill="rgb(253,99,2)" fg:x="2798" fg:w="373"/><text x="72.9253%" y="366.50">accept (qasm3P..</text></g><g><title>getChild (antlr4/ParserRuleContext.py:118) (6 samples, 0.16%)</title><rect x="82.3636%" y="372" width="0.1558%" height="15" fill="rgb(220,168,23)" fg:x="3171" fg:w="6"/><text x="82.6136%" y="382.50"></text></g><g><title>visitGateCallStatement (openqasm3/parser.py:430) (10 samples, 0.26%)</title><rect x="82.3636%" y="324" width="0.2597%" height="15" fill="rgb(242,38,24)" fg:x="3171" fg:w="10"/><text x="82.6136%" y="334.50"></text></g><g><title>gateOperandList (qasm3Parser.py:2313) (10 samples, 0.26%)</title><rect x="82.3636%" y="340" width="0.2597%" height="15" fill="rgb(225,182,9)" fg:x="3171" fg:w="10"/><text x="82.6136%" y="350.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (10 samples, 0.26%)</title><rect x="82.3636%" y="356" width="0.2597%" height="15" fill="rgb(243,178,37)" fg:x="3171" fg:w="10"/><text x="82.6136%" y="366.50"></text></g><g><title>getToken (antlr4/ParserRuleContext.py:134) (4 samples, 0.10%)</title><rect x="82.6494%" y="356" width="0.1039%" height="15" fill="rgb(232,139,19)" fg:x="3182" fg:w="4"/><text x="82.8994%" y="366.50"></text></g><g><title>visitGateCallStatement (openqasm3/parser.py:433) (14 samples, 0.36%)</title><rect x="82.6234%" y="324" width="0.3636%" height="15" fill="rgb(225,201,24)" fg:x="3181" fg:w="14"/><text x="82.8734%" y="334.50"></text></g><g><title>GPHASE (qasm3Parser.py:2341) (14 samples, 0.36%)</title><rect x="82.6234%" y="340" width="0.3636%" height="15" fill="rgb(221,47,46)" fg:x="3181" fg:w="14"/><text x="82.8734%" y="350.50"></text></g><g><title>getToken (antlr4/ParserRuleContext.py:135) (9 samples, 0.23%)</title><rect x="82.7532%" y="356" width="0.2338%" height="15" fill="rgb(249,23,13)" fg:x="3186" fg:w="9"/><text x="83.0032%" y="366.50"></text></g><g><title>visitGateCallStatement (openqasm3/parser.py:439) (8 samples, 0.21%)</title><rect x="82.9870%" y="324" width="0.2078%" height="15" fill="rgb(219,9,5)" fg:x="3195" fg:w="8"/><text x="83.2370%" y="334.50"></text></g><g><title>Identifier (qasm3Parser.py:2310) (4 samples, 0.10%)</title><rect x="83.2208%" y="340" width="0.1039%" height="15" fill="rgb(254,171,16)" fg:x="3204" fg:w="4"/><text x="83.4708%" y="350.50"></text></g><g><title>getText (antlr4/tree/Tree.py:116) (9 samples, 0.23%)</title><rect x="83.3506%" y="356" width="0.2338%" height="15" fill="rgb(230,171,20)" fg:x="3209" fg:w="9"/><text x="83.6006%" y="366.50"></text></g><g><title>text (antlr4/Token.py:119) (5 samples, 0.13%)</title><rect x="83.4545%" y="372" width="0.1299%" height="15" fill="rgb(210,71,41)" fg:x="3213" fg:w="5"/><text x="83.7045%" y="382.50"></text></g><g><title>visitGateCallStatement (openqasm3/parser.py:441) (18 samples, 0.47%)</title><rect x="83.1948%" y="324" width="0.4675%" height="15" fill="rgb(206,173,20)" fg:x="3203" fg:w="18"/><text x="83.4448%" y="334.50"></text></g><g><title>_visit_identifier (openqasm3/parser.py:147) (13 samples, 0.34%)</title><rect x="83.3247%" y="340" width="0.3377%" height="15" fill="rgb(233,88,34)" fg:x="3208" fg:w="13"/><text x="83.5747%" y="350.50"></text></g><g><title>getChild (antlr4/ParserRuleContext.py:118) (9 samples, 0.23%)</title><rect x="83.6883%" y="372" width="0.2338%" height="15" fill="rgb(223,209,46)" fg:x="3222" fg:w="9"/><text x="83.9383%" y="382.50"></text></g><g><title>visitStatement (openqasm3/parser.py:217) (614 samples, 15.95%)</title><rect x="68.0260%" y="260" width="15.9481%" height="15" fill="rgb(250,43,18)" fg:x="2619" fg:w="614"/><text x="68.2760%" y="270.50">visitStatement (openqasm3..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (611 samples, 15.87%)</title><rect x="68.1039%" y="276" width="15.8701%" height="15" fill="rgb(208,13,10)" fg:x="2622" fg:w="611"/><text x="68.3539%" y="286.50">visit (antlr4/tree/Tree...</text></g><g><title>accept (qasm3Parser.py:2356) (607 samples, 15.77%)</title><rect x="68.2078%" y="292" width="15.7662%" height="15" fill="rgb(212,200,36)" fg:x="2626" fg:w="607"/><text x="68.4578%" y="302.50">accept (qasm3Parser.py:2..</text></g><g><title>wrapped (openqasm3/parser.py:138) (607 samples, 15.77%)</title><rect x="68.2078%" y="308" width="15.7662%" height="15" fill="rgb(225,90,30)" fg:x="2626" fg:w="607"/><text x="68.4578%" y="318.50">wrapped (openqasm3/parse..</text></g><g><title>visitGateCallStatement (openqasm3/parser.py:444) (12 samples, 0.31%)</title><rect x="83.6623%" y="324" width="0.3117%" height="15" fill="rgb(236,182,39)" fg:x="3221" fg:w="12"/><text x="83.9123%" y="334.50"></text></g><g><title>designator (qasm3Parser.py:2333) (12 samples, 0.31%)</title><rect x="83.6623%" y="340" width="0.3117%" height="15" fill="rgb(212,144,35)" fg:x="3221" fg:w="12"/><text x="83.9123%" y="350.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (12 samples, 0.31%)</title><rect x="83.6623%" y="356" width="0.3117%" height="15" fill="rgb(228,63,44)" fg:x="3221" fg:w="12"/><text x="83.9123%" y="366.50"></text></g><g><title>getTypedRuleContexts (antlr4/ParserRuleContext.py:164) (5 samples, 0.13%)</title><rect x="83.9740%" y="292" width="0.1299%" height="15" fill="rgb(228,109,6)" fg:x="3233" fg:w="5"/><text x="84.2240%" y="302.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (626 samples, 16.26%)</title><rect x="67.8961%" y="244" width="16.2597%" height="15" fill="rgb(238,117,24)" fg:x="2614" fg:w="626"/><text x="68.1461%" y="254.50">wrapped (openqasm3/parser..</text></g><g><title>visitStatement (openqasm3/parser.py:218) (7 samples, 0.18%)</title><rect x="83.9740%" y="260" width="0.1818%" height="15" fill="rgb(242,26,26)" fg:x="3233" fg:w="7"/><text x="84.2240%" y="270.50"></text></g><g><title>annotation (qasm3Parser.py:861) (7 samples, 0.18%)</title><rect x="83.9740%" y="276" width="0.1818%" height="15" fill="rgb(221,92,48)" fg:x="3233" fg:w="7"/><text x="84.2240%" y="286.50"></text></g><g><title>parse (openqasm3/parser.py:108) (651 samples, 16.91%)</title><rect x="67.2987%" y="116" width="16.9091%" height="15" fill="rgb(209,209,32)" fg:x="2591" fg:w="651"/><text x="67.5487%" y="126.50">parse (openqasm3/parser.py..</text></g><g><title>wrapped (openqasm3/parser.py:138) (651 samples, 16.91%)</title><rect x="67.2987%" y="132" width="16.9091%" height="15" fill="rgb(221,70,22)" fg:x="2591" fg:w="651"/><text x="67.5487%" y="142.50">wrapped (openqasm3/parser...</text></g><g><title>visitProgram (openqasm3/parser.py:210) (651 samples, 16.91%)</title><rect x="67.2987%" y="148" width="16.9091%" height="15" fill="rgb(248,145,5)" fg:x="2591" fg:w="651"/><text x="67.5487%" y="158.50">visitProgram (openqasm3/pa..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (647 samples, 16.81%)</title><rect x="67.4026%" y="164" width="16.8052%" height="15" fill="rgb(226,116,26)" fg:x="2595" fg:w="647"/><text x="67.6526%" y="174.50">visit (antlr4/tree/Tree.py..</text></g><g><title>accept (qasm3Parser.py:1283) (645 samples, 16.75%)</title><rect x="67.4545%" y="180" width="16.7532%" height="15" fill="rgb(244,5,17)" fg:x="2597" fg:w="645"/><text x="67.7045%" y="190.50">accept (qasm3Parser.py:128..</text></g><g><title>visitStatementOrScope (openqasm3/parser.py:942) (645 samples, 16.75%)</title><rect x="67.4545%" y="196" width="16.7532%" height="15" fill="rgb(252,159,33)" fg:x="2597" fg:w="645"/><text x="67.7045%" y="206.50">visitStatementOrScope (ope..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (634 samples, 16.47%)</title><rect x="67.7403%" y="212" width="16.4675%" height="15" fill="rgb(206,71,0)" fg:x="2608" fg:w="634"/><text x="67.9903%" y="222.50">visit (antlr4/tree/Tree.p..</text></g><g><title>accept (qasm3Parser.py:879) (631 samples, 16.39%)</title><rect x="67.8182%" y="228" width="16.3896%" height="15" fill="rgb(233,118,54)" fg:x="2611" fg:w="631"/><text x="68.0682%" y="238.50">accept (qasm3Parser.py:87..</text></g><g><title>&lt;module&gt; (test.py:78) (3,239 samples, 84.13%)</title><rect x="0.1818%" y="68" width="84.1299%" height="15" fill="rgb(234,83,48)" fg:x="7" fg:w="3239"/><text x="0.4318%" y="78.50">&lt;module&gt; (test.py:78)</text></g><g><title>load (pyqasm/entrypoint.py:50) (3,222 samples, 83.69%)</title><rect x="0.6234%" y="84" width="83.6883%" height="15" fill="rgb(228,3,54)" fg:x="24" fg:w="3222"/><text x="0.8734%" y="94.50">load (pyqasm/entrypoint.py:50)</text></g><g><title>loads (pyqasm/entrypoint.py:78) (3,222 samples, 83.69%)</title><rect x="0.6234%" y="100" width="83.6883%" height="15" fill="rgb(226,155,13)" fg:x="24" fg:w="3222"/><text x="0.8734%" y="110.50">loads (pyqasm/entrypoint.py:78)</text></g><g><title>parse (openqasm3/parser.py:94) (4 samples, 0.10%)</title><rect x="84.2078%" y="116" width="0.1039%" height="15" fill="rgb(241,28,37)" fg:x="3242" fg:w="4"/><text x="84.4578%" y="126.50"></text></g><g><title>__init__ (antlr4/InputStream.py:20) (4 samples, 0.10%)</title><rect x="84.2078%" y="132" width="0.1039%" height="15" fill="rgb(233,93,10)" fg:x="3242" fg:w="4"/><text x="84.4578%" y="142.50"></text></g><g><title>_loadString (antlr4/InputStream.py:24) (4 samples, 0.10%)</title><rect x="84.2078%" y="148" width="0.1039%" height="15" fill="rgb(225,113,19)" fg:x="3242" fg:w="4"/><text x="84.4578%" y="158.50"></text></g><g><title>wrapper (reprlib.py:19) (5 samples, 0.13%)</title><rect x="85.7922%" y="196" width="0.1299%" height="15" fill="rgb(241,2,18)" fg:x="3303" fg:w="5"/><text x="86.0422%" y="206.50"></text></g><g><title>wrapper (reprlib.py:21) (7 samples, 0.18%)</title><rect x="86.2338%" y="228" width="0.1818%" height="15" fill="rgb(228,207,21)" fg:x="3320" fg:w="7"/><text x="86.4838%" y="238.50"></text></g><g><title>__repr__ (&lt;string&gt;:9) (6 samples, 0.16%)</title><rect x="86.2597%" y="244" width="0.1558%" height="15" fill="rgb(213,211,35)" fg:x="3321" fg:w="6"/><text x="86.5097%" y="254.50"></text></g><g><title>__repr__ (&lt;string&gt;:6) (20 samples, 0.52%)</title><rect x="85.9481%" y="212" width="0.5195%" height="15" fill="rgb(209,83,10)" fg:x="3309" fg:w="20"/><text x="86.1981%" y="222.50"></text></g><g><title>wrapper (reprlib.py:17) (4 samples, 0.10%)</title><rect x="86.8831%" y="228" width="0.1039%" height="15" fill="rgb(209,164,1)" fg:x="3345" fg:w="4"/><text x="87.1331%" y="238.50"></text></g><g><title>wrapper (reprlib.py:19) (8 samples, 0.21%)</title><rect x="86.9870%" y="228" width="0.2078%" height="15" fill="rgb(213,184,43)" fg:x="3349" fg:w="8"/><text x="87.2370%" y="238.50"></text></g><g><title>wrapper (reprlib.py:21) (24 samples, 0.62%)</title><rect x="87.6623%" y="260" width="0.6234%" height="15" fill="rgb(231,61,34)" fg:x="3375" fg:w="24"/><text x="87.9123%" y="270.50"></text></g><g><title>__repr__ (&lt;string&gt;:9) (21 samples, 0.55%)</title><rect x="87.7403%" y="276" width="0.5455%" height="15" fill="rgb(235,75,3)" fg:x="3378" fg:w="21"/><text x="87.9903%" y="286.50"></text></g><g><title>__repr__ (&lt;string&gt;:6) (44 samples, 1.14%)</title><rect x="87.1948%" y="244" width="1.1429%" height="15" fill="rgb(220,106,47)" fg:x="3357" fg:w="44"/><text x="87.4448%" y="254.50"></text></g><g><title>wrapper (reprlib.py:21) (55 samples, 1.43%)</title><rect x="87.1948%" y="228" width="1.4286%" height="15" fill="rgb(210,196,33)" fg:x="3357" fg:w="55"/><text x="87.4448%" y="238.50"></text></g><g><title>__repr__ (&lt;string&gt;:9) (11 samples, 0.29%)</title><rect x="88.3377%" y="244" width="0.2857%" height="15" fill="rgb(229,154,42)" fg:x="3401" fg:w="11"/><text x="88.5877%" y="254.50"></text></g><g><title>__repr__ (&lt;string&gt;:7) (88 samples, 2.29%)</title><rect x="86.4675%" y="212" width="2.2857%" height="15" fill="rgb(228,114,26)" fg:x="3329" fg:w="88"/><text x="86.7175%" y="222.50">_..</text></g><g><title>wrapper (reprlib.py:23) (5 samples, 0.13%)</title><rect x="88.6234%" y="228" width="0.1299%" height="15" fill="rgb(208,144,1)" fg:x="3412" fg:w="5"/><text x="88.8734%" y="238.50"></text></g><g><title>__repr__ (&lt;string&gt;:6) (6 samples, 0.16%)</title><rect x="88.8312%" y="244" width="0.1558%" height="15" fill="rgb(239,112,37)" fg:x="3420" fg:w="6"/><text x="89.0812%" y="254.50"></text></g><g><title>__repr__ (&lt;string&gt;:7) (4 samples, 0.10%)</title><rect x="88.9870%" y="244" width="0.1039%" height="15" fill="rgb(210,96,50)" fg:x="3426" fg:w="4"/><text x="89.2370%" y="254.50"></text></g><g><title>__repr__ (&lt;string&gt;:8) (16 samples, 0.42%)</title><rect x="88.7532%" y="212" width="0.4156%" height="15" fill="rgb(222,178,2)" fg:x="3417" fg:w="16"/><text x="89.0032%" y="222.50"></text></g><g><title>wrapper (reprlib.py:21) (13 samples, 0.34%)</title><rect x="88.8312%" y="228" width="0.3377%" height="15" fill="rgb(226,74,18)" fg:x="3420" fg:w="13"/><text x="89.0812%" y="238.50"></text></g><g><title>wrapper (reprlib.py:21) (132 samples, 3.43%)</title><rect x="85.9221%" y="196" width="3.4286%" height="15" fill="rgb(225,67,54)" fg:x="3308" fg:w="132"/><text x="86.1721%" y="206.50">wra..</text></g><g><title>__repr__ (&lt;string&gt;:9) (7 samples, 0.18%)</title><rect x="89.1688%" y="212" width="0.1818%" height="15" fill="rgb(251,92,32)" fg:x="3433" fg:w="7"/><text x="89.4188%" y="222.50"></text></g><g><title>__repr__ (&lt;string&gt;:11) (175 samples, 4.55%)</title><rect x="84.8571%" y="180" width="4.5455%" height="15" fill="rgb(228,149,22)" fg:x="3267" fg:w="175"/><text x="85.1071%" y="190.50">__rep..</text></g><g><title>wrapper (reprlib.py:21) (178 samples, 4.62%)</title><rect x="84.8312%" y="164" width="4.6234%" height="15" fill="rgb(243,54,13)" fg:x="3266" fg:w="178"/><text x="85.0812%" y="174.50">wrapp..</text></g><g><title>visit_statement (pyqasm/visitor.py:3091) (190 samples, 4.94%)</title><rect x="84.5455%" y="148" width="4.9351%" height="15" fill="rgb(243,180,28)" fg:x="3255" fg:w="190"/><text x="84.7955%" y="158.50">visit_..</text></g><g><title>visit_statement (pyqasm/visitor.py:3093) (4 samples, 0.10%)</title><rect x="89.4805%" y="148" width="0.1039%" height="15" fill="rgb(208,167,24)" fg:x="3445" fg:w="4"/><text x="89.7305%" y="158.50"></text></g><g><title>visit_statement (pyqasm/visitor.py:3099) (4 samples, 0.10%)</title><rect x="89.7143%" y="148" width="0.1039%" height="15" fill="rgb(245,73,45)" fg:x="3454" fg:w="4"/><text x="89.9643%" y="158.50"></text></g><g><title>copy (copy.py:88) (8 samples, 0.21%)</title><rect x="90.3377%" y="180" width="0.2078%" height="15" fill="rgb(237,203,48)" fg:x="3478" fg:w="8"/><text x="90.5877%" y="190.50"></text></g><g><title>_visit_generic_gate_operation (pyqasm/visitor.py:1296) (26 samples, 0.68%)</title><rect x="90.2338%" y="164" width="0.6753%" height="15" fill="rgb(211,197,16)" fg:x="3474" fg:w="26"/><text x="90.4838%" y="174.50"></text></g><g><title>copy (copy.py:98) (13 samples, 0.34%)</title><rect x="90.5714%" y="180" width="0.3377%" height="15" fill="rgb(243,99,51)" fg:x="3487" fg:w="13"/><text x="90.8214%" y="190.50"></text></g><g><title>_reconstruct (copy.py:269) (6 samples, 0.16%)</title><rect x="90.7532%" y="196" width="0.1558%" height="15" fill="rgb(215,123,29)" fg:x="3494" fg:w="6"/><text x="91.0032%" y="206.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:288) (9 samples, 0.23%)</title><rect x="91.2987%" y="180" width="0.2338%" height="15" fill="rgb(239,186,37)" fg:x="3515" fg:w="9"/><text x="91.5487%" y="190.50"></text></g><g><title>get_from_visible_scope (pyqasm/scope.py:194) (5 samples, 0.13%)</title><rect x="91.4026%" y="196" width="0.1299%" height="15" fill="rgb(252,136,39)" fg:x="3519" fg:w="5"/><text x="91.6526%" y="206.50"></text></g><g><title>in_global_scope (pyqasm/scope.py:105) (5 samples, 0.13%)</title><rect x="91.4026%" y="212" width="0.1299%" height="15" fill="rgb(223,213,32)" fg:x="3519" fg:w="5"/><text x="91.6526%" y="222.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:323) (22 samples, 0.57%)</title><rect x="91.6623%" y="180" width="0.5714%" height="15" fill="rgb(233,115,5)" fg:x="3529" fg:w="22"/><text x="91.9123%" y="190.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:324) (5 samples, 0.13%)</title><rect x="92.2338%" y="180" width="0.1299%" height="15" fill="rgb(207,226,44)" fg:x="3551" fg:w="5"/><text x="92.4838%" y="190.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:341) (7 samples, 0.18%)</title><rect x="92.3636%" y="180" width="0.1818%" height="15" fill="rgb(208,126,0)" fg:x="3556" fg:w="7"/><text x="92.6136%" y="190.50"></text></g><g><title>_visit_generic_gate_operation (pyqasm/visitor.py:1344) (60 samples, 1.56%)</title><rect x="91.0390%" y="164" width="1.5584%" height="15" fill="rgb(244,66,21)" fg:x="3505" fg:w="60"/><text x="91.2890%" y="174.50"></text></g><g><title>&lt;lambda&gt; (pyqasm/maps/gates.py:1044) (4 samples, 0.10%)</title><rect x="93.0130%" y="212" width="0.1039%" height="15" fill="rgb(222,97,12)" fg:x="3581" fg:w="4"/><text x="93.2630%" y="222.50"></text></g><g><title>phaseshift_gate (pyqasm/maps/gates.py:282) (4 samples, 0.10%)</title><rect x="93.1429%" y="212" width="0.1039%" height="15" fill="rgb(219,213,19)" fg:x="3586" fg:w="4"/><text x="93.3929%" y="222.50"></text></g><g><title>one_qubit_gate_op (pyqasm/maps/gates.py:968) (4 samples, 0.10%)</title><rect x="93.1429%" y="228" width="0.1039%" height="15" fill="rgb(252,169,30)" fg:x="3586" fg:w="4"/><text x="93.3929%" y="238.50"></text></g><g><title>one_qubit_rotation_op (pyqasm/maps/gates.py:981) (4 samples, 0.10%)</title><rect x="93.2468%" y="228" width="0.1039%" height="15" fill="rgb(206,32,51)" fg:x="3590" fg:w="4"/><text x="93.4968%" y="238.50"></text></g><g><title>phaseshift_gate (pyqasm/maps/gates.py:283) (11 samples, 0.29%)</title><rect x="93.2468%" y="212" width="0.2857%" height="15" fill="rgb(250,172,42)" fg:x="3590" fg:w="11"/><text x="93.4968%" y="222.50"></text></g><g><title>one_qubit_rotation_op (pyqasm/maps/gates.py:984) (4 samples, 0.10%)</title><rect x="93.4286%" y="228" width="0.1039%" height="15" fill="rgb(209,34,43)" fg:x="3597" fg:w="4"/><text x="93.6786%" y="238.50"></text></g><g><title>one_qubit_gate_op (pyqasm/maps/gates.py:968) (5 samples, 0.13%)</title><rect x="93.5325%" y="228" width="0.1299%" height="15" fill="rgb(223,11,35)" fg:x="3601" fg:w="5"/><text x="93.7825%" y="238.50"></text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:1000) (30 samples, 0.78%)</title><rect x="92.9091%" y="180" width="0.7792%" height="15" fill="rgb(251,219,26)" fg:x="3577" fg:w="30"/><text x="93.1591%" y="190.50"></text></g><g><title>_broadcast_gate_operation (pyqasm/visitor.py:885) (28 samples, 0.73%)</title><rect x="92.9610%" y="196" width="0.7273%" height="15" fill="rgb(231,119,3)" fg:x="3579" fg:w="28"/><text x="93.2110%" y="206.50"></text></g><g><title>phaseshift_gate (pyqasm/maps/gates.py:284) (6 samples, 0.16%)</title><rect x="93.5325%" y="212" width="0.1558%" height="15" fill="rgb(216,97,11)" fg:x="3601" fg:w="6"/><text x="93.7825%" y="222.50"></text></g><g><title>_update_qubit_depth_for_gate (pyqasm/visitor.py:907) (21 samples, 0.55%)</title><rect x="93.7662%" y="196" width="0.5455%" height="15" fill="rgb(223,59,9)" fg:x="3610" fg:w="21"/><text x="94.0162%" y="206.50"></text></g><g><title>evaluate_expression (pyqasm/expressions.py:355) (5 samples, 0.13%)</title><rect x="94.1818%" y="212" width="0.1299%" height="15" fill="rgb(233,93,31)" fg:x="3626" fg:w="5"/><text x="94.4318%" y="222.50"></text></g><g><title>_update_qubit_depth_for_gate (pyqasm/visitor.py:910) (4 samples, 0.10%)</title><rect x="94.3636%" y="196" width="0.1039%" height="15" fill="rgb(239,81,33)" fg:x="3633" fg:w="4"/><text x="94.6136%" y="206.50"></text></g><g><title>_update_qubit_depth_for_gate (pyqasm/visitor.py:915) (11 samples, 0.29%)</title><rect x="94.5195%" y="196" width="0.2857%" height="15" fill="rgb(213,120,34)" fg:x="3639" fg:w="11"/><text x="94.7695%" y="206.50"></text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:1009) (44 samples, 1.14%)</title><rect x="93.6883%" y="180" width="1.1429%" height="15" fill="rgb(243,49,53)" fg:x="3607" fg:w="44"/><text x="93.9383%" y="190.50"></text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:1023) (10 samples, 0.26%)</title><rect x="94.8831%" y="180" width="0.2597%" height="15" fill="rgb(247,216,33)" fg:x="3653" fg:w="10"/><text x="95.1331%" y="190.50"></text></g><g><title>verify_gate_qubits (pyqasm/analyzer.py:289) (10 samples, 0.26%)</title><rect x="94.8831%" y="196" width="0.2597%" height="15" fill="rgb(226,26,14)" fg:x="3653" fg:w="10"/><text x="95.1331%" y="206.50"></text></g><g><title>wrapper (reprlib.py:21) (13 samples, 0.34%)</title><rect x="96.2597%" y="260" width="0.3377%" height="15" fill="rgb(215,49,53)" fg:x="3706" fg:w="13"/><text x="96.5097%" y="270.50"></text></g><g><title>__repr__ (&lt;string&gt;:9) (13 samples, 0.34%)</title><rect x="96.2597%" y="276" width="0.3377%" height="15" fill="rgb(245,162,40)" fg:x="3706" fg:w="13"/><text x="96.5097%" y="286.50"></text></g><g><title>__repr__ (&lt;string&gt;:6) (26 samples, 0.68%)</title><rect x="95.9740%" y="244" width="0.6753%" height="15" fill="rgb(229,68,17)" fg:x="3695" fg:w="26"/><text x="96.2240%" y="254.50"></text></g><g><title>wrapper (reprlib.py:21) (10 samples, 0.26%)</title><rect x="97.0390%" y="260" width="0.2597%" height="15" fill="rgb(213,182,10)" fg:x="3736" fg:w="10"/><text x="97.2890%" y="270.50"></text></g><g><title>__repr__ (&lt;string&gt;:6) (9 samples, 0.23%)</title><rect x="97.0649%" y="276" width="0.2338%" height="15" fill="rgb(245,125,30)" fg:x="3737" fg:w="9"/><text x="97.3149%" y="286.50"></text></g><g><title>__repr__ (&lt;string&gt;:7) (28 samples, 0.73%)</title><rect x="96.6494%" y="244" width="0.7273%" height="15" fill="rgb(232,202,2)" fg:x="3721" fg:w="28"/><text x="96.8994%" y="254.50"></text></g><g><title>__repr__ (&lt;string&gt;:6) (5 samples, 0.13%)</title><rect x="97.4286%" y="276" width="0.1299%" height="15" fill="rgb(237,140,51)" fg:x="3751" fg:w="5"/><text x="97.6786%" y="286.50"></text></g><g><title>wrapper (reprlib.py:21) (9 samples, 0.23%)</title><rect x="97.4286%" y="260" width="0.2338%" height="15" fill="rgb(236,157,25)" fg:x="3751" fg:w="9"/><text x="97.6786%" y="270.50"></text></g><g><title>__repr__ (&lt;string&gt;:8) (12 samples, 0.31%)</title><rect x="97.3766%" y="244" width="0.3117%" height="15" fill="rgb(219,209,0)" fg:x="3749" fg:w="12"/><text x="97.6266%" y="254.50"></text></g><g><title>wrapper (reprlib.py:21) (73 samples, 1.90%)</title><rect x="95.9221%" y="228" width="1.8961%" height="15" fill="rgb(240,116,54)" fg:x="3693" fg:w="73"/><text x="96.1721%" y="238.50">w..</text></g><g><title>__repr__ (&lt;string&gt;:9) (5 samples, 0.13%)</title><rect x="97.6883%" y="244" width="0.1299%" height="15" fill="rgb(216,10,36)" fg:x="3761" fg:w="5"/><text x="97.9383%" y="254.50"></text></g><g><title>wrapper (reprlib.py:21) (98 samples, 2.55%)</title><rect x="95.3766%" y="196" width="2.5455%" height="15" fill="rgb(222,72,44)" fg:x="3672" fg:w="98"/><text x="95.6266%" y="206.50">wr..</text></g><g><title>__repr__ (&lt;string&gt;:11) (98 samples, 2.55%)</title><rect x="95.3766%" y="212" width="2.5455%" height="15" fill="rgb(232,159,9)" fg:x="3672" fg:w="98"/><text x="95.6266%" y="222.50">__..</text></g><g><title>wrapper (reprlib.py:23) (4 samples, 0.10%)</title><rect x="97.8182%" y="228" width="0.1039%" height="15" fill="rgb(210,39,32)" fg:x="3766" fg:w="4"/><text x="98.0682%" y="238.50"></text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:948) (107 samples, 2.78%)</title><rect x="95.1688%" y="180" width="2.7792%" height="15" fill="rgb(216,194,45)" fg:x="3664" fg:w="107"/><text x="95.4188%" y="190.50">_v..</text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:960) (8 samples, 0.21%)</title><rect x="97.9481%" y="180" width="0.2078%" height="15" fill="rgb(218,18,35)" fg:x="3771" fg:w="8"/><text x="98.1981%" y="190.50"></text></g><g><title>map_qasm_op_to_callable (pyqasm/maps/gates.py:1202) (5 samples, 0.13%)</title><rect x="98.0260%" y="196" width="0.1299%" height="15" fill="rgb(207,83,51)" fg:x="3774" fg:w="5"/><text x="98.2760%" y="206.50"></text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:967) (4 samples, 0.10%)</title><rect x="98.1558%" y="180" width="0.1039%" height="15" fill="rgb(225,63,43)" fg:x="3779" fg:w="4"/><text x="98.4058%" y="190.50"></text></g><g><title>map_qasm_op_num_params (pyqasm/maps/gates.py:1169) (4 samples, 0.10%)</title><rect x="98.1558%" y="196" width="0.1039%" height="15" fill="rgb(207,57,36)" fg:x="3779" fg:w="4"/><text x="98.4058%" y="206.50"></text></g><g><title>_get_op_parameters (pyqasm/visitor.py:805) (13 samples, 0.34%)</title><rect x="98.3117%" y="196" width="0.3377%" height="15" fill="rgb(216,99,33)" fg:x="3785" fg:w="13"/><text x="98.5617%" y="206.50"></text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:970) (16 samples, 0.42%)</title><rect x="98.2597%" y="180" width="0.4156%" height="15" fill="rgb(225,42,16)" fg:x="3783" fg:w="16"/><text x="98.5097%" y="190.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:288) (6 samples, 0.16%)</title><rect x="98.9351%" y="212" width="0.1558%" height="15" fill="rgb(220,201,45)" fg:x="3809" fg:w="6"/><text x="99.1851%" y="222.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:323) (14 samples, 0.36%)</title><rect x="99.1169%" y="212" width="0.3636%" height="15" fill="rgb(225,33,4)" fg:x="3816" fg:w="14"/><text x="99.3669%" y="222.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:324) (4 samples, 0.10%)</title><rect x="99.4805%" y="212" width="0.1039%" height="15" fill="rgb(224,33,50)" fg:x="3830" fg:w="4"/><text x="99.7305%" y="222.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:341) (4 samples, 0.10%)</title><rect x="99.6104%" y="212" width="0.1039%" height="15" fill="rgb(246,198,51)" fg:x="3835" fg:w="4"/><text x="99.8604%" y="222.50"></text></g><g><title>_unroll_multiple_target_qubits (pyqasm/visitor.py:850) (39 samples, 1.01%)</title><rect x="98.7532%" y="196" width="1.0130%" height="15" fill="rgb(205,22,4)" fg:x="3802" fg:w="39"/><text x="99.0032%" y="206.50"></text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:983) (45 samples, 1.17%)</title><rect x="98.6753%" y="180" width="1.1688%" height="15" fill="rgb(206,3,8)" fg:x="3799" fg:w="45"/><text x="98.9253%" y="190.50"></text></g><g><title>_visit_generic_gate_operation (pyqasm/visitor.py:1421) (273 samples, 7.09%)</title><rect x="92.8052%" y="164" width="7.0909%" height="15" fill="rgb(251,23,15)" fg:x="3573" fg:w="273"/><text x="93.0552%" y="174.50">_visit_gen..</text></g><g><title>all (3,850 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(252,88,28)" fg:x="0" fg:w="3850"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (test.py:79) (604 samples, 15.69%)</title><rect x="84.3117%" y="68" width="15.6883%" height="15" fill="rgb(212,127,14)" fg:x="3246" fg:w="604"/><text x="84.5617%" y="78.50">&lt;module&gt; (test.py:79)</text></g><g><title>wrapper (pyqasm/modules/base.py:60) (604 samples, 15.69%)</title><rect x="84.3117%" y="84" width="15.6883%" height="15" fill="rgb(247,145,37)" fg:x="3246" fg:w="604"/><text x="84.5617%" y="94.50">wrapper (pyqasm/modules/..</text></g><g><title>validate (pyqasm/modules/base.py:571) (604 samples, 15.69%)</title><rect x="84.3117%" y="100" width="15.6883%" height="15" fill="rgb(209,117,53)" fg:x="3246" fg:w="604"/><text x="84.5617%" y="110.50">validate (pyqasm/modules..</text></g><g><title>accept (pyqasm/modules/qasm2.py:107) (604 samples, 15.69%)</title><rect x="84.3117%" y="116" width="15.6883%" height="15" fill="rgb(212,90,42)" fg:x="3246" fg:w="604"/><text x="84.5617%" y="126.50">accept (pyqasm/modules/q..</text></g><g><title>visit_basic_block (pyqasm/visitor.py:3150) (604 samples, 15.69%)</title><rect x="84.3117%" y="132" width="15.6883%" height="15" fill="rgb(218,164,37)" fg:x="3246" fg:w="604"/><text x="84.5617%" y="142.50">visit_basic_block (pyqas..</text></g><g><title>visit_statement (pyqasm/visitor.py:3130) (380 samples, 9.87%)</title><rect x="90.1299%" y="148" width="9.8701%" height="15" fill="rgb(246,65,34)" fg:x="3470" fg:w="380"/><text x="90.3799%" y="158.50">visit_statemen..</text></g></svg></svg>