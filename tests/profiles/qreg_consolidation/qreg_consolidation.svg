<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="634" onload="init(evt)" viewBox="0 0 1200 634" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="634" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o tests/profiles/qreg_consolidation/qreg_consolidation.svg -- python3 /Users/vinay/Desktop/test.py</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="623.00"> </text><svg id="frames" x="10" width="1180" total_samples="4471"><g><title>&lt;module&gt; (test.py:7) (11 samples, 0.25%)</title><rect x="0.0000%" y="68" width="0.2460%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="11"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (11 samples, 0.25%)</title><rect x="0.0000%" y="84" width="0.2460%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="11"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (11 samples, 0.25%)</title><rect x="0.0000%" y="100" width="0.2460%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="11"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (11 samples, 0.25%)</title><rect x="0.0000%" y="116" width="0.2460%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="11"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (11 samples, 0.25%)</title><rect x="0.0000%" y="132" width="0.2460%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="11"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.25%)</title><rect x="0.0000%" y="148" width="0.2460%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="11"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (pyqasm/__init__.py:64) (11 samples, 0.25%)</title><rect x="0.0000%" y="164" width="0.2460%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="11"/><text x="0.2500%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (11 samples, 0.25%)</title><rect x="0.0000%" y="180" width="0.2460%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="11"/><text x="0.2500%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (11 samples, 0.25%)</title><rect x="0.0000%" y="196" width="0.2460%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="11"/><text x="0.2500%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (11 samples, 0.25%)</title><rect x="0.0000%" y="212" width="0.2460%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="11"/><text x="0.2500%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (11 samples, 0.25%)</title><rect x="0.0000%" y="228" width="0.2460%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="11"/><text x="0.2500%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (11 samples, 0.25%)</title><rect x="0.0000%" y="244" width="0.2460%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="11"/><text x="0.2500%" y="254.50"></text></g><g><title>&lt;module&gt; (pyqasm/entrypoint.py:28) (7 samples, 0.16%)</title><rect x="0.0895%" y="260" width="0.1566%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="7"/><text x="0.3395%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.16%)</title><rect x="0.0895%" y="276" width="0.1566%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="7"/><text x="0.3395%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.16%)</title><rect x="0.0895%" y="292" width="0.1566%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="7"/><text x="0.3395%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.16%)</title><rect x="0.0895%" y="308" width="0.1566%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="7"/><text x="0.3395%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (7 samples, 0.16%)</title><rect x="0.0895%" y="324" width="0.1566%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="7"/><text x="0.3395%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.16%)</title><rect x="0.0895%" y="340" width="0.1566%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="7"/><text x="0.3395%" y="350.50"></text></g><g><title>&lt;module&gt; (pyqasm/modules/__init__.py:32) (7 samples, 0.16%)</title><rect x="0.0895%" y="356" width="0.1566%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="7"/><text x="0.3395%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.16%)</title><rect x="0.0895%" y="372" width="0.1566%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="7"/><text x="0.3395%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.16%)</title><rect x="0.0895%" y="388" width="0.1566%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="7"/><text x="0.3395%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.16%)</title><rect x="0.0895%" y="404" width="0.1566%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="7"/><text x="0.3395%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (7 samples, 0.16%)</title><rect x="0.0895%" y="420" width="0.1566%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="7"/><text x="0.3395%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.16%)</title><rect x="0.0895%" y="436" width="0.1566%" height="15" fill="rgb(247,18,42)" fg:x="4" fg:w="7"/><text x="0.3395%" y="446.50"></text></g><g><title>process_include_statements (pyqasm/preprocess.py:70) (8 samples, 0.18%)</title><rect x="0.2460%" y="100" width="0.1789%" height="15" fill="rgb(241,131,45)" fg:x="11" fg:w="8"/><text x="0.4960%" y="110.50"></text></g><g><title>load (pyqasm/entrypoint.py:49) (19 samples, 0.42%)</title><rect x="0.2460%" y="84" width="0.4250%" height="15" fill="rgb(249,31,29)" fg:x="11" fg:w="19"/><text x="0.4960%" y="94.50"></text></g><g><title>process_include_statements (pyqasm/preprocess.py:77) (11 samples, 0.25%)</title><rect x="0.4250%" y="100" width="0.2460%" height="15" fill="rgb(225,111,53)" fg:x="19" fg:w="11"/><text x="0.6750%" y="110.50"></text></g><g><title>__init__ (qasm3Parser.py:1258) (11 samples, 0.25%)</title><rect x="0.9394%" y="164" width="0.2460%" height="15" fill="rgb(238,160,17)" fg:x="42" fg:w="11"/><text x="1.1894%" y="174.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (6 samples, 0.13%)</title><rect x="1.2301%" y="180" width="0.1342%" height="15" fill="rgb(214,148,48)" fg:x="55" fg:w="6"/><text x="1.4801%" y="190.50"></text></g><g><title>statementOrScope (qasm3Parser.py:1292) (26 samples, 0.58%)</title><rect x="0.8052%" y="148" width="0.5815%" height="15" fill="rgb(232,36,49)" fg:x="36" fg:w="26"/><text x="1.0552%" y="158.50"></text></g><g><title>__init__ (qasm3Parser.py:1259) (9 samples, 0.20%)</title><rect x="1.1854%" y="164" width="0.2013%" height="15" fill="rgb(209,103,24)" fg:x="53" fg:w="9"/><text x="1.4354%" y="174.50"></text></g><g><title>enterRule (antlr4/Parser.py:372) (5 samples, 0.11%)</title><rect x="1.4762%" y="164" width="0.1118%" height="15" fill="rgb(229,88,8)" fg:x="66" fg:w="5"/><text x="1.7262%" y="174.50"></text></g><g><title>enterRule (antlr4/Parser.py:374) (5 samples, 0.11%)</title><rect x="1.5880%" y="164" width="0.1118%" height="15" fill="rgb(213,181,19)" fg:x="71" fg:w="5"/><text x="1.8380%" y="174.50"></text></g><g><title>statementOrScope (qasm3Parser.py:1293) (18 samples, 0.40%)</title><rect x="1.3867%" y="148" width="0.4026%" height="15" fill="rgb(254,191,54)" fg:x="62" fg:w="18"/><text x="1.6367%" y="158.50"></text></g><g><title>statementOrScope (qasm3Parser.py:1298) (6 samples, 0.13%)</title><rect x="1.8564%" y="148" width="0.1342%" height="15" fill="rgb(241,83,37)" fg:x="83" fg:w="6"/><text x="2.1064%" y="158.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (5 samples, 0.11%)</title><rect x="2.3037%" y="212" width="0.1118%" height="15" fill="rgb(233,36,39)" fg:x="103" fg:w="5"/><text x="2.5537%" y="222.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2365) (15 samples, 0.34%)</title><rect x="2.1472%" y="180" width="0.3355%" height="15" fill="rgb(226,3,54)" fg:x="96" fg:w="15"/><text x="2.3972%" y="190.50"></text></g><g><title>__init__ (qasm3Parser.py:2306) (10 samples, 0.22%)</title><rect x="2.2590%" y="196" width="0.2237%" height="15" fill="rgb(245,192,40)" fg:x="101" fg:w="10"/><text x="2.5090%" y="206.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2366) (14 samples, 0.31%)</title><rect x="2.4827%" y="180" width="0.3131%" height="15" fill="rgb(238,167,29)" fg:x="111" fg:w="14"/><text x="2.7327%" y="190.50"></text></g><g><title>enterRule (antlr4/Parser.py:376) (6 samples, 0.13%)</title><rect x="2.6616%" y="196" width="0.1342%" height="15" fill="rgb(232,182,51)" fg:x="119" fg:w="6"/><text x="2.9116%" y="206.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (6 samples, 0.13%)</title><rect x="2.9076%" y="196" width="0.1342%" height="15" fill="rgb(231,60,39)" fg:x="130" fg:w="6"/><text x="3.1576%" y="206.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (5 samples, 0.11%)</title><rect x="3.0642%" y="196" width="0.1118%" height="15" fill="rgb(208,69,12)" fg:x="137" fg:w="5"/><text x="3.3142%" y="206.50"></text></g><g><title>seek (antlr4/BufferedTokenStream.py:77) (5 samples, 0.11%)</title><rect x="3.0642%" y="212" width="0.1118%" height="15" fill="rgb(235,93,37)" fg:x="137" fg:w="5"/><text x="3.3142%" y="222.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2371) (17 samples, 0.38%)</title><rect x="2.8182%" y="180" width="0.3802%" height="15" fill="rgb(213,116,39)" fg:x="126" fg:w="17"/><text x="3.0682%" y="190.50"></text></g><g><title>match (antlr4/Parser.py:121) (8 samples, 0.18%)</title><rect x="3.4444%" y="196" width="0.1789%" height="15" fill="rgb(222,207,29)" fg:x="154" fg:w="8"/><text x="3.6944%" y="206.50"></text></g><g><title>getCurrentToken (antlr4/Parser.py:313) (7 samples, 0.16%)</title><rect x="3.4668%" y="212" width="0.1566%" height="15" fill="rgb(206,96,30)" fg:x="155" fg:w="7"/><text x="3.7168%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:346) (5 samples, 0.11%)</title><rect x="3.6904%" y="212" width="0.1118%" height="15" fill="rgb(218,138,4)" fg:x="165" fg:w="5"/><text x="3.9404%" y="222.50"></text></g><g><title>getCurrentToken (antlr4/Parser.py:313) (5 samples, 0.11%)</title><rect x="3.6904%" y="228" width="0.1118%" height="15" fill="rgb(250,191,14)" fg:x="165" fg:w="5"/><text x="3.9404%" y="238.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:86) (7 samples, 0.16%)</title><rect x="4.0259%" y="244" width="0.1566%" height="15" fill="rgb(239,60,40)" fg:x="180" fg:w="7"/><text x="4.2759%" y="254.50"></text></g><g><title>__setattr__ (antlr4/tree/Tree.py:89) (7 samples, 0.16%)</title><rect x="4.0259%" y="260" width="0.1566%" height="15" fill="rgb(206,27,48)" fg:x="180" fg:w="7"/><text x="4.2759%" y="270.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (15 samples, 0.34%)</title><rect x="3.9365%" y="228" width="0.3355%" height="15" fill="rgb(225,35,8)" fg:x="176" fg:w="15"/><text x="4.1865%" y="238.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2385) (43 samples, 0.96%)</title><rect x="3.3997%" y="180" width="0.9618%" height="15" fill="rgb(250,213,24)" fg:x="152" fg:w="43"/><text x="3.6497%" y="190.50"></text></g><g><title>match (antlr4/Parser.py:124) (30 samples, 0.67%)</title><rect x="3.6904%" y="196" width="0.6710%" height="15" fill="rgb(247,123,22)" fg:x="165" fg:w="30"/><text x="3.9404%" y="206.50"></text></g><g><title>consume (antlr4/Parser.py:354) (20 samples, 0.45%)</title><rect x="3.9141%" y="212" width="0.4473%" height="15" fill="rgb(231,138,38)" fg:x="175" fg:w="20"/><text x="4.1641%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:348) (7 samples, 0.16%)</title><rect x="4.5404%" y="212" width="0.1566%" height="15" fill="rgb(231,145,46)" fg:x="203" fg:w="7"/><text x="4.7904%" y="222.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2391) (18 samples, 0.40%)</title><rect x="4.4285%" y="180" width="0.4026%" height="15" fill="rgb(251,118,11)" fg:x="198" fg:w="18"/><text x="4.6785%" y="190.50"></text></g><g><title>match (antlr4/Parser.py:124) (16 samples, 0.36%)</title><rect x="4.4733%" y="196" width="0.3579%" height="15" fill="rgb(217,147,25)" fg:x="200" fg:w="16"/><text x="4.7233%" y="206.50"></text></g><g><title>consume (antlr4/Parser.py:354) (6 samples, 0.13%)</title><rect x="4.6969%" y="212" width="0.1342%" height="15" fill="rgb(247,81,37)" fg:x="210" fg:w="6"/><text x="4.9469%" y="222.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (6 samples, 0.13%)</title><rect x="4.6969%" y="228" width="0.1342%" height="15" fill="rgb(209,12,38)" fg:x="210" fg:w="6"/><text x="4.9469%" y="238.50"></text></g><g><title>expressionList (qasm3Parser.py:6661) (9 samples, 0.20%)</title><rect x="4.9206%" y="196" width="0.2013%" height="15" fill="rgb(227,1,9)" fg:x="220" fg:w="9"/><text x="5.1706%" y="206.50"></text></g><g><title>__init__ (qasm3Parser.py:6623) (5 samples, 0.11%)</title><rect x="5.0101%" y="212" width="0.1118%" height="15" fill="rgb(248,47,43)" fg:x="224" fg:w="5"/><text x="5.2601%" y="222.50"></text></g><g><title>enterRule (antlr4/Parser.py:374) (5 samples, 0.11%)</title><rect x="5.1219%" y="212" width="0.1118%" height="15" fill="rgb(221,10,30)" fg:x="229" fg:w="5"/><text x="5.3719%" y="222.50"></text></g><g><title>expressionList (qasm3Parser.py:6662) (6 samples, 0.13%)</title><rect x="5.1219%" y="196" width="0.1342%" height="15" fill="rgb(210,229,1)" fg:x="229" fg:w="6"/><text x="5.3719%" y="206.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (5 samples, 0.11%)</title><rect x="5.6140%" y="228" width="0.1118%" height="15" fill="rgb(222,148,37)" fg:x="251" fg:w="5"/><text x="5.8640%" y="238.50"></text></g><g><title>expression (qasm3Parser.py:4286) (11 samples, 0.25%)</title><rect x="5.5692%" y="212" width="0.2460%" height="15" fill="rgb(234,67,33)" fg:x="249" fg:w="11"/><text x="5.8192%" y="222.50"></text></g><g><title>expression (qasm3Parser.py:4311) (5 samples, 0.11%)</title><rect x="5.9271%" y="212" width="0.1118%" height="15" fill="rgb(247,98,35)" fg:x="265" fg:w="5"/><text x="6.1771%" y="222.50"></text></g><g><title>expression (qasm3Parser.py:4313) (11 samples, 0.25%)</title><rect x="6.0389%" y="212" width="0.2460%" height="15" fill="rgb(247,138,52)" fg:x="270" fg:w="11"/><text x="6.2889%" y="222.50"></text></g><g><title>expression (qasm3Parser.py:4377) (10 samples, 0.22%)</title><rect x="6.2849%" y="212" width="0.2237%" height="15" fill="rgb(213,79,30)" fg:x="281" fg:w="10"/><text x="6.5349%" y="222.50"></text></g><g><title>__init__ (qasm3Parser.py:4232) (6 samples, 0.13%)</title><rect x="6.3744%" y="228" width="0.1342%" height="15" fill="rgb(246,177,23)" fg:x="285" fg:w="6"/><text x="6.6244%" y="238.50"></text></g><g><title>__init__ (qasm3Parser.py:3684) (6 samples, 0.13%)</title><rect x="6.3744%" y="244" width="0.1342%" height="15" fill="rgb(230,62,27)" fg:x="285" fg:w="6"/><text x="6.6244%" y="254.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (6 samples, 0.13%)</title><rect x="6.3744%" y="260" width="0.1342%" height="15" fill="rgb(216,154,8)" fg:x="285" fg:w="6"/><text x="6.6244%" y="270.50"></text></g><g><title>consume (antlr4/Parser.py:348) (5 samples, 0.11%)</title><rect x="6.5981%" y="228" width="0.1118%" height="15" fill="rgb(244,35,45)" fg:x="295" fg:w="5"/><text x="6.8481%" y="238.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:85) (6 samples, 0.13%)</title><rect x="6.7770%" y="260" width="0.1342%" height="15" fill="rgb(251,115,12)" fg:x="303" fg:w="6"/><text x="7.0270%" y="270.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (7 samples, 0.16%)</title><rect x="6.7770%" y="244" width="0.1566%" height="15" fill="rgb(240,54,50)" fg:x="303" fg:w="7"/><text x="7.0270%" y="254.50"></text></g><g><title>expression (qasm3Parser.py:4386) (18 samples, 0.40%)</title><rect x="6.5533%" y="212" width="0.4026%" height="15" fill="rgb(233,84,52)" fg:x="293" fg:w="18"/><text x="6.8033%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:354) (10 samples, 0.22%)</title><rect x="6.7323%" y="228" width="0.2237%" height="15" fill="rgb(207,117,47)" fg:x="301" fg:w="10"/><text x="6.9823%" y="238.50"></text></g><g><title>expression (qasm3Parser.py:4390) (6 samples, 0.13%)</title><rect x="6.9559%" y="212" width="0.1342%" height="15" fill="rgb(249,43,39)" fg:x="311" fg:w="6"/><text x="7.2059%" y="222.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (5 samples, 0.11%)</title><rect x="7.1796%" y="228" width="0.1118%" height="15" fill="rgb(209,38,44)" fg:x="321" fg:w="5"/><text x="7.4296%" y="238.50"></text></g><g><title>expression (qasm3Parser.py:4393) (12 samples, 0.27%)</title><rect x="7.0901%" y="212" width="0.2684%" height="15" fill="rgb(236,212,23)" fg:x="317" fg:w="12"/><text x="7.3401%" y="222.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (5 samples, 0.11%)</title><rect x="7.3585%" y="228" width="0.1118%" height="15" fill="rgb(242,79,21)" fg:x="329" fg:w="5"/><text x="7.6085%" y="238.50"></text></g><g><title>expression (qasm3Parser.py:4401) (7 samples, 0.16%)</title><rect x="7.3585%" y="212" width="0.1566%" height="15" fill="rgb(211,96,35)" fg:x="329" fg:w="7"/><text x="7.6085%" y="222.50"></text></g><g><title>expression (qasm3Parser.py:4416) (5 samples, 0.11%)</title><rect x="7.5151%" y="212" width="0.1118%" height="15" fill="rgb(253,215,40)" fg:x="336" fg:w="5"/><text x="7.7651%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:348) (6 samples, 0.13%)</title><rect x="7.8059%" y="228" width="0.1342%" height="15" fill="rgb(211,81,21)" fg:x="349" fg:w="6"/><text x="8.0559%" y="238.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (5 samples, 0.11%)</title><rect x="7.9624%" y="244" width="0.1118%" height="15" fill="rgb(208,190,38)" fg:x="356" fg:w="5"/><text x="8.2124%" y="254.50"></text></g><g><title>expression (qasm3Parser.py:4429) (14 samples, 0.31%)</title><rect x="7.8059%" y="212" width="0.3131%" height="15" fill="rgb(235,213,38)" fg:x="349" fg:w="14"/><text x="8.0559%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:354) (8 samples, 0.18%)</title><rect x="7.9401%" y="228" width="0.1789%" height="15" fill="rgb(237,122,38)" fg:x="355" fg:w="8"/><text x="8.1901%" y="238.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (8 samples, 0.18%)</title><rect x="8.4545%" y="260" width="0.1789%" height="15" fill="rgb(244,218,35)" fg:x="378" fg:w="8"/><text x="8.7045%" y="270.50"></text></g><g><title>expression (qasm3Parser.py:4386) (18 samples, 0.40%)</title><rect x="8.3427%" y="228" width="0.4026%" height="15" fill="rgb(240,68,47)" fg:x="373" fg:w="18"/><text x="8.5927%" y="238.50"></text></g><g><title>consume (antlr4/Parser.py:354) (13 samples, 0.29%)</title><rect x="8.4545%" y="244" width="0.2908%" height="15" fill="rgb(210,16,53)" fg:x="378" fg:w="13"/><text x="8.7045%" y="254.50"></text></g><g><title>expression (qasm3Parser.py:4431) (35 samples, 0.78%)</title><rect x="8.1414%" y="212" width="0.7828%" height="15" fill="rgb(235,124,12)" fg:x="364" fg:w="35"/><text x="8.3914%" y="222.50"></text></g><g><title>expression (qasm3Parser.py:4571) (5 samples, 0.11%)</title><rect x="8.9242%" y="212" width="0.1118%" height="15" fill="rgb(224,169,11)" fg:x="399" fg:w="5"/><text x="9.1742%" y="222.50"></text></g><g><title>expressionList (qasm3Parser.py:6667) (172 samples, 3.85%)</title><rect x="5.3232%" y="196" width="3.8470%" height="15" fill="rgb(250,166,2)" fg:x="238" fg:w="172"/><text x="5.5732%" y="206.50">expr..</text></g><g><title>expression (qasm3Parser.py:4578) (6 samples, 0.13%)</title><rect x="9.0360%" y="212" width="0.1342%" height="15" fill="rgb(242,216,29)" fg:x="404" fg:w="6"/><text x="9.2860%" y="222.50"></text></g><g><title>expressionList (qasm3Parser.py:6670) (14 samples, 0.31%)</title><rect x="9.1926%" y="196" width="0.3131%" height="15" fill="rgb(230,116,27)" fg:x="411" fg:w="14"/><text x="9.4426%" y="206.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (8 samples, 0.18%)</title><rect x="9.3268%" y="212" width="0.1789%" height="15" fill="rgb(228,99,48)" fg:x="417" fg:w="8"/><text x="9.5768%" y="222.50"></text></g><g><title>seek (antlr4/BufferedTokenStream.py:77) (6 samples, 0.13%)</title><rect x="9.3715%" y="228" width="0.1342%" height="15" fill="rgb(253,11,6)" fg:x="419" fg:w="6"/><text x="9.6215%" y="238.50"></text></g><g><title>adjustSeekIndex (antlr4/CommonTokenStream.py:45) (6 samples, 0.13%)</title><rect x="9.3715%" y="244" width="0.1342%" height="15" fill="rgb(247,143,39)" fg:x="419" fg:w="6"/><text x="9.6215%" y="254.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2397) (213 samples, 4.76%)</title><rect x="4.9206%" y="180" width="4.7640%" height="15" fill="rgb(236,97,10)" fg:x="220" fg:w="213"/><text x="5.1706%" y="190.50">gateCa..</text></g><g><title>expressionList (qasm3Parser.py:6694) (6 samples, 0.13%)</title><rect x="9.5504%" y="196" width="0.1342%" height="15" fill="rgb(233,208,19)" fg:x="427" fg:w="6"/><text x="9.8004%" y="206.50"></text></g><g><title>consume (antlr4/Parser.py:346) (5 samples, 0.11%)</title><rect x="9.8188%" y="212" width="0.1118%" height="15" fill="rgb(216,164,2)" fg:x="439" fg:w="5"/><text x="10.0688%" y="222.50"></text></g><g><title>getCurrentToken (antlr4/Parser.py:313) (5 samples, 0.11%)</title><rect x="9.8188%" y="228" width="0.1118%" height="15" fill="rgb(220,129,5)" fg:x="439" fg:w="5"/><text x="10.0688%" y="238.50"></text></g><g><title>consume (antlr4/Parser.py:348) (8 samples, 0.18%)</title><rect x="9.9307%" y="212" width="0.1789%" height="15" fill="rgb(242,17,10)" fg:x="444" fg:w="8"/><text x="10.1807%" y="222.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:85) (6 samples, 0.13%)</title><rect x="10.1543%" y="244" width="0.1342%" height="15" fill="rgb(242,107,0)" fg:x="454" fg:w="6"/><text x="10.4043%" y="254.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (13 samples, 0.29%)</title><rect x="10.1320%" y="228" width="0.2908%" height="15" fill="rgb(251,28,31)" fg:x="453" fg:w="13"/><text x="10.3820%" y="238.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2401) (35 samples, 0.78%)</title><rect x="9.7294%" y="180" width="0.7828%" height="15" fill="rgb(233,223,10)" fg:x="435" fg:w="35"/><text x="9.9794%" y="190.50"></text></g><g><title>match (antlr4/Parser.py:124) (31 samples, 0.69%)</title><rect x="9.8188%" y="196" width="0.6934%" height="15" fill="rgb(215,21,27)" fg:x="439" fg:w="31"/><text x="10.0688%" y="206.50"></text></g><g><title>consume (antlr4/Parser.py:354) (17 samples, 0.38%)</title><rect x="10.1320%" y="212" width="0.3802%" height="15" fill="rgb(232,23,21)" fg:x="453" fg:w="17"/><text x="10.3820%" y="222.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2406) (5 samples, 0.11%)</title><rect x="10.5569%" y="180" width="0.1118%" height="15" fill="rgb(244,5,23)" fg:x="472" fg:w="5"/><text x="10.8069%" y="190.50"></text></g><g><title>__init__ (qasm3Parser.py:6779) (36 samples, 0.81%)</title><rect x="10.8253%" y="212" width="0.8052%" height="15" fill="rgb(226,81,46)" fg:x="484" fg:w="36"/><text x="11.0753%" y="222.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6818) (43 samples, 0.96%)</title><rect x="10.8030%" y="196" width="0.9618%" height="15" fill="rgb(247,70,30)" fg:x="483" fg:w="43"/><text x="11.0530%" y="206.50"></text></g><g><title>__init__ (qasm3Parser.py:6780) (6 samples, 0.13%)</title><rect x="11.6305%" y="212" width="0.1342%" height="15" fill="rgb(212,68,19)" fg:x="520" fg:w="6"/><text x="11.8805%" y="222.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6819) (11 samples, 0.25%)</title><rect x="11.7647%" y="196" width="0.2460%" height="15" fill="rgb(240,187,13)" fg:x="526" fg:w="11"/><text x="12.0147%" y="206.50"></text></g><g><title>enterRule (antlr4/Parser.py:376) (5 samples, 0.11%)</title><rect x="11.8989%" y="212" width="0.1118%" height="15" fill="rgb(223,113,26)" fg:x="532" fg:w="5"/><text x="12.1489%" y="222.50"></text></g><g><title>__init__ (qasm3Parser.py:6121) (10 samples, 0.22%)</title><rect x="12.0778%" y="228" width="0.2237%" height="15" fill="rgb(206,192,2)" fg:x="540" fg:w="10"/><text x="12.3278%" y="238.50"></text></g><g><title>gateOperand (qasm3Parser.py:6154) (16 samples, 0.36%)</title><rect x="12.0331%" y="212" width="0.3579%" height="15" fill="rgb(241,108,4)" fg:x="538" fg:w="16"/><text x="12.2831%" y="222.50"></text></g><g><title>enterRule (antlr4/Parser.py:374) (5 samples, 0.11%)</title><rect x="12.4357%" y="228" width="0.1118%" height="15" fill="rgb(247,173,49)" fg:x="556" fg:w="5"/><text x="12.6857%" y="238.50"></text></g><g><title>gateOperand (qasm3Parser.py:6155) (9 samples, 0.20%)</title><rect x="12.3910%" y="212" width="0.2013%" height="15" fill="rgb(224,114,35)" fg:x="554" fg:w="9"/><text x="12.6410%" y="222.50"></text></g><g><title>gateOperand (qasm3Parser.py:6157) (45 samples, 1.01%)</title><rect x="12.5923%" y="212" width="1.0065%" height="15" fill="rgb(245,159,27)" fg:x="563" fg:w="45"/><text x="12.8423%" y="222.50"></text></g><g><title>state (antlr4/Recognizer.py:143) (44 samples, 0.98%)</title><rect x="12.6146%" y="228" width="0.9841%" height="15" fill="rgb(245,172,44)" fg:x="564" fg:w="44"/><text x="12.8646%" y="238.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5253) (14 samples, 0.31%)</title><rect x="13.7329%" y="228" width="0.3131%" height="15" fill="rgb(236,23,11)" fg:x="614" fg:w="14"/><text x="13.9829%" y="238.50"></text></g><g><title>__init__ (qasm3Parser.py:5218) (7 samples, 0.16%)</title><rect x="13.8895%" y="244" width="0.1566%" height="15" fill="rgb(205,117,38)" fg:x="621" fg:w="7"/><text x="14.1395%" y="254.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5254) (7 samples, 0.16%)</title><rect x="14.0461%" y="228" width="0.1566%" height="15" fill="rgb(237,72,25)" fg:x="628" fg:w="7"/><text x="14.2961%" y="238.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5257) (7 samples, 0.16%)</title><rect x="14.2250%" y="228" width="0.1566%" height="15" fill="rgb(244,70,9)" fg:x="636" fg:w="7"/><text x="14.4750%" y="238.50"></text></g><g><title>match (antlr4/Parser.py:121) (5 samples, 0.11%)</title><rect x="14.4039%" y="244" width="0.1118%" height="15" fill="rgb(217,125,39)" fg:x="644" fg:w="5"/><text x="14.6539%" y="254.50"></text></g><g><title>getCurrentToken (antlr4/Parser.py:313) (5 samples, 0.11%)</title><rect x="14.4039%" y="260" width="0.1118%" height="15" fill="rgb(235,36,10)" fg:x="644" fg:w="5"/><text x="14.6539%" y="270.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (11 samples, 0.25%)</title><rect x="14.9407%" y="356" width="0.2460%" height="15" fill="rgb(251,123,47)" fg:x="668" fg:w="11"/><text x="15.1907%" y="366.50"></text></g><g><title>__eq__ (antlr4/dfa/DFAState.py:113) (5 samples, 0.11%)</title><rect x="15.0749%" y="372" width="0.1118%" height="15" fill="rgb(221,13,13)" fg:x="674" fg:w="5"/><text x="15.3249%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (5 samples, 0.11%)</title><rect x="15.2091%" y="356" width="0.1118%" height="15" fill="rgb(238,131,9)" fg:x="680" fg:w="5"/><text x="15.4591%" y="366.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (35 samples, 0.78%)</title><rect x="14.7394%" y="340" width="0.7828%" height="15" fill="rgb(211,50,8)" fg:x="659" fg:w="35"/><text x="14.9894%" y="350.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:195) (5 samples, 0.11%)</title><rect x="15.4104%" y="356" width="0.1118%" height="15" fill="rgb(245,182,24)" fg:x="689" fg:w="5"/><text x="15.6604%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (36 samples, 0.81%)</title><rect x="14.7394%" y="324" width="0.8052%" height="15" fill="rgb(242,14,37)" fg:x="659" fg:w="36"/><text x="14.9894%" y="334.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (9 samples, 0.20%)</title><rect x="15.7012%" y="356" width="0.2013%" height="15" fill="rgb(246,228,12)" fg:x="702" fg:w="9"/><text x="15.9512%" y="366.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (57 samples, 1.27%)</title><rect x="14.6500%" y="308" width="1.2749%" height="15" fill="rgb(213,55,15)" fg:x="655" fg:w="57"/><text x="14.9000%" y="318.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (12 samples, 0.27%)</title><rect x="15.6565%" y="324" width="0.2684%" height="15" fill="rgb(209,9,3)" fg:x="700" fg:w="12"/><text x="15.9065%" y="334.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (10 samples, 0.22%)</title><rect x="15.7012%" y="340" width="0.2237%" height="15" fill="rgb(230,59,30)" fg:x="702" fg:w="10"/><text x="15.9512%" y="350.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (59 samples, 1.32%)</title><rect x="14.6276%" y="276" width="1.3196%" height="15" fill="rgb(209,121,21)" fg:x="654" fg:w="59"/><text x="14.8776%" y="286.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (59 samples, 1.32%)</title><rect x="14.6276%" y="292" width="1.3196%" height="15" fill="rgb(220,109,13)" fg:x="654" fg:w="59"/><text x="14.8776%" y="302.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:101) (5 samples, 0.11%)</title><rect x="15.9472%" y="276" width="0.1118%" height="15" fill="rgb(232,18,1)" fg:x="713" fg:w="5"/><text x="16.1972%" y="286.50"></text></g><g><title>consume (antlr4/Parser.py:348) (69 samples, 1.54%)</title><rect x="14.6276%" y="260" width="1.5433%" height="15" fill="rgb(215,41,42)" fg:x="654" fg:w="69"/><text x="14.8776%" y="270.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (12 samples, 0.27%)</title><rect x="16.2380%" y="276" width="0.2684%" height="15" fill="rgb(224,123,36)" fg:x="726" fg:w="12"/><text x="16.4880%" y="286.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:87) (7 samples, 0.16%)</title><rect x="16.3498%" y="292" width="0.1566%" height="15" fill="rgb(240,125,3)" fg:x="731" fg:w="7"/><text x="16.5998%" y="302.50"></text></g><g><title>__setattr__ (antlr4/tree/Tree.py:89) (6 samples, 0.13%)</title><rect x="16.3722%" y="308" width="0.1342%" height="15" fill="rgb(205,98,50)" fg:x="732" fg:w="6"/><text x="16.6222%" y="318.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5259) (103 samples, 2.30%)</title><rect x="14.3816%" y="228" width="2.3037%" height="15" fill="rgb(205,185,37)" fg:x="643" fg:w="103"/><text x="14.6316%" y="238.50">i..</text></g><g><title>match (antlr4/Parser.py:124) (95 samples, 2.12%)</title><rect x="14.5605%" y="244" width="2.1248%" height="15" fill="rgb(238,207,15)" fg:x="651" fg:w="95"/><text x="14.8105%" y="254.50">m..</text></g><g><title>consume (antlr4/Parser.py:354) (21 samples, 0.47%)</title><rect x="16.2156%" y="260" width="0.4697%" height="15" fill="rgb(213,199,42)" fg:x="725" fg:w="21"/><text x="16.4656%" y="270.50"></text></g><g><title>__init__ (qasm3Parser.py:5081) (9 samples, 0.20%)</title><rect x="16.9313%" y="260" width="0.2013%" height="15" fill="rgb(235,201,11)" fg:x="757" fg:w="9"/><text x="17.1813%" y="270.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (5 samples, 0.11%)</title><rect x="17.1550%" y="276" width="0.1118%" height="15" fill="rgb(207,46,11)" fg:x="767" fg:w="5"/><text x="17.4050%" y="286.50"></text></g><g><title>indexOperator (qasm3Parser.py:5137) (22 samples, 0.49%)</title><rect x="16.8419%" y="244" width="0.4921%" height="15" fill="rgb(241,35,35)" fg:x="753" fg:w="22"/><text x="17.0919%" y="254.50"></text></g><g><title>__init__ (qasm3Parser.py:5082) (9 samples, 0.20%)</title><rect x="17.1326%" y="260" width="0.2013%" height="15" fill="rgb(243,32,47)" fg:x="766" fg:w="9"/><text x="17.3826%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5138) (8 samples, 0.18%)</title><rect x="17.3339%" y="244" width="0.1789%" height="15" fill="rgb(247,202,23)" fg:x="775" fg:w="8"/><text x="17.5839%" y="254.50"></text></g><g><title>match (antlr4/Parser.py:121) (7 samples, 0.16%)</title><rect x="17.6023%" y="260" width="0.1566%" height="15" fill="rgb(219,102,11)" fg:x="787" fg:w="7"/><text x="17.8523%" y="270.50"></text></g><g><title>getCurrentToken (antlr4/Parser.py:313) (5 samples, 0.11%)</title><rect x="17.6471%" y="276" width="0.1118%" height="15" fill="rgb(243,110,44)" fg:x="789" fg:w="5"/><text x="17.8971%" y="286.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:145) (7 samples, 0.16%)</title><rect x="18.0720%" y="372" width="0.1566%" height="15" fill="rgb(222,74,54)" fg:x="808" fg:w="7"/><text x="18.3220%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:170) (10 samples, 0.22%)</title><rect x="18.2733%" y="372" width="0.2237%" height="15" fill="rgb(216,99,12)" fg:x="817" fg:w="10"/><text x="18.5233%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (14 samples, 0.31%)</title><rect x="18.4970%" y="372" width="0.3131%" height="15" fill="rgb(226,22,26)" fg:x="827" fg:w="14"/><text x="18.7470%" y="382.50"></text></g><g><title>__eq__ (antlr4/dfa/DFAState.py:113) (6 samples, 0.13%)</title><rect x="18.6759%" y="388" width="0.1342%" height="15" fill="rgb(217,163,10)" fg:x="835" fg:w="6"/><text x="18.9259%" y="398.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:553) (8 samples, 0.18%)</title><rect x="18.8325%" y="388" width="0.1789%" height="15" fill="rgb(213,25,53)" fg:x="842" fg:w="8"/><text x="19.0825%" y="398.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (12 samples, 0.27%)</title><rect x="18.8101%" y="372" width="0.2684%" height="15" fill="rgb(252,105,26)" fg:x="841" fg:w="12"/><text x="19.0601%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:187) (6 samples, 0.13%)</title><rect x="19.0785%" y="372" width="0.1342%" height="15" fill="rgb(220,39,43)" fg:x="853" fg:w="6"/><text x="19.3285%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:191) (5 samples, 0.11%)</title><rect x="19.2127%" y="372" width="0.1118%" height="15" fill="rgb(229,68,48)" fg:x="859" fg:w="5"/><text x="19.4627%" y="382.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (61 samples, 1.36%)</title><rect x="18.0497%" y="356" width="1.3643%" height="15" fill="rgb(252,8,32)" fg:x="807" fg:w="61"/><text x="18.2997%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (66 samples, 1.48%)</title><rect x="18.0273%" y="340" width="1.4762%" height="15" fill="rgb(223,20,43)" fg:x="806" fg:w="66"/><text x="18.2773%" y="350.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (8 samples, 0.18%)</title><rect x="19.6600%" y="372" width="0.1789%" height="15" fill="rgb(229,81,49)" fg:x="879" fg:w="8"/><text x="19.9100%" y="382.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (11 samples, 0.25%)</title><rect x="19.6153%" y="340" width="0.2460%" height="15" fill="rgb(236,28,36)" fg:x="877" fg:w="11"/><text x="19.8653%" y="350.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (10 samples, 0.22%)</title><rect x="19.6377%" y="356" width="0.2237%" height="15" fill="rgb(249,185,26)" fg:x="878" fg:w="10"/><text x="19.8877%" y="366.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (85 samples, 1.90%)</title><rect x="17.9826%" y="324" width="1.9011%" height="15" fill="rgb(249,174,33)" fg:x="804" fg:w="85"/><text x="18.2326%" y="334.50">f..</text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (93 samples, 2.08%)</title><rect x="17.8260%" y="292" width="2.0801%" height="15" fill="rgb(233,201,37)" fg:x="797" fg:w="93"/><text x="18.0760%" y="302.50">c..</text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (90 samples, 2.01%)</title><rect x="17.8931%" y="308" width="2.0130%" height="15" fill="rgb(221,78,26)" fg:x="800" fg:w="90"/><text x="18.1431%" y="318.50">s..</text></g><g><title>consume (antlr4/BufferedTokenStream.py:101) (7 samples, 0.16%)</title><rect x="19.9061%" y="292" width="0.1566%" height="15" fill="rgb(250,127,30)" fg:x="890" fg:w="7"/><text x="20.1561%" y="302.50"></text></g><g><title>consume (antlr4/Parser.py:348) (103 samples, 2.30%)</title><rect x="17.8036%" y="276" width="2.3037%" height="15" fill="rgb(230,49,44)" fg:x="796" fg:w="103"/><text x="18.0536%" y="286.50">c..</text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (5 samples, 0.11%)</title><rect x="20.1297%" y="292" width="0.1118%" height="15" fill="rgb(229,67,23)" fg:x="900" fg:w="5"/><text x="20.3797%" y="302.50"></text></g><g><title>indexOperator (qasm3Parser.py:5143) (127 samples, 2.84%)</title><rect x="17.6023%" y="244" width="2.8405%" height="15" fill="rgb(249,83,47)" fg:x="787" fg:w="127"/><text x="17.8523%" y="254.50">in..</text></g><g><title>match (antlr4/Parser.py:124) (120 samples, 2.68%)</title><rect x="17.7589%" y="260" width="2.6840%" height="15" fill="rgb(215,43,3)" fg:x="794" fg:w="120"/><text x="18.0089%" y="270.50">ma..</text></g><g><title>consume (antlr4/Parser.py:354) (14 samples, 0.31%)</title><rect x="20.1297%" y="276" width="0.3131%" height="15" fill="rgb(238,154,13)" fg:x="900" fg:w="14"/><text x="20.3797%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:105) (5 samples, 0.11%)</title><rect x="20.3310%" y="292" width="0.1118%" height="15" fill="rgb(219,56,2)" fg:x="909" fg:w="5"/><text x="20.5810%" y="302.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:398) (7 samples, 0.16%)</title><rect x="20.8678%" y="276" width="0.1566%" height="15" fill="rgb(233,0,4)" fg:x="933" fg:w="7"/><text x="21.1178%" y="286.50"></text></g><g><title>getExistingTargetState (antlr4/atn/ParserATNSimulator.py:483) (5 samples, 0.11%)</title><rect x="20.9125%" y="292" width="0.1118%" height="15" fill="rgb(235,30,7)" fg:x="935" fg:w="5"/><text x="21.1625%" y="302.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:170) (5 samples, 0.11%)</title><rect x="21.4941%" y="372" width="0.1118%" height="15" fill="rgb(250,79,13)" fg:x="961" fg:w="5"/><text x="21.7441%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (9 samples, 0.20%)</title><rect x="21.6059%" y="372" width="0.2013%" height="15" fill="rgb(211,146,34)" fg:x="966" fg:w="9"/><text x="21.8559%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (5 samples, 0.11%)</title><rect x="21.8296%" y="372" width="0.1118%" height="15" fill="rgb(228,22,38)" fg:x="976" fg:w="5"/><text x="22.0796%" y="382.50"></text></g><g><title>failOrAccept (antlr4/atn/LexerATNSimulator.py:248) (7 samples, 0.16%)</title><rect x="22.0532%" y="388" width="0.1566%" height="15" fill="rgb(235,168,5)" fg:x="986" fg:w="7"/><text x="22.3032%" y="398.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (39 samples, 0.87%)</title><rect x="21.3599%" y="356" width="0.8723%" height="15" fill="rgb(221,155,16)" fg:x="955" fg:w="39"/><text x="21.6099%" y="366.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:195) (9 samples, 0.20%)</title><rect x="22.0309%" y="372" width="0.2013%" height="15" fill="rgb(215,215,53)" fg:x="985" fg:w="9"/><text x="22.2809%" y="382.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (43 samples, 0.96%)</title><rect x="21.3375%" y="340" width="0.9618%" height="15" fill="rgb(223,4,10)" fg:x="954" fg:w="43"/><text x="21.5875%" y="350.50"></text></g><g><title>__init__ (antlr4/Token.py:76) (132 samples, 2.95%)</title><rect x="22.5229%" y="388" width="2.9524%" height="15" fill="rgb(234,103,6)" fg:x="1007" fg:w="132"/><text x="22.7729%" y="398.50">__i..</text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (138 samples, 3.09%)</title><rect x="22.4335%" y="372" width="3.0866%" height="15" fill="rgb(227,97,0)" fg:x="1003" fg:w="138"/><text x="22.6835%" y="382.50">cre..</text></g><g><title>nextToken (antlr4/Lexer.py:153) (141 samples, 3.15%)</title><rect x="22.3887%" y="340" width="3.1537%" height="15" fill="rgb(234,150,53)" fg:x="1001" fg:w="141"/><text x="22.6387%" y="350.50">nex..</text></g><g><title>emit (antlr4/Lexer.py:222) (139 samples, 3.11%)</title><rect x="22.4335%" y="356" width="3.1089%" height="15" fill="rgb(228,201,54)" fg:x="1003" fg:w="139"/><text x="22.6835%" y="366.50">emi..</text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (197 samples, 4.41%)</title><rect x="21.1586%" y="324" width="4.4062%" height="15" fill="rgb(222,22,37)" fg:x="946" fg:w="197"/><text x="21.4086%" y="334.50">fetch..</text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (203 samples, 4.54%)</title><rect x="21.0467%" y="292" width="4.5404%" height="15" fill="rgb(237,53,32)" fg:x="941" fg:w="203"/><text x="21.2967%" y="302.50">consu..</text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (200 samples, 4.47%)</title><rect x="21.1138%" y="308" width="4.4733%" height="15" fill="rgb(233,25,53)" fg:x="944" fg:w="200"/><text x="21.3638%" y="318.50">sync ..</text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:467) (207 samples, 4.63%)</title><rect x="21.0467%" y="276" width="4.6298%" height="15" fill="rgb(210,40,34)" fg:x="941" fg:w="207"/><text x="21.2967%" y="286.50">execA..</text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (224 samples, 5.01%)</title><rect x="20.7783%" y="260" width="5.0101%" height="15" fill="rgb(241,220,44)" fg:x="929" fg:w="224"/><text x="21.0283%" y="270.50">adapti..</text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:468) (5 samples, 0.11%)</title><rect x="25.6766%" y="276" width="0.1118%" height="15" fill="rgb(235,28,35)" fg:x="1148" fg:w="5"/><text x="25.9266%" y="286.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (8 samples, 0.18%)</title><rect x="25.8331%" y="260" width="0.1789%" height="15" fill="rgb(210,56,17)" fg:x="1155" fg:w="8"/><text x="26.0831%" y="270.50"></text></g><g><title>seek (antlr4/BufferedTokenStream.py:77) (6 samples, 0.13%)</title><rect x="25.8779%" y="276" width="0.1342%" height="15" fill="rgb(224,130,29)" fg:x="1157" fg:w="6"/><text x="26.1279%" y="286.50"></text></g><g><title>indexOperator (qasm3Parser.py:5154) (241 samples, 5.39%)</title><rect x="20.6889%" y="244" width="5.3903%" height="15" fill="rgb(235,212,8)" fg:x="925" fg:w="241"/><text x="20.9389%" y="254.50">indexOp..</text></g><g><title>__init__ (antlr4/RuleContext.py:40) (6 samples, 0.13%)</title><rect x="26.3923%" y="308" width="0.1342%" height="15" fill="rgb(223,33,50)" fg:x="1180" fg:w="6"/><text x="26.6423%" y="318.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (9 samples, 0.20%)</title><rect x="26.3699%" y="292" width="0.2013%" height="15" fill="rgb(219,149,13)" fg:x="1179" fg:w="9"/><text x="26.6199%" y="302.50"></text></g><g><title>expression (qasm3Parser.py:4277) (20 samples, 0.45%)</title><rect x="26.1686%" y="260" width="0.4473%" height="15" fill="rgb(250,156,29)" fg:x="1170" fg:w="20"/><text x="26.4186%" y="270.50"></text></g><g><title>__init__ (qasm3Parser.py:3684) (12 samples, 0.27%)</title><rect x="26.3476%" y="276" width="0.2684%" height="15" fill="rgb(216,193,19)" fg:x="1178" fg:w="12"/><text x="26.5976%" y="286.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:395) (6 samples, 0.13%)</title><rect x="26.8620%" y="292" width="0.1342%" height="15" fill="rgb(216,135,14)" fg:x="1201" fg:w="6"/><text x="27.1120%" y="302.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (5 samples, 0.11%)</title><rect x="26.8844%" y="308" width="0.1118%" height="15" fill="rgb(241,47,5)" fg:x="1202" fg:w="5"/><text x="27.1344%" y="318.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (10 samples, 0.22%)</title><rect x="26.8173%" y="276" width="0.2237%" height="15" fill="rgb(233,42,35)" fg:x="1199" fg:w="10"/><text x="27.0673%" y="286.50"></text></g><g><title>expression (qasm3Parser.py:4286) (17 samples, 0.38%)</title><rect x="26.7725%" y="260" width="0.3802%" height="15" fill="rgb(231,13,6)" fg:x="1197" fg:w="17"/><text x="27.0225%" y="270.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (5 samples, 0.11%)</title><rect x="27.0409%" y="276" width="0.1118%" height="15" fill="rgb(207,181,40)" fg:x="1209" fg:w="5"/><text x="27.2909%" y="286.50"></text></g><g><title>__init__ (qasm3Parser.py:4231) (5 samples, 0.11%)</title><rect x="27.2199%" y="276" width="0.1118%" height="15" fill="rgb(254,173,49)" fg:x="1217" fg:w="5"/><text x="27.4699%" y="286.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (6 samples, 0.13%)</title><rect x="27.4659%" y="308" width="0.1342%" height="15" fill="rgb(221,1,38)" fg:x="1228" fg:w="6"/><text x="27.7159%" y="318.50"></text></g><g><title>__init__ (qasm3Parser.py:4232) (13 samples, 0.29%)</title><rect x="27.3317%" y="276" width="0.2908%" height="15" fill="rgb(206,124,46)" fg:x="1222" fg:w="13"/><text x="27.5817%" y="286.50"></text></g><g><title>__init__ (qasm3Parser.py:3684) (9 samples, 0.20%)</title><rect x="27.4212%" y="292" width="0.2013%" height="15" fill="rgb(249,21,11)" fg:x="1226" fg:w="9"/><text x="27.6712%" y="302.50"></text></g><g><title>expression (qasm3Parser.py:4377) (23 samples, 0.51%)</title><rect x="27.1975%" y="260" width="0.5144%" height="15" fill="rgb(222,201,40)" fg:x="1216" fg:w="23"/><text x="27.4475%" y="270.50"></text></g><g><title>consume (antlr4/Parser.py:348) (9 samples, 0.20%)</title><rect x="27.9580%" y="276" width="0.2013%" height="15" fill="rgb(235,61,29)" fg:x="1250" fg:w="9"/><text x="28.2080%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (13 samples, 0.29%)</title><rect x="28.1816%" y="292" width="0.2908%" height="15" fill="rgb(219,207,3)" fg:x="1260" fg:w="13"/><text x="28.4316%" y="302.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:87) (8 samples, 0.18%)</title><rect x="28.2934%" y="308" width="0.1789%" height="15" fill="rgb(222,56,46)" fg:x="1265" fg:w="8"/><text x="28.5434%" y="318.50"></text></g><g><title>__setattr__ (antlr4/tree/Tree.py:89) (7 samples, 0.16%)</title><rect x="28.3158%" y="324" width="0.1566%" height="15" fill="rgb(239,76,54)" fg:x="1266" fg:w="7"/><text x="28.5658%" y="334.50"></text></g><g><title>__setattr__ (antlr4/tree/Tree.py:88) (6 samples, 0.13%)</title><rect x="28.5618%" y="308" width="0.1342%" height="15" fill="rgb(231,124,27)" fg:x="1277" fg:w="6"/><text x="28.8118%" y="318.50"></text></g><g><title>expression (qasm3Parser.py:4386) (40 samples, 0.89%)</title><rect x="27.8909%" y="260" width="0.8947%" height="15" fill="rgb(249,195,6)" fg:x="1247" fg:w="40"/><text x="28.1409%" y="270.50"></text></g><g><title>consume (antlr4/Parser.py:354) (28 samples, 0.63%)</title><rect x="28.1592%" y="276" width="0.6263%" height="15" fill="rgb(237,174,47)" fg:x="1259" fg:w="28"/><text x="28.4092%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:105) (12 samples, 0.27%)</title><rect x="28.5171%" y="292" width="0.2684%" height="15" fill="rgb(206,201,31)" fg:x="1275" fg:w="12"/><text x="28.7671%" y="302.50"></text></g><g><title>expression (qasm3Parser.py:4390) (7 samples, 0.16%)</title><rect x="28.7855%" y="260" width="0.1566%" height="15" fill="rgb(231,57,52)" fg:x="1287" fg:w="7"/><text x="29.0355%" y="270.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (6 samples, 0.13%)</title><rect x="28.8079%" y="276" width="0.1342%" height="15" fill="rgb(248,177,22)" fg:x="1288" fg:w="6"/><text x="29.0579%" y="286.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:315) (5 samples, 0.11%)</title><rect x="29.2105%" y="276" width="0.1118%" height="15" fill="rgb(215,211,37)" fg:x="1306" fg:w="5"/><text x="29.4605%" y="286.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:395) (5 samples, 0.11%)</title><rect x="29.3447%" y="292" width="0.1118%" height="15" fill="rgb(241,128,51)" fg:x="1312" fg:w="5"/><text x="29.5947%" y="302.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (9 samples, 0.20%)</title><rect x="29.3223%" y="276" width="0.2013%" height="15" fill="rgb(227,165,31)" fg:x="1311" fg:w="9"/><text x="29.5723%" y="286.50"></text></g><g><title>expression (qasm3Parser.py:4393) (22 samples, 0.49%)</title><rect x="29.0539%" y="260" width="0.4921%" height="15" fill="rgb(228,167,24)" fg:x="1299" fg:w="22"/><text x="29.3039%" y="270.50"></text></g><g><title>unrollRecursionContexts (antlr4/Parser.py:436) (8 samples, 0.18%)</title><rect x="29.6131%" y="276" width="0.1789%" height="15" fill="rgb(228,143,12)" fg:x="1324" fg:w="8"/><text x="29.8631%" y="286.50"></text></g><g><title>indexOperator (qasm3Parser.py:5157) (168 samples, 3.76%)</title><rect x="26.1239%" y="244" width="3.7575%" height="15" fill="rgb(249,149,8)" fg:x="1168" fg:w="168"/><text x="26.3739%" y="254.50">inde..</text></g><g><title>expression (qasm3Parser.py:4578) (14 samples, 0.31%)</title><rect x="29.5683%" y="260" width="0.3131%" height="15" fill="rgb(243,35,44)" fg:x="1322" fg:w="14"/><text x="29.8183%" y="270.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:398) (5 samples, 0.11%)</title><rect x="30.0828%" y="276" width="0.1118%" height="15" fill="rgb(246,89,9)" fg:x="1345" fg:w="5"/><text x="30.3328%" y="286.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (11 samples, 0.25%)</title><rect x="29.9933%" y="260" width="0.2460%" height="15" fill="rgb(233,213,13)" fg:x="1341" fg:w="11"/><text x="30.2433%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5168) (19 samples, 0.42%)</title><rect x="29.9486%" y="244" width="0.4250%" height="15" fill="rgb(233,141,41)" fg:x="1339" fg:w="19"/><text x="30.1986%" y="254.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (6 samples, 0.13%)</title><rect x="30.2393%" y="260" width="0.1342%" height="15" fill="rgb(239,167,4)" fg:x="1352" fg:w="6"/><text x="30.4893%" y="270.50"></text></g><g><title>seek (antlr4/BufferedTokenStream.py:77) (5 samples, 0.11%)</title><rect x="30.2617%" y="276" width="0.1118%" height="15" fill="rgb(209,217,16)" fg:x="1353" fg:w="5"/><text x="30.5117%" y="286.50"></text></g><g><title>indexOperator (qasm3Parser.py:5193) (5 samples, 0.11%)</title><rect x="30.4630%" y="244" width="0.1118%" height="15" fill="rgb(219,88,35)" fg:x="1362" fg:w="5"/><text x="30.7130%" y="254.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:170) (8 samples, 0.18%)</title><rect x="31.0892%" y="372" width="0.1789%" height="15" fill="rgb(220,193,23)" fg:x="1390" fg:w="8"/><text x="31.3392%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (7 samples, 0.16%)</title><rect x="31.3353%" y="372" width="0.1566%" height="15" fill="rgb(230,90,52)" fg:x="1401" fg:w="7"/><text x="31.5853%" y="382.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (35 samples, 0.78%)</title><rect x="30.9550%" y="356" width="0.7828%" height="15" fill="rgb(252,106,19)" fg:x="1384" fg:w="35"/><text x="31.2050%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (39 samples, 0.87%)</title><rect x="30.9327%" y="340" width="0.8723%" height="15" fill="rgb(206,74,20)" fg:x="1383" fg:w="39"/><text x="31.1827%" y="350.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (6 samples, 0.13%)</title><rect x="31.9615%" y="356" width="0.1342%" height="15" fill="rgb(230,138,44)" fg:x="1429" fg:w="6"/><text x="32.2115%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (9 samples, 0.20%)</title><rect x="31.9392%" y="340" width="0.2013%" height="15" fill="rgb(235,182,43)" fg:x="1428" fg:w="9"/><text x="32.1892%" y="350.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (60 samples, 1.34%)</title><rect x="30.8432%" y="324" width="1.3420%" height="15" fill="rgb(242,16,51)" fg:x="1379" fg:w="60"/><text x="31.0932%" y="334.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (66 samples, 1.48%)</title><rect x="30.7537%" y="292" width="1.4762%" height="15" fill="rgb(248,9,4)" fg:x="1375" fg:w="66"/><text x="31.0037%" y="302.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (65 samples, 1.45%)</title><rect x="30.7761%" y="308" width="1.4538%" height="15" fill="rgb(210,31,22)" fg:x="1376" fg:w="65"/><text x="31.0261%" y="318.50"></text></g><g><title>consume (antlr4/Parser.py:348) (76 samples, 1.70%)</title><rect x="30.7314%" y="276" width="1.6998%" height="15" fill="rgb(239,54,39)" fg:x="1374" fg:w="76"/><text x="30.9814%" y="286.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:86) (5 samples, 0.11%)</title><rect x="32.5431%" y="308" width="0.1118%" height="15" fill="rgb(230,99,41)" fg:x="1455" fg:w="5"/><text x="32.7931%" y="318.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (11 samples, 0.25%)</title><rect x="32.4760%" y="292" width="0.2460%" height="15" fill="rgb(253,106,12)" fg:x="1452" fg:w="11"/><text x="32.7260%" y="302.50"></text></g><g><title>indexOperator (qasm3Parser.py:5204) (97 samples, 2.17%)</title><rect x="30.6419%" y="244" width="2.1695%" height="15" fill="rgb(213,46,41)" fg:x="1370" fg:w="97"/><text x="30.8919%" y="254.50">i..</text></g><g><title>match (antlr4/Parser.py:124) (96 samples, 2.15%)</title><rect x="30.6643%" y="260" width="2.1472%" height="15" fill="rgb(215,133,35)" fg:x="1371" fg:w="96"/><text x="30.9143%" y="270.50">m..</text></g><g><title>consume (antlr4/Parser.py:354) (16 samples, 0.36%)</title><rect x="32.4536%" y="276" width="0.3579%" height="15" fill="rgb(213,28,5)" fg:x="1451" fg:w="16"/><text x="32.7036%" y="286.50"></text></g><g><title>exitRule (antlr4/Parser.py:381) (6 samples, 0.13%)</title><rect x="32.8115%" y="260" width="0.1342%" height="15" fill="rgb(215,77,49)" fg:x="1467" fg:w="6"/><text x="33.0615%" y="270.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5265) (724 samples, 16.19%)</title><rect x="16.8195%" y="228" width="16.1932%" height="15" fill="rgb(248,100,22)" fg:x="752" fg:w="724"/><text x="17.0695%" y="238.50">indexedIdentifier (qasm3P..</text></g><g><title>indexOperator (qasm3Parser.py:5210) (9 samples, 0.20%)</title><rect x="32.8115%" y="244" width="0.2013%" height="15" fill="rgb(208,67,9)" fg:x="1467" fg:w="9"/><text x="33.0615%" y="254.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5268) (5 samples, 0.11%)</title><rect x="33.0351%" y="228" width="0.1118%" height="15" fill="rgb(219,133,21)" fg:x="1477" fg:w="5"/><text x="33.2851%" y="238.50"></text></g><g><title>exitRule (antlr4/Parser.py:381) (6 samples, 0.13%)</title><rect x="33.1469%" y="244" width="0.1342%" height="15" fill="rgb(246,46,29)" fg:x="1482" fg:w="6"/><text x="33.3969%" y="254.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (5 samples, 0.11%)</title><rect x="33.1693%" y="260" width="0.1118%" height="15" fill="rgb(246,185,52)" fg:x="1483" fg:w="5"/><text x="33.4193%" y="270.50"></text></g><g><title>gateOperand (qasm3Parser.py:6163) (876 samples, 19.59%)</title><rect x="13.7106%" y="212" width="19.5929%" height="15" fill="rgb(252,136,11)" fg:x="613" fg:w="876"/><text x="13.9606%" y="222.50">gateOperand (qasm3Parser.py:616..</text></g><g><title>indexedIdentifier (qasm3Parser.py:5275) (7 samples, 0.16%)</title><rect x="33.1469%" y="228" width="0.1566%" height="15" fill="rgb(219,138,53)" fg:x="1482" fg:w="7"/><text x="33.3969%" y="238.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6824) (959 samples, 21.45%)</title><rect x="12.0107%" y="196" width="21.4493%" height="15" fill="rgb(211,51,23)" fg:x="537" fg:w="959"/><text x="12.2607%" y="206.50">gateOperandList (qasm3Parser.py:68..</text></g><g><title>gateOperand (qasm3Parser.py:6178) (7 samples, 0.16%)</title><rect x="33.3035%" y="212" width="0.1566%" height="15" fill="rgb(247,221,28)" fg:x="1489" fg:w="7"/><text x="33.5535%" y="222.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:395) (5 samples, 0.11%)</title><rect x="33.5272%" y="228" width="0.1118%" height="15" fill="rgb(251,222,45)" fg:x="1499" fg:w="5"/><text x="33.7772%" y="238.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (5 samples, 0.11%)</title><rect x="33.5272%" y="244" width="0.1118%" height="15" fill="rgb(217,162,53)" fg:x="1499" fg:w="5"/><text x="33.7772%" y="254.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (10 samples, 0.22%)</title><rect x="33.8627%" y="308" width="0.2237%" height="15" fill="rgb(229,93,14)" fg:x="1514" fg:w="10"/><text x="34.1127%" y="318.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (11 samples, 0.25%)</title><rect x="33.8627%" y="292" width="0.2460%" height="15" fill="rgb(209,67,49)" fg:x="1514" fg:w="11"/><text x="34.1127%" y="302.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (17 samples, 0.38%)</title><rect x="33.8179%" y="244" width="0.3802%" height="15" fill="rgb(213,87,29)" fg:x="1512" fg:w="17"/><text x="34.0679%" y="254.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (17 samples, 0.38%)</title><rect x="33.8179%" y="260" width="0.3802%" height="15" fill="rgb(205,151,52)" fg:x="1512" fg:w="17"/><text x="34.0679%" y="270.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (17 samples, 0.38%)</title><rect x="33.8179%" y="276" width="0.3802%" height="15" fill="rgb(253,215,39)" fg:x="1512" fg:w="17"/><text x="34.0679%" y="286.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:467) (20 samples, 0.45%)</title><rect x="33.8179%" y="228" width="0.4473%" height="15" fill="rgb(221,220,41)" fg:x="1512" fg:w="20"/><text x="34.0679%" y="238.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (36 samples, 0.81%)</title><rect x="33.4824%" y="212" width="0.8052%" height="15" fill="rgb(218,133,21)" fg:x="1497" fg:w="36"/><text x="33.7324%" y="222.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6827) (44 samples, 0.98%)</title><rect x="33.4601%" y="196" width="0.9841%" height="15" fill="rgb(221,193,43)" fg:x="1496" fg:w="44"/><text x="33.7101%" y="206.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (7 samples, 0.16%)</title><rect x="34.2876%" y="212" width="0.1566%" height="15" fill="rgb(240,128,52)" fg:x="1533" fg:w="7"/><text x="34.5376%" y="222.50"></text></g><g><title>seek (antlr4/BufferedTokenStream.py:77) (6 samples, 0.13%)</title><rect x="34.3100%" y="228" width="0.1342%" height="15" fill="rgb(253,114,12)" fg:x="1534" fg:w="6"/><text x="34.5600%" y="238.50"></text></g><g><title>adjustSeekIndex (antlr4/CommonTokenStream.py:45) (5 samples, 0.11%)</title><rect x="34.3324%" y="244" width="0.1118%" height="15" fill="rgb(215,223,47)" fg:x="1535" fg:w="5"/><text x="34.5824%" y="254.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6831) (15 samples, 0.34%)</title><rect x="34.5113%" y="196" width="0.3355%" height="15" fill="rgb(248,225,23)" fg:x="1543" fg:w="15"/><text x="34.7613%" y="206.50"></text></g><g><title>match (antlr4/Parser.py:124) (13 samples, 0.29%)</title><rect x="34.5560%" y="212" width="0.2908%" height="15" fill="rgb(250,108,0)" fg:x="1545" fg:w="13"/><text x="34.8060%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:354) (6 samples, 0.13%)</title><rect x="34.7126%" y="228" width="0.1342%" height="15" fill="rgb(228,208,7)" fg:x="1552" fg:w="6"/><text x="34.9626%" y="238.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5253) (7 samples, 0.16%)</title><rect x="35.0705%" y="228" width="0.1566%" height="15" fill="rgb(244,45,10)" fg:x="1568" fg:w="7"/><text x="35.3205%" y="238.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (13 samples, 0.29%)</title><rect x="35.5625%" y="340" width="0.2908%" height="15" fill="rgb(207,125,25)" fg:x="1590" fg:w="13"/><text x="35.8125%" y="350.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (16 samples, 0.36%)</title><rect x="35.5178%" y="324" width="0.3579%" height="15" fill="rgb(210,195,18)" fg:x="1588" fg:w="16"/><text x="35.7678%" y="334.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (25 samples, 0.56%)</title><rect x="35.4507%" y="276" width="0.5592%" height="15" fill="rgb(249,80,12)" fg:x="1585" fg:w="25"/><text x="35.7007%" y="286.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (24 samples, 0.54%)</title><rect x="35.4730%" y="292" width="0.5368%" height="15" fill="rgb(221,65,9)" fg:x="1586" fg:w="24"/><text x="35.7230%" y="302.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (23 samples, 0.51%)</title><rect x="35.4954%" y="308" width="0.5144%" height="15" fill="rgb(235,49,36)" fg:x="1587" fg:w="23"/><text x="35.7454%" y="318.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (6 samples, 0.13%)</title><rect x="35.8756%" y="324" width="0.1342%" height="15" fill="rgb(225,32,20)" fg:x="1604" fg:w="6"/><text x="36.1256%" y="334.50"></text></g><g><title>consume (antlr4/Parser.py:348) (28 samples, 0.63%)</title><rect x="35.4507%" y="260" width="0.6263%" height="15" fill="rgb(215,141,46)" fg:x="1585" fg:w="28"/><text x="35.7007%" y="270.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (5 samples, 0.11%)</title><rect x="36.0769%" y="276" width="0.1118%" height="15" fill="rgb(250,160,47)" fg:x="1613" fg:w="5"/><text x="36.3269%" y="286.50"></text></g><g><title>consume (antlr4/Parser.py:354) (6 samples, 0.13%)</title><rect x="36.0769%" y="260" width="0.1342%" height="15" fill="rgb(216,222,40)" fg:x="1613" fg:w="6"/><text x="36.3269%" y="270.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5259) (38 samples, 0.85%)</title><rect x="35.3836%" y="228" width="0.8499%" height="15" fill="rgb(234,217,39)" fg:x="1582" fg:w="38"/><text x="35.6336%" y="238.50"></text></g><g><title>match (antlr4/Parser.py:124) (36 samples, 0.81%)</title><rect x="35.4283%" y="244" width="0.8052%" height="15" fill="rgb(207,178,40)" fg:x="1584" fg:w="36"/><text x="35.6783%" y="254.50"></text></g><g><title>__init__ (qasm3Parser.py:5081) (34 samples, 0.76%)</title><rect x="36.3230%" y="260" width="0.7605%" height="15" fill="rgb(221,136,13)" fg:x="1624" fg:w="34"/><text x="36.5730%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5137) (37 samples, 0.83%)</title><rect x="36.3006%" y="244" width="0.8276%" height="15" fill="rgb(249,199,10)" fg:x="1623" fg:w="37"/><text x="36.5506%" y="254.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:170) (5 samples, 0.11%)</title><rect x="37.4413%" y="372" width="0.1118%" height="15" fill="rgb(249,222,13)" fg:x="1674" fg:w="5"/><text x="37.6913%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (5 samples, 0.11%)</title><rect x="37.5755%" y="372" width="0.1118%" height="15" fill="rgb(244,185,38)" fg:x="1680" fg:w="5"/><text x="37.8255%" y="382.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (20 samples, 0.45%)</title><rect x="37.4189%" y="340" width="0.4473%" height="15" fill="rgb(236,202,9)" fg:x="1673" fg:w="20"/><text x="37.6689%" y="350.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (20 samples, 0.45%)</title><rect x="37.4189%" y="356" width="0.4473%" height="15" fill="rgb(250,229,37)" fg:x="1673" fg:w="20"/><text x="37.6689%" y="366.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (6 samples, 0.13%)</title><rect x="38.0004%" y="372" width="0.1342%" height="15" fill="rgb(206,174,23)" fg:x="1699" fg:w="6"/><text x="38.2504%" y="382.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (7 samples, 0.16%)</title><rect x="38.0004%" y="356" width="0.1566%" height="15" fill="rgb(211,33,43)" fg:x="1699" fg:w="7"/><text x="38.2504%" y="366.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (39 samples, 0.87%)</title><rect x="37.3071%" y="292" width="0.8723%" height="15" fill="rgb(245,58,50)" fg:x="1668" fg:w="39"/><text x="37.5571%" y="302.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (38 samples, 0.85%)</title><rect x="37.3295%" y="308" width="0.8499%" height="15" fill="rgb(244,68,36)" fg:x="1669" fg:w="38"/><text x="37.5795%" y="318.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (36 samples, 0.81%)</title><rect x="37.3742%" y="324" width="0.8052%" height="15" fill="rgb(232,229,15)" fg:x="1671" fg:w="36"/><text x="37.6242%" y="334.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (10 samples, 0.22%)</title><rect x="37.9557%" y="340" width="0.2237%" height="15" fill="rgb(254,30,23)" fg:x="1697" fg:w="10"/><text x="38.2057%" y="350.50"></text></g><g><title>consume (antlr4/Parser.py:348) (43 samples, 0.96%)</title><rect x="37.3071%" y="276" width="0.9618%" height="15" fill="rgb(235,160,14)" fg:x="1668" fg:w="43"/><text x="37.5571%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (5 samples, 0.11%)</title><rect x="38.2688%" y="292" width="0.1118%" height="15" fill="rgb(212,155,44)" fg:x="1711" fg:w="5"/><text x="38.5188%" y="302.50"></text></g><g><title>__setattr__ (antlr4/tree/Tree.py:88) (14 samples, 0.31%)</title><rect x="38.3807%" y="308" width="0.3131%" height="15" fill="rgb(226,2,50)" fg:x="1716" fg:w="14"/><text x="38.6307%" y="318.50"></text></g><g><title>indexOperator (qasm3Parser.py:5143) (67 samples, 1.50%)</title><rect x="37.2176%" y="244" width="1.4985%" height="15" fill="rgb(234,177,6)" fg:x="1664" fg:w="67"/><text x="37.4676%" y="254.50"></text></g><g><title>match (antlr4/Parser.py:124) (64 samples, 1.43%)</title><rect x="37.2847%" y="260" width="1.4314%" height="15" fill="rgb(217,24,9)" fg:x="1667" fg:w="64"/><text x="37.5347%" y="270.50"></text></g><g><title>consume (antlr4/Parser.py:354) (20 samples, 0.45%)</title><rect x="38.2688%" y="276" width="0.4473%" height="15" fill="rgb(220,13,46)" fg:x="1711" fg:w="20"/><text x="38.5188%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:105) (15 samples, 0.34%)</title><rect x="38.3807%" y="292" width="0.3355%" height="15" fill="rgb(239,221,27)" fg:x="1716" fg:w="15"/><text x="38.6307%" y="302.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (14 samples, 0.31%)</title><rect x="39.1635%" y="356" width="0.3131%" height="15" fill="rgb(222,198,25)" fg:x="1751" fg:w="14"/><text x="39.4135%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (16 samples, 0.36%)</title><rect x="39.1411%" y="340" width="0.3579%" height="15" fill="rgb(211,99,13)" fg:x="1750" fg:w="16"/><text x="39.3911%" y="350.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:467) (30 samples, 0.67%)</title><rect x="39.0069%" y="276" width="0.6710%" height="15" fill="rgb(232,111,31)" fg:x="1744" fg:w="30"/><text x="39.2569%" y="286.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (30 samples, 0.67%)</title><rect x="39.0069%" y="292" width="0.6710%" height="15" fill="rgb(245,82,37)" fg:x="1744" fg:w="30"/><text x="39.2569%" y="302.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (29 samples, 0.65%)</title><rect x="39.0293%" y="308" width="0.6486%" height="15" fill="rgb(227,149,46)" fg:x="1745" fg:w="29"/><text x="39.2793%" y="318.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (26 samples, 0.58%)</title><rect x="39.0964%" y="324" width="0.5815%" height="15" fill="rgb(218,36,50)" fg:x="1748" fg:w="26"/><text x="39.3464%" y="334.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (5 samples, 0.11%)</title><rect x="39.5661%" y="340" width="0.1118%" height="15" fill="rgb(226,80,48)" fg:x="1769" fg:w="5"/><text x="39.8161%" y="350.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (5 samples, 0.11%)</title><rect x="39.5661%" y="356" width="0.1118%" height="15" fill="rgb(238,224,15)" fg:x="1769" fg:w="5"/><text x="39.8161%" y="366.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (5 samples, 0.11%)</title><rect x="39.5661%" y="372" width="0.1118%" height="15" fill="rgb(241,136,10)" fg:x="1769" fg:w="5"/><text x="39.8161%" y="382.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (34 samples, 0.76%)</title><rect x="38.9398%" y="260" width="0.7605%" height="15" fill="rgb(208,32,45)" fg:x="1741" fg:w="34"/><text x="39.1898%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5154) (40 samples, 0.89%)</title><rect x="38.8951%" y="244" width="0.8947%" height="15" fill="rgb(207,135,9)" fg:x="1739" fg:w="40"/><text x="39.1451%" y="254.50"></text></g><g><title>expression (qasm3Parser.py:4277) (8 samples, 0.18%)</title><rect x="39.8121%" y="260" width="0.1789%" height="15" fill="rgb(206,86,44)" fg:x="1780" fg:w="8"/><text x="40.0621%" y="270.50"></text></g><g><title>expression (qasm3Parser.py:4286) (6 samples, 0.13%)</title><rect x="40.0582%" y="260" width="0.1342%" height="15" fill="rgb(245,177,15)" fg:x="1791" fg:w="6"/><text x="40.3082%" y="270.50"></text></g><g><title>__init__ (qasm3Parser.py:3684) (5 samples, 0.11%)</title><rect x="40.2594%" y="292" width="0.1118%" height="15" fill="rgb(206,64,50)" fg:x="1800" fg:w="5"/><text x="40.5094%" y="302.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (5 samples, 0.11%)</title><rect x="40.2594%" y="308" width="0.1118%" height="15" fill="rgb(234,36,40)" fg:x="1800" fg:w="5"/><text x="40.5094%" y="318.50"></text></g><g><title>expression (qasm3Parser.py:4377) (7 samples, 0.16%)</title><rect x="40.2371%" y="260" width="0.1566%" height="15" fill="rgb(213,64,8)" fg:x="1799" fg:w="7"/><text x="40.4871%" y="270.50"></text></g><g><title>__init__ (qasm3Parser.py:4232) (6 samples, 0.13%)</title><rect x="40.2594%" y="276" width="0.1342%" height="15" fill="rgb(210,75,36)" fg:x="1800" fg:w="6"/><text x="40.5094%" y="286.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:85) (34 samples, 0.76%)</title><rect x="40.5726%" y="308" width="0.7605%" height="15" fill="rgb(229,88,21)" fg:x="1814" fg:w="34"/><text x="40.8226%" y="318.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (39 samples, 0.87%)</title><rect x="40.5726%" y="292" width="0.8723%" height="15" fill="rgb(252,204,47)" fg:x="1814" fg:w="39"/><text x="40.8226%" y="302.50"></text></g><g><title>expression (qasm3Parser.py:4386) (46 samples, 1.03%)</title><rect x="40.5055%" y="260" width="1.0289%" height="15" fill="rgb(208,77,27)" fg:x="1811" fg:w="46"/><text x="40.7555%" y="270.50"></text></g><g><title>consume (antlr4/Parser.py:354) (43 samples, 0.96%)</title><rect x="40.5726%" y="276" width="0.9618%" height="15" fill="rgb(221,76,26)" fg:x="1814" fg:w="43"/><text x="40.8226%" y="286.50"></text></g><g><title>expression (qasm3Parser.py:4393) (10 samples, 0.22%)</title><rect x="41.6014%" y="260" width="0.2237%" height="15" fill="rgb(225,139,18)" fg:x="1860" fg:w="10"/><text x="41.8514%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5157) (94 samples, 2.10%)</title><rect x="39.7898%" y="244" width="2.1024%" height="15" fill="rgb(230,137,11)" fg:x="1779" fg:w="94"/><text x="40.0398%" y="254.50">i..</text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (6 samples, 0.13%)</title><rect x="41.9369%" y="260" width="0.1342%" height="15" fill="rgb(212,28,1)" fg:x="1875" fg:w="6"/><text x="42.1869%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5168) (9 samples, 0.20%)</title><rect x="41.9146%" y="244" width="0.2013%" height="15" fill="rgb(248,164,17)" fg:x="1874" fg:w="9"/><text x="42.1646%" y="254.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (12 samples, 0.27%)</title><rect x="42.2948%" y="356" width="0.2684%" height="15" fill="rgb(222,171,42)" fg:x="1891" fg:w="12"/><text x="42.5448%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (14 samples, 0.31%)</title><rect x="42.2724%" y="340" width="0.3131%" height="15" fill="rgb(243,84,45)" fg:x="1890" fg:w="14"/><text x="42.5224%" y="350.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (22 samples, 0.49%)</title><rect x="42.2277%" y="292" width="0.4921%" height="15" fill="rgb(252,49,23)" fg:x="1888" fg:w="22"/><text x="42.4777%" y="302.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (22 samples, 0.49%)</title><rect x="42.2277%" y="308" width="0.4921%" height="15" fill="rgb(215,19,7)" fg:x="1888" fg:w="22"/><text x="42.4777%" y="318.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (21 samples, 0.47%)</title><rect x="42.2501%" y="324" width="0.4697%" height="15" fill="rgb(238,81,41)" fg:x="1889" fg:w="21"/><text x="42.5001%" y="334.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (6 samples, 0.13%)</title><rect x="42.5856%" y="340" width="0.1342%" height="15" fill="rgb(210,199,37)" fg:x="1904" fg:w="6"/><text x="42.8356%" y="350.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (5 samples, 0.11%)</title><rect x="42.6079%" y="356" width="0.1118%" height="15" fill="rgb(244,192,49)" fg:x="1905" fg:w="5"/><text x="42.8579%" y="366.50"></text></g><g><title>consume (antlr4/Parser.py:348) (29 samples, 0.65%)</title><rect x="42.2277%" y="276" width="0.6486%" height="15" fill="rgb(226,211,11)" fg:x="1888" fg:w="29"/><text x="42.4777%" y="286.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:101) (7 samples, 0.16%)</title><rect x="42.7197%" y="292" width="0.1566%" height="15" fill="rgb(236,162,54)" fg:x="1910" fg:w="7"/><text x="42.9697%" y="302.50"></text></g><g><title>adjustSeekIndex (antlr4/CommonTokenStream.py:45) (5 samples, 0.11%)</title><rect x="42.7645%" y="308" width="0.1118%" height="15" fill="rgb(220,229,9)" fg:x="1912" fg:w="5"/><text x="43.0145%" y="318.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (6 samples, 0.13%)</title><rect x="42.9434%" y="292" width="0.1342%" height="15" fill="rgb(250,87,22)" fg:x="1920" fg:w="6"/><text x="43.1934%" y="302.50"></text></g><g><title>indexOperator (qasm3Parser.py:5204) (41 samples, 0.92%)</title><rect x="42.1830%" y="244" width="0.9170%" height="15" fill="rgb(239,43,17)" fg:x="1886" fg:w="41"/><text x="42.4330%" y="254.50"></text></g><g><title>match (antlr4/Parser.py:124) (41 samples, 0.92%)</title><rect x="42.1830%" y="260" width="0.9170%" height="15" fill="rgb(231,177,25)" fg:x="1886" fg:w="41"/><text x="42.4330%" y="270.50"></text></g><g><title>consume (antlr4/Parser.py:354) (8 samples, 0.18%)</title><rect x="42.9210%" y="276" width="0.1789%" height="15" fill="rgb(219,179,1)" fg:x="1919" fg:w="8"/><text x="43.1710%" y="286.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5265) (308 samples, 6.89%)</title><rect x="36.2782%" y="228" width="6.8888%" height="15" fill="rgb(238,219,53)" fg:x="1622" fg:w="308"/><text x="36.5282%" y="238.50">indexedId..</text></g><g><title>gateOperand (qasm3Parser.py:6163) (366 samples, 8.19%)</title><rect x="35.0705%" y="212" width="8.1861%" height="15" fill="rgb(232,167,36)" fg:x="1568" fg:w="366"/><text x="35.3205%" y="222.50">gateOperand..</text></g><g><title>gateOperandList (qasm3Parser.py:6833) (378 samples, 8.45%)</title><rect x="34.8468%" y="196" width="8.4545%" height="15" fill="rgb(244,19,51)" fg:x="1558" fg:w="378"/><text x="35.0968%" y="206.50">gateOperandL..</text></g><g><title>gateCallStatement (qasm3Parser.py:2413) (1,472 samples, 32.92%)</title><rect x="10.6911%" y="180" width="32.9233%" height="15" fill="rgb(224,6,22)" fg:x="478" fg:w="1472"/><text x="10.9411%" y="190.50">gateCallStatement (qasm3Parser.py:2413)</text></g><g><title>gateOperandList (qasm3Parser.py:6851) (5 samples, 0.11%)</title><rect x="43.5026%" y="196" width="0.1118%" height="15" fill="rgb(224,145,5)" fg:x="1945" fg:w="5"/><text x="43.7526%" y="206.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:145) (7 samples, 0.16%)</title><rect x="44.1512%" y="308" width="0.1566%" height="15" fill="rgb(234,130,49)" fg:x="1974" fg:w="7"/><text x="44.4012%" y="318.50"></text></g><g><title>getExistingTargetState (antlr4/atn/LexerATNSimulator.py:207) (7 samples, 0.16%)</title><rect x="44.3525%" y="324" width="0.1566%" height="15" fill="rgb(254,6,2)" fg:x="1983" fg:w="7"/><text x="44.6025%" y="334.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:170) (11 samples, 0.25%)</title><rect x="44.3301%" y="308" width="0.2460%" height="15" fill="rgb(208,96,46)" fg:x="1982" fg:w="11"/><text x="44.5801%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (20 samples, 0.45%)</title><rect x="44.5762%" y="308" width="0.4473%" height="15" fill="rgb(239,3,39)" fg:x="1993" fg:w="20"/><text x="44.8262%" y="318.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:553) (11 samples, 0.25%)</title><rect x="45.0235%" y="324" width="0.2460%" height="15" fill="rgb(233,210,1)" fg:x="2013" fg:w="11"/><text x="45.2735%" y="334.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (19 samples, 0.42%)</title><rect x="45.0235%" y="308" width="0.4250%" height="15" fill="rgb(244,137,37)" fg:x="2013" fg:w="19"/><text x="45.2735%" y="318.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:559) (6 samples, 0.13%)</title><rect x="45.3142%" y="324" width="0.1342%" height="15" fill="rgb(240,136,2)" fg:x="2026" fg:w="6"/><text x="45.5642%" y="334.50"></text></g><g><title>consume (antlr4/InputStream.py:46) (5 samples, 0.11%)</title><rect x="45.3366%" y="340" width="0.1118%" height="15" fill="rgb(239,18,37)" fg:x="2027" fg:w="5"/><text x="45.5866%" y="350.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:191) (5 samples, 0.11%)</title><rect x="45.5379%" y="308" width="0.1118%" height="15" fill="rgb(218,185,22)" fg:x="2036" fg:w="5"/><text x="45.7879%" y="318.50"></text></g><g><title>failOrAccept (antlr4/atn/LexerATNSimulator.py:248) (9 samples, 0.20%)</title><rect x="45.7168%" y="324" width="0.2013%" height="15" fill="rgb(225,218,4)" fg:x="2044" fg:w="9"/><text x="45.9668%" y="334.50"></text></g><g><title>accept (antlr4/atn/LexerATNSimulator.py:295) (5 samples, 0.11%)</title><rect x="45.8063%" y="340" width="0.1118%" height="15" fill="rgb(230,182,32)" fg:x="2048" fg:w="5"/><text x="46.0563%" y="350.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (81 samples, 1.81%)</title><rect x="44.1288%" y="292" width="1.8117%" height="15" fill="rgb(242,56,43)" fg:x="1973" fg:w="81"/><text x="44.3788%" y="302.50">m..</text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:195) (12 samples, 0.27%)</title><rect x="45.6721%" y="308" width="0.2684%" height="15" fill="rgb(233,99,24)" fg:x="2042" fg:w="12"/><text x="45.9221%" y="318.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (90 samples, 2.01%)</title><rect x="44.0170%" y="276" width="2.0130%" height="15" fill="rgb(234,209,42)" fg:x="1968" fg:w="90"/><text x="44.2670%" y="286.50">n..</text></g><g><title>nextToken (antlr4/Lexer.py:141) (5 samples, 0.11%)</title><rect x="46.0300%" y="276" width="0.1118%" height="15" fill="rgb(227,7,12)" fg:x="2058" fg:w="5"/><text x="46.2800%" y="286.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (8 samples, 0.18%)</title><rect x="46.3431%" y="308" width="0.1789%" height="15" fill="rgb(245,203,43)" fg:x="2072" fg:w="8"/><text x="46.5931%" y="318.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (121 samples, 2.71%)</title><rect x="43.8381%" y="228" width="2.7063%" height="15" fill="rgb(238,205,33)" fg:x="1960" fg:w="121"/><text x="44.0881%" y="238.50">co..</text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (121 samples, 2.71%)</title><rect x="43.8381%" y="244" width="2.7063%" height="15" fill="rgb(231,56,7)" fg:x="1960" fg:w="121"/><text x="44.0881%" y="254.50">sy..</text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (119 samples, 2.66%)</title><rect x="43.8828%" y="260" width="2.6616%" height="15" fill="rgb(244,186,29)" fg:x="1962" fg:w="119"/><text x="44.1328%" y="270.50">fe..</text></g><g><title>nextToken (antlr4/Lexer.py:153) (12 samples, 0.27%)</title><rect x="46.2760%" y="276" width="0.2684%" height="15" fill="rgb(234,111,31)" fg:x="2069" fg:w="12"/><text x="46.5260%" y="286.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (10 samples, 0.22%)</title><rect x="46.3207%" y="292" width="0.2237%" height="15" fill="rgb(241,149,10)" fg:x="2071" fg:w="10"/><text x="46.5707%" y="302.50"></text></g><g><title>consume (antlr4/Parser.py:348) (128 samples, 2.86%)</title><rect x="43.8157%" y="212" width="2.8629%" height="15" fill="rgb(249,206,44)" fg:x="1959" fg:w="128"/><text x="44.0657%" y="222.50">co..</text></g><g><title>consume (antlr4/BufferedTokenStream.py:101) (6 samples, 0.13%)</title><rect x="46.5444%" y="228" width="0.1342%" height="15" fill="rgb(251,153,30)" fg:x="2081" fg:w="6"/><text x="46.7944%" y="238.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:85) (100 samples, 2.24%)</title><rect x="46.7233%" y="244" width="2.2366%" height="15" fill="rgb(239,152,38)" fg:x="2089" fg:w="100"/><text x="46.9733%" y="254.50">_..</text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (104 samples, 2.33%)</title><rect x="46.6786%" y="228" width="2.3261%" height="15" fill="rgb(249,139,47)" fg:x="2087" fg:w="104"/><text x="46.9286%" y="238.50">a..</text></g><g><title>consume (antlr4/Parser.py:354) (113 samples, 2.53%)</title><rect x="46.6786%" y="212" width="2.5274%" height="15" fill="rgb(244,64,35)" fg:x="2087" fg:w="113"/><text x="46.9286%" y="222.50">co..</text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:105) (8 samples, 0.18%)</title><rect x="49.0271%" y="228" width="0.1789%" height="15" fill="rgb(216,46,15)" fg:x="2192" fg:w="8"/><text x="49.2771%" y="238.50"></text></g><g><title>__setattr__ (antlr4/tree/Tree.py:89) (5 samples, 0.11%)</title><rect x="49.0942%" y="244" width="0.1118%" height="15" fill="rgb(250,74,19)" fg:x="2195" fg:w="5"/><text x="49.3442%" y="254.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2415) (251 samples, 5.61%)</title><rect x="43.6368%" y="180" width="5.6140%" height="15" fill="rgb(249,42,33)" fg:x="1951" fg:w="251"/><text x="43.8868%" y="190.50">gateCal..</text></g><g><title>match (antlr4/Parser.py:124) (248 samples, 5.55%)</title><rect x="43.7039%" y="196" width="5.5469%" height="15" fill="rgb(242,149,17)" fg:x="1954" fg:w="248"/><text x="43.9539%" y="206.50">match (..</text></g><g><title>exitRule (antlr4/Parser.py:381) (6 samples, 0.13%)</title><rect x="49.2731%" y="196" width="0.1342%" height="15" fill="rgb(244,29,21)" fg:x="2203" fg:w="6"/><text x="49.5231%" y="206.50"></text></g><g><title>statement (qasm3Parser.py:1002) (2,114 samples, 47.28%)</title><rect x="2.1472%" y="164" width="47.2825%" height="15" fill="rgb(220,130,37)" fg:x="96" fg:w="2114"/><text x="2.3972%" y="174.50">statement (qasm3Parser.py:1002)</text></g><g><title>gateCallStatement (qasm3Parser.py:2476) (8 samples, 0.18%)</title><rect x="49.2507%" y="180" width="0.1789%" height="15" fill="rgb(211,67,2)" fg:x="2202" fg:w="8"/><text x="49.5007%" y="190.50"></text></g><g><title>exitRule (antlr4/Parser.py:381) (8 samples, 0.18%)</title><rect x="49.4744%" y="180" width="0.1789%" height="15" fill="rgb(235,68,52)" fg:x="2212" fg:w="8"/><text x="49.7244%" y="190.50"></text></g><g><title>statement (qasm3Parser.py:1070) (12 samples, 0.27%)</title><rect x="49.4744%" y="164" width="0.2684%" height="15" fill="rgb(246,142,3)" fg:x="2212" fg:w="12"/><text x="49.7244%" y="174.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (5 samples, 0.11%)</title><rect x="49.8099%" y="196" width="0.1118%" height="15" fill="rgb(241,25,7)" fg:x="2227" fg:w="5"/><text x="50.0599%" y="206.50"></text></g><g><title>statement (qasm3Parser.py:888) (11 samples, 0.25%)</title><rect x="49.7428%" y="164" width="0.2460%" height="15" fill="rgb(242,119,39)" fg:x="2224" fg:w="11"/><text x="49.9928%" y="174.50"></text></g><g><title>__init__ (qasm3Parser.py:736) (10 samples, 0.22%)</title><rect x="49.7652%" y="180" width="0.2237%" height="15" fill="rgb(241,98,45)" fg:x="2225" fg:w="10"/><text x="50.0152%" y="190.50"></text></g><g><title>statement (qasm3Parser.py:889) (13 samples, 0.29%)</title><rect x="49.9888%" y="164" width="0.2908%" height="15" fill="rgb(254,28,30)" fg:x="2235" fg:w="13"/><text x="50.2388%" y="174.50"></text></g><g><title>enterRule (antlr4/Parser.py:376) (5 samples, 0.11%)</title><rect x="50.1677%" y="180" width="0.1118%" height="15" fill="rgb(241,142,54)" fg:x="2243" fg:w="5"/><text x="50.4177%" y="190.50"></text></g><g><title>statement (qasm3Parser.py:900) (5 samples, 0.11%)</title><rect x="50.5032%" y="164" width="0.1118%" height="15" fill="rgb(222,85,15)" fg:x="2258" fg:w="5"/><text x="50.7532%" y="174.50"></text></g><g><title>LA (antlr4/InputStream.py:53) (5 samples, 0.11%)</title><rect x="52.1807%" y="308" width="0.1118%" height="15" fill="rgb(210,85,47)" fg:x="2333" fg:w="5"/><text x="52.4307%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:145) (17 samples, 0.38%)</title><rect x="51.9571%" y="292" width="0.3802%" height="15" fill="rgb(224,206,25)" fg:x="2323" fg:w="17"/><text x="52.2071%" y="302.50"></text></g><g><title>getExistingTargetState (antlr4/atn/LexerATNSimulator.py:207) (6 samples, 0.13%)</title><rect x="52.5386%" y="308" width="0.1342%" height="15" fill="rgb(243,201,19)" fg:x="2349" fg:w="6"/><text x="52.7886%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:170) (16 samples, 0.36%)</title><rect x="52.4044%" y="292" width="0.3579%" height="15" fill="rgb(236,59,4)" fg:x="2343" fg:w="16"/><text x="52.6544%" y="302.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (23 samples, 0.51%)</title><rect x="52.8070%" y="292" width="0.5144%" height="15" fill="rgb(254,179,45)" fg:x="2361" fg:w="23"/><text x="53.0570%" y="302.50"></text></g><g><title>__eq__ (antlr4/dfa/DFAState.py:113) (13 samples, 0.29%)</title><rect x="53.0306%" y="308" width="0.2908%" height="15" fill="rgb(226,14,10)" fg:x="2371" fg:w="13"/><text x="53.2806%" y="318.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:553) (14 samples, 0.31%)</title><rect x="53.3885%" y="308" width="0.3131%" height="15" fill="rgb(244,27,41)" fg:x="2387" fg:w="14"/><text x="53.6385%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (25 samples, 0.56%)</title><rect x="53.3661%" y="292" width="0.5592%" height="15" fill="rgb(235,35,32)" fg:x="2386" fg:w="25"/><text x="53.6161%" y="302.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:559) (5 samples, 0.11%)</title><rect x="53.8135%" y="308" width="0.1118%" height="15" fill="rgb(218,68,31)" fg:x="2406" fg:w="5"/><text x="54.0635%" y="318.50"></text></g><g><title>captureSimState (antlr4/atn/LexerATNSimulator.py:473) (7 samples, 0.16%)</title><rect x="53.9700%" y="308" width="0.1566%" height="15" fill="rgb(207,120,37)" fg:x="2413" fg:w="7"/><text x="54.2200%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:187) (9 samples, 0.20%)</title><rect x="53.9477%" y="292" width="0.2013%" height="15" fill="rgb(227,98,0)" fg:x="2412" fg:w="9"/><text x="54.1977%" y="302.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:191) (8 samples, 0.18%)</title><rect x="54.1490%" y="292" width="0.1789%" height="15" fill="rgb(207,7,3)" fg:x="2421" fg:w="8"/><text x="54.3990%" y="302.50"></text></g><g><title>accept (antlr4/atn/LexerATNSimulator.py:290) (6 samples, 0.13%)</title><rect x="54.5963%" y="324" width="0.1342%" height="15" fill="rgb(206,98,19)" fg:x="2441" fg:w="6"/><text x="54.8463%" y="334.50"></text></g><g><title>failOrAccept (antlr4/atn/LexerATNSimulator.py:248) (21 samples, 0.47%)</title><rect x="54.5068%" y="308" width="0.4697%" height="15" fill="rgb(217,5,26)" fg:x="2437" fg:w="21"/><text x="54.7568%" y="318.50"></text></g><g><title>accept (antlr4/atn/LexerATNSimulator.py:295) (11 samples, 0.25%)</title><rect x="54.7305%" y="324" width="0.2460%" height="15" fill="rgb(235,190,38)" fg:x="2447" fg:w="11"/><text x="54.9805%" y="334.50"></text></g><g><title>execute (antlr4/atn/LexerActionExecutor.py:126) (9 samples, 0.20%)</title><rect x="54.7752%" y="340" width="0.2013%" height="15" fill="rgb(247,86,24)" fg:x="2449" fg:w="9"/><text x="55.0252%" y="350.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (141 samples, 3.15%)</title><rect x="51.8452%" y="276" width="3.1537%" height="15" fill="rgb(205,101,16)" fg:x="2318" fg:w="141"/><text x="52.0952%" y="286.50">mat..</text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:195) (29 samples, 0.65%)</title><rect x="54.3503%" y="292" width="0.6486%" height="15" fill="rgb(246,168,33)" fg:x="2430" fg:w="29"/><text x="54.6003%" y="302.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (159 samples, 3.56%)</title><rect x="51.7334%" y="260" width="3.5563%" height="15" fill="rgb(231,114,1)" fg:x="2313" fg:w="159"/><text x="51.9834%" y="270.50">next..</text></g><g><title>nextToken (antlr4/Lexer.py:141) (9 samples, 0.20%)</title><rect x="55.2896%" y="260" width="0.2013%" height="15" fill="rgb(207,184,53)" fg:x="2472" fg:w="9"/><text x="55.5396%" y="270.50"></text></g><g><title>nextToken (antlr4/Lexer.py:145) (5 samples, 0.11%)</title><rect x="55.5133%" y="260" width="0.1118%" height="15" fill="rgb(224,95,51)" fg:x="2482" fg:w="5"/><text x="55.7633%" y="270.50"></text></g><g><title>emit (antlr4/Lexer.py:221) (5 samples, 0.11%)</title><rect x="55.7817%" y="276" width="0.1118%" height="15" fill="rgb(212,188,45)" fg:x="2494" fg:w="5"/><text x="56.0317%" y="286.50"></text></g><g><title>__init__ (antlr4/Token.py:76) (43 samples, 0.96%)</title><rect x="56.2067%" y="308" width="0.9618%" height="15" fill="rgb(223,154,38)" fg:x="2513" fg:w="43"/><text x="56.4567%" y="318.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (63 samples, 1.41%)</title><rect x="55.9606%" y="292" width="1.4091%" height="15" fill="rgb(251,22,52)" fg:x="2502" fg:w="63"/><text x="56.2106%" y="302.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (67 samples, 1.50%)</title><rect x="55.8935%" y="276" width="1.4985%" height="15" fill="rgb(229,209,22)" fg:x="2499" fg:w="67"/><text x="56.1435%" y="286.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (79 samples, 1.77%)</title><rect x="55.6699%" y="260" width="1.7669%" height="15" fill="rgb(234,138,34)" fg:x="2489" fg:w="79"/><text x="55.9199%" y="270.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (269 samples, 6.02%)</title><rect x="51.4426%" y="244" width="6.0166%" height="15" fill="rgb(212,95,11)" fg:x="2300" fg:w="269"/><text x="51.6926%" y="254.50">fetch (a..</text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (279 samples, 6.24%)</title><rect x="51.2637%" y="212" width="6.2402%" height="15" fill="rgb(240,179,47)" fg:x="2292" fg:w="279"/><text x="51.5137%" y="222.50">consume ..</text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (276 samples, 6.17%)</title><rect x="51.3308%" y="228" width="6.1731%" height="15" fill="rgb(240,163,11)" fg:x="2295" fg:w="276"/><text x="51.5808%" y="238.50">sync (an..</text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:467) (292 samples, 6.53%)</title><rect x="51.2413%" y="196" width="6.5310%" height="15" fill="rgb(236,37,12)" fg:x="2291" fg:w="292"/><text x="51.4913%" y="206.50">execATN (..</text></g><g><title>consume (antlr4/BufferedTokenStream.py:101) (12 samples, 0.27%)</title><rect x="57.5039%" y="212" width="0.2684%" height="15" fill="rgb(232,164,16)" fg:x="2571" fg:w="12"/><text x="57.7539%" y="222.50"></text></g><g><title>adjustSeekIndex (antlr4/CommonTokenStream.py:45) (8 samples, 0.18%)</title><rect x="57.5934%" y="228" width="0.1789%" height="15" fill="rgb(244,205,15)" fg:x="2575" fg:w="8"/><text x="57.8434%" y="238.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (315 samples, 7.05%)</title><rect x="50.8611%" y="180" width="7.0454%" height="15" fill="rgb(223,117,47)" fg:x="2274" fg:w="315"/><text x="51.1111%" y="190.50">adaptiveP..</text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:468) (6 samples, 0.13%)</title><rect x="57.7723%" y="196" width="0.1342%" height="15" fill="rgb(244,107,35)" fg:x="2583" fg:w="6"/><text x="58.0223%" y="206.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (5 samples, 0.11%)</title><rect x="57.7947%" y="212" width="0.1118%" height="15" fill="rgb(205,140,8)" fg:x="2584" fg:w="5"/><text x="58.0447%" y="222.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (9 samples, 0.20%)</title><rect x="57.9065%" y="180" width="0.2013%" height="15" fill="rgb(228,84,46)" fg:x="2589" fg:w="9"/><text x="58.1565%" y="190.50"></text></g><g><title>seek (antlr4/BufferedTokenStream.py:77) (8 samples, 0.18%)</title><rect x="57.9289%" y="196" width="0.1789%" height="15" fill="rgb(254,188,9)" fg:x="2590" fg:w="8"/><text x="58.1789%" y="206.50"></text></g><g><title>adjustSeekIndex (antlr4/CommonTokenStream.py:45) (6 samples, 0.13%)</title><rect x="57.9736%" y="212" width="0.1342%" height="15" fill="rgb(206,112,54)" fg:x="2592" fg:w="6"/><text x="58.2236%" y="222.50"></text></g><g><title>statement (qasm3Parser.py:914) (327 samples, 7.31%)</title><rect x="50.8164%" y="164" width="7.3138%" height="15" fill="rgb(216,84,49)" fg:x="2272" fg:w="327"/><text x="51.0664%" y="174.50">statement ..</text></g><g><title>statementOrScope (qasm3Parser.py:1301) (2,511 samples, 56.16%)</title><rect x="2.0801%" y="148" width="56.1619%" height="15" fill="rgb(214,194,35)" fg:x="93" fg:w="2511"/><text x="2.3301%" y="158.50">statementOrScope (qasm3Parser.py:1301)</text></g><g><title>exitRule (antlr4/Parser.py:381) (7 samples, 0.16%)</title><rect x="58.2644%" y="164" width="0.1566%" height="15" fill="rgb(249,28,3)" fg:x="2605" fg:w="7"/><text x="58.5144%" y="174.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (5 samples, 0.11%)</title><rect x="58.3091%" y="180" width="0.1118%" height="15" fill="rgb(222,56,52)" fg:x="2607" fg:w="5"/><text x="58.5591%" y="190.50"></text></g><g><title>program (qasm3Parser.py:659) (2,580 samples, 57.71%)</title><rect x="0.8052%" y="132" width="57.7052%" height="15" fill="rgb(245,217,50)" fg:x="36" fg:w="2580"/><text x="1.0552%" y="142.50">program (qasm3Parser.py:659)</text></g><g><title>statementOrScope (qasm3Parser.py:1316) (12 samples, 0.27%)</title><rect x="58.2420%" y="148" width="0.2684%" height="15" fill="rgb(213,201,24)" fg:x="2604" fg:w="12"/><text x="58.4920%" y="158.50"></text></g><g><title>parse (openqasm3/parser.py:105) (2,589 samples, 57.91%)</title><rect x="0.6710%" y="116" width="57.9065%" height="15" fill="rgb(248,116,28)" fg:x="30" fg:w="2589"/><text x="0.9210%" y="126.50">parse (openqasm3/parser.py:105)</text></g><g><title>scope (qasm3Parser.py:1267) (5 samples, 0.11%)</title><rect x="58.6893%" y="212" width="0.1118%" height="15" fill="rgb(219,72,43)" fg:x="2624" fg:w="5"/><text x="58.9393%" y="222.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (5 samples, 0.11%)</title><rect x="58.6893%" y="228" width="0.1118%" height="15" fill="rgb(209,138,14)" fg:x="2624" fg:w="5"/><text x="58.9393%" y="238.50"></text></g><g><title>statement (qasm3Parser.py:1263) (8 samples, 0.18%)</title><rect x="58.8012%" y="212" width="0.1789%" height="15" fill="rgb(222,18,33)" fg:x="2629" fg:w="8"/><text x="59.0512%" y="222.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (7 samples, 0.16%)</title><rect x="58.8235%" y="228" width="0.1566%" height="15" fill="rgb(213,199,7)" fg:x="2630" fg:w="7"/><text x="59.0735%" y="238.50"></text></g><g><title>wrapped (openqasm3/parser.py:137) (5 samples, 0.11%)</title><rect x="59.1143%" y="244" width="0.1118%" height="15" fill="rgb(250,110,10)" fg:x="2643" fg:w="5"/><text x="59.3643%" y="254.50"></text></g><g><title>getChild (antlr4/ParserRuleContext.py:118) (5 samples, 0.11%)</title><rect x="59.2932%" y="308" width="0.1118%" height="15" fill="rgb(248,123,6)" fg:x="2651" fg:w="5"/><text x="59.5432%" y="318.50"></text></g><g><title>visitStatement (openqasm3/parser.py:215) (10 samples, 0.22%)</title><rect x="59.2485%" y="260" width="0.2237%" height="15" fill="rgb(206,91,31)" fg:x="2649" fg:w="10"/><text x="59.4985%" y="270.50"></text></g><g><title>pragma (qasm3Parser.py:740) (10 samples, 0.22%)</title><rect x="59.2485%" y="276" width="0.2237%" height="15" fill="rgb(211,154,13)" fg:x="2649" fg:w="10"/><text x="59.4985%" y="286.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (9 samples, 0.20%)</title><rect x="59.2709%" y="292" width="0.2013%" height="15" fill="rgb(225,148,7)" fg:x="2650" fg:w="9"/><text x="59.5209%" y="302.50"></text></g><g><title>wrapped (openqasm3/parser.py:137) (5 samples, 0.11%)</title><rect x="59.6064%" y="308" width="0.1118%" height="15" fill="rgb(220,160,43)" fg:x="2665" fg:w="5"/><text x="59.8564%" y="318.50"></text></g><g><title>getTypedRuleContexts (antlr4/ParserRuleContext.py:164) (5 samples, 0.11%)</title><rect x="59.7629%" y="356" width="0.1118%" height="15" fill="rgb(213,52,39)" fg:x="2672" fg:w="5"/><text x="60.0129%" y="366.50"></text></g><g><title>visitGateCallStatement (openqasm3/parser.py:422) (12 samples, 0.27%)</title><rect x="59.7182%" y="324" width="0.2684%" height="15" fill="rgb(243,137,7)" fg:x="2670" fg:w="12"/><text x="59.9682%" y="334.50"></text></g><g><title>gateModifier (qasm3Parser.py:2321) (10 samples, 0.22%)</title><rect x="59.7629%" y="340" width="0.2237%" height="15" fill="rgb(230,79,13)" fg:x="2672" fg:w="10"/><text x="60.0129%" y="350.50"></text></g><g><title>getTypedRuleContexts (antlr4/ParserRuleContext.py:165) (5 samples, 0.11%)</title><rect x="59.8747%" y="356" width="0.1118%" height="15" fill="rgb(247,105,23)" fg:x="2677" fg:w="5"/><text x="60.1247%" y="366.50"></text></g><g><title>accept (qasm3Parser.py:4224) (5 samples, 0.11%)</title><rect x="60.2326%" y="420" width="0.1118%" height="15" fill="rgb(223,179,41)" fg:x="2693" fg:w="5"/><text x="60.4826%" y="430.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (5 samples, 0.11%)</title><rect x="60.2326%" y="436" width="0.1118%" height="15" fill="rgb(218,9,34)" fg:x="2693" fg:w="5"/><text x="60.4826%" y="446.50"></text></g><g><title>visitUnaryExpression (openqasm3/parser.py:594) (5 samples, 0.11%)</title><rect x="60.2326%" y="452" width="0.1118%" height="15" fill="rgb(222,106,8)" fg:x="2693" fg:w="5"/><text x="60.4826%" y="462.50"></text></g><g><title>_visit_binary_expression (openqasm3/parser.py:600) (11 samples, 0.25%)</title><rect x="60.1655%" y="388" width="0.2460%" height="15" fill="rgb(211,220,0)" fg:x="2690" fg:w="11"/><text x="60.4155%" y="398.50"></text></g><g><title>visit (antlr4/tree/Tree.py:34) (9 samples, 0.20%)</title><rect x="60.2102%" y="404" width="0.2013%" height="15" fill="rgb(229,52,16)" fg:x="2692" fg:w="9"/><text x="60.4602%" y="414.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:651) (105 samples, 2.35%)</title><rect x="60.5010%" y="452" width="2.3485%" height="15" fill="rgb(212,155,18)" fg:x="2705" fg:w="105"/><text x="60.7510%" y="462.50">v..</text></g><g><title>Identifier (qasm3Parser.py:4236) (105 samples, 2.35%)</title><rect x="60.5010%" y="468" width="2.3485%" height="15" fill="rgb(242,21,14)" fg:x="2705" fg:w="105"/><text x="60.7510%" y="478.50">I..</text></g><g><title>getToken (antlr4/ParserRuleContext.py:137) (104 samples, 2.33%)</title><rect x="60.5234%" y="484" width="2.3261%" height="15" fill="rgb(222,19,48)" fg:x="2706" fg:w="104"/><text x="60.7734%" y="494.50">g..</text></g><g><title>wrapped (openqasm3/parser.py:138) (125 samples, 2.80%)</title><rect x="60.1655%" y="372" width="2.7958%" height="15" fill="rgb(232,45,27)" fg:x="2690" fg:w="125"/><text x="60.4155%" y="382.50">wr..</text></g><g><title>_visit_binary_expression (openqasm3/parser.py:602) (114 samples, 2.55%)</title><rect x="60.4115%" y="388" width="2.5498%" height="15" fill="rgb(249,103,42)" fg:x="2701" fg:w="114"/><text x="60.6615%" y="398.50">_v..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (112 samples, 2.51%)</title><rect x="60.4563%" y="404" width="2.5050%" height="15" fill="rgb(246,81,33)" fg:x="2703" fg:w="112"/><text x="60.7063%" y="414.50">vi..</text></g><g><title>accept (qasm3Parser.py:4268) (111 samples, 2.48%)</title><rect x="60.4786%" y="420" width="2.4827%" height="15" fill="rgb(252,33,42)" fg:x="2704" fg:w="111"/><text x="60.7286%" y="430.50">ac..</text></g><g><title>wrapped (openqasm3/parser.py:138) (110 samples, 2.46%)</title><rect x="60.5010%" y="436" width="2.4603%" height="15" fill="rgb(209,212,41)" fg:x="2705" fg:w="110"/><text x="60.7510%" y="446.50">wr..</text></g><g><title>accept (qasm3Parser.py:3881) (129 samples, 2.89%)</title><rect x="60.0984%" y="356" width="2.8853%" height="15" fill="rgb(207,154,6)" fg:x="2687" fg:w="129"/><text x="60.3484%" y="366.50">ac..</text></g><g><title>visitGateCallStatement (openqasm3/parser.py:424) (154 samples, 3.44%)</title><rect x="59.9866%" y="324" width="3.4444%" height="15" fill="rgb(223,64,47)" fg:x="2682" fg:w="154"/><text x="60.2366%" y="334.50">vis..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (149 samples, 3.33%)</title><rect x="60.0984%" y="340" width="3.3326%" height="15" fill="rgb(211,161,38)" fg:x="2687" fg:w="149"/><text x="60.3484%" y="350.50">vis..</text></g><g><title>accept (qasm3Parser.py:4268) (19 samples, 0.42%)</title><rect x="63.0060%" y="356" width="0.4250%" height="15" fill="rgb(219,138,40)" fg:x="2817" fg:w="19"/><text x="63.2560%" y="366.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (15 samples, 0.34%)</title><rect x="63.0955%" y="372" width="0.3355%" height="15" fill="rgb(241,228,46)" fg:x="2821" fg:w="15"/><text x="63.3455%" y="382.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:658) (5 samples, 0.11%)</title><rect x="63.3192%" y="388" width="0.1118%" height="15" fill="rgb(223,209,38)" fg:x="2831" fg:w="5"/><text x="63.5692%" y="398.50"></text></g><g><title>visitGateCallStatement (openqasm3/parser.py:425) (5 samples, 0.11%)</title><rect x="63.4310%" y="324" width="0.1118%" height="15" fill="rgb(236,164,45)" fg:x="2836" fg:w="5"/><text x="63.6810%" y="334.50"></text></g><g><title>gateOperand (qasm3Parser.py:6785) (5 samples, 0.11%)</title><rect x="63.5876%" y="340" width="0.1118%" height="15" fill="rgb(231,15,5)" fg:x="2843" fg:w="5"/><text x="63.8376%" y="350.50"></text></g><g><title>gateOperandList (qasm3Parser.py:2313) (10 samples, 0.22%)</title><rect x="63.6994%" y="340" width="0.2237%" height="15" fill="rgb(252,35,15)" fg:x="2848" fg:w="10"/><text x="63.9494%" y="350.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (9 samples, 0.20%)</title><rect x="63.7218%" y="356" width="0.2013%" height="15" fill="rgb(248,181,18)" fg:x="2849" fg:w="9"/><text x="63.9718%" y="366.50"></text></g><g><title>wrapped (openqasm3/parser.py:137) (7 samples, 0.16%)</title><rect x="63.9678%" y="372" width="0.1566%" height="15" fill="rgb(233,39,42)" fg:x="2860" fg:w="7"/><text x="64.2178%" y="382.50"></text></g><g><title>get_span (openqasm3/parser.py:114) (5 samples, 0.11%)</title><rect x="64.0125%" y="388" width="0.1118%" height="15" fill="rgb(238,110,33)" fg:x="2862" fg:w="5"/><text x="64.2625%" y="398.50"></text></g><g><title>getToken (antlr4/ParserRuleContext.py:134) (9 samples, 0.20%)</title><rect x="64.1691%" y="420" width="0.2013%" height="15" fill="rgb(233,195,10)" fg:x="2869" fg:w="9"/><text x="64.4191%" y="430.50"></text></g><g><title>visitGateOperand (openqasm3/parser.py:864) (11 samples, 0.25%)</title><rect x="64.1691%" y="388" width="0.2460%" height="15" fill="rgb(254,105,3)" fg:x="2869" fg:w="11"/><text x="64.4191%" y="398.50"></text></g><g><title>HardwareQubit (qasm3Parser.py:6130) (11 samples, 0.25%)</title><rect x="64.1691%" y="404" width="0.2460%" height="15" fill="rgb(221,225,9)" fg:x="2869" fg:w="11"/><text x="64.4191%" y="414.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:6126) (11 samples, 0.25%)</title><rect x="64.4599%" y="404" width="0.2460%" height="15" fill="rgb(224,227,45)" fg:x="2882" fg:w="11"/><text x="64.7099%" y="414.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (10 samples, 0.22%)</title><rect x="64.4822%" y="420" width="0.2237%" height="15" fill="rgb(229,198,43)" fg:x="2883" fg:w="10"/><text x="64.7322%" y="430.50"></text></g><g><title>getChild (antlr4/ParserRuleContext.py:122) (5 samples, 0.11%)</title><rect x="64.5941%" y="436" width="0.1118%" height="15" fill="rgb(206,209,35)" fg:x="2888" fg:w="5"/><text x="64.8441%" y="446.50"></text></g><g><title>getTypedRuleContexts (antlr4/ParserRuleContext.py:164) (161 samples, 3.60%)</title><rect x="65.0861%" y="484" width="3.6010%" height="15" fill="rgb(245,195,53)" fg:x="2910" fg:w="161"/><text x="65.3361%" y="494.50">getT..</text></g><g><title>getChildren (antlr4/ParserRuleContext.py:126) (159 samples, 3.56%)</title><rect x="65.1308%" y="500" width="3.5563%" height="15" fill="rgb(240,92,26)" fg:x="2912" fg:w="159"/><text x="65.3808%" y="510.50">getC..</text></g><g><title>visitIndexedIdentifier (openqasm3/parser.py:768) (171 samples, 3.82%)</title><rect x="64.9295%" y="452" width="3.8246%" height="15" fill="rgb(207,40,23)" fg:x="2903" fg:w="171"/><text x="65.1795%" y="462.50">visi..</text></g><g><title>indexOperator (qasm3Parser.py:5226) (169 samples, 3.78%)</title><rect x="64.9743%" y="468" width="3.7799%" height="15" fill="rgb(223,111,35)" fg:x="2905" fg:w="169"/><text x="65.2243%" y="478.50">inde..</text></g><g><title>visitIndexedIdentifier (openqasm3/parser.py:770) (9 samples, 0.20%)</title><rect x="68.7542%" y="452" width="0.2013%" height="15" fill="rgb(229,147,28)" fg:x="3074" fg:w="9"/><text x="69.0042%" y="462.50"></text></g><g><title>Identifier (qasm3Parser.py:5222) (5 samples, 0.11%)</title><rect x="68.9555%" y="468" width="0.1118%" height="15" fill="rgb(211,29,28)" fg:x="3083" fg:w="5"/><text x="69.2055%" y="478.50"></text></g><g><title>visitIndexedIdentifier (openqasm3/parser.py:771) (12 samples, 0.27%)</title><rect x="68.9555%" y="452" width="0.2684%" height="15" fill="rgb(228,72,33)" fg:x="3083" fg:w="12"/><text x="69.2055%" y="462.50"></text></g><g><title>_visit_identifier (openqasm3/parser.py:147) (7 samples, 0.16%)</title><rect x="69.0673%" y="468" width="0.1566%" height="15" fill="rgb(205,214,31)" fg:x="3088" fg:w="7"/><text x="69.3173%" y="478.50"></text></g><g><title>getChildren (antlr4/ParserRuleContext.py:126) (6 samples, 0.13%)</title><rect x="69.2463%" y="500" width="0.1342%" height="15" fill="rgb(224,111,15)" fg:x="3096" fg:w="6"/><text x="69.4963%" y="510.50"></text></g><g><title>getTypedRuleContexts (antlr4/ParserRuleContext.py:164) (7 samples, 0.16%)</title><rect x="69.2463%" y="484" width="0.1566%" height="15" fill="rgb(253,21,26)" fg:x="3096" fg:w="7"/><text x="69.4963%" y="494.50"></text></g><g><title>indexOperator (qasm3Parser.py:5226) (11 samples, 0.25%)</title><rect x="69.2239%" y="468" width="0.2460%" height="15" fill="rgb(245,139,43)" fg:x="3095" fg:w="11"/><text x="69.4739%" y="478.50"></text></g><g><title>accept (qasm3Parser.py:5127) (7 samples, 0.16%)</title><rect x="69.5146%" y="484" width="0.1566%" height="15" fill="rgb(252,170,7)" fg:x="3108" fg:w="7"/><text x="69.7646%" y="494.50"></text></g><g><title>visitIndexOperator (openqasm3/parser.py:753) (13 samples, 0.29%)</title><rect x="69.7830%" y="500" width="0.2908%" height="15" fill="rgb(231,118,14)" fg:x="3120" fg:w="13"/><text x="70.0330%" y="510.50"></text></g><g><title>setExpression (qasm3Parser.py:5092) (12 samples, 0.27%)</title><rect x="69.8054%" y="516" width="0.2684%" height="15" fill="rgb(238,83,0)" fg:x="3121" fg:w="12"/><text x="70.0554%" y="526.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (11 samples, 0.25%)</title><rect x="69.8278%" y="532" width="0.2460%" height="15" fill="rgb(221,39,39)" fg:x="3122" fg:w="11"/><text x="70.0778%" y="542.50"></text></g><g><title>getChildren (antlr4/ParserRuleContext.py:126) (5 samples, 0.11%)</title><rect x="70.2527%" y="516" width="0.1118%" height="15" fill="rgb(222,119,46)" fg:x="3141" fg:w="5"/><text x="70.5027%" y="526.50"></text></g><g><title>predicate (openqasm3/parser.py:761) (6 samples, 0.13%)</title><rect x="70.4540%" y="532" width="0.1342%" height="15" fill="rgb(222,165,49)" fg:x="3150" fg:w="6"/><text x="70.7040%" y="542.50"></text></g><g><title>getChildren (antlr4/ParserRuleContext.py:129) (10 samples, 0.22%)</title><rect x="70.3869%" y="516" width="0.2237%" height="15" fill="rgb(219,113,52)" fg:x="3147" fg:w="10"/><text x="70.6369%" y="526.50"></text></g><g><title>accept (qasm3Parser.py:4267) (6 samples, 0.13%)</title><rect x="70.6330%" y="532" width="0.1342%" height="15" fill="rgb(214,7,15)" fg:x="3158" fg:w="6"/><text x="70.8830%" y="542.50"></text></g><g><title>wrapped (openqasm3/parser.py:137) (11 samples, 0.25%)</title><rect x="70.8343%" y="548" width="0.2460%" height="15" fill="rgb(235,32,4)" fg:x="3167" fg:w="11"/><text x="71.0843%" y="558.50"></text></g><g><title>get_span (openqasm3/parser.py:114) (8 samples, 0.18%)</title><rect x="70.9014%" y="564" width="0.1789%" height="15" fill="rgb(238,90,54)" fg:x="3170" fg:w="8"/><text x="71.1514%" y="574.50"></text></g><g><title>__init__ (__init__) (6 samples, 0.13%)</title><rect x="70.9461%" y="580" width="0.1342%" height="15" fill="rgb(213,208,19)" fg:x="3172" fg:w="6"/><text x="71.1961%" y="590.50"></text></g><g><title>__init__ (&lt;string&gt;:2) (6 samples, 0.13%)</title><rect x="70.9461%" y="596" width="0.1342%" height="15" fill="rgb(233,156,4)" fg:x="3172" fg:w="6"/><text x="71.1961%" y="606.50"></text></g><g><title>getToken (antlr4/ParserRuleContext.py:134) (5 samples, 0.11%)</title><rect x="71.1698%" y="596" width="0.1118%" height="15" fill="rgb(207,194,5)" fg:x="3182" fg:w="5"/><text x="71.4198%" y="606.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:651) (14 samples, 0.31%)</title><rect x="71.1250%" y="564" width="0.3131%" height="15" fill="rgb(206,111,30)" fg:x="3180" fg:w="14"/><text x="71.3750%" y="574.50"></text></g><g><title>Identifier (qasm3Parser.py:4236) (13 samples, 0.29%)</title><rect x="71.1474%" y="580" width="0.2908%" height="15" fill="rgb(243,70,54)" fg:x="3181" fg:w="13"/><text x="71.3974%" y="590.50"></text></g><g><title>getToken (antlr4/ParserRuleContext.py:137) (6 samples, 0.13%)</title><rect x="71.3040%" y="596" width="0.1342%" height="15" fill="rgb(242,28,8)" fg:x="3188" fg:w="6"/><text x="71.5540%" y="606.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:653) (5 samples, 0.11%)</title><rect x="71.4382%" y="564" width="0.1118%" height="15" fill="rgb(219,106,18)" fg:x="3194" fg:w="5"/><text x="71.6882%" y="574.50"></text></g><g><title>BinaryIntegerLiteral (qasm3Parser.py:4238) (5 samples, 0.11%)</title><rect x="71.4382%" y="580" width="0.1118%" height="15" fill="rgb(244,222,10)" fg:x="3194" fg:w="5"/><text x="71.6882%" y="590.50"></text></g><g><title>getToken (antlr4/ParserRuleContext.py:134) (5 samples, 0.11%)</title><rect x="71.5500%" y="596" width="0.1118%" height="15" fill="rgb(236,179,52)" fg:x="3199" fg:w="5"/><text x="71.8000%" y="606.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:655) (6 samples, 0.13%)</title><rect x="71.5500%" y="564" width="0.1342%" height="15" fill="rgb(213,23,39)" fg:x="3199" fg:w="6"/><text x="71.8000%" y="574.50"></text></g><g><title>OctalIntegerLiteral (qasm3Parser.py:4240) (6 samples, 0.13%)</title><rect x="71.5500%" y="580" width="0.1342%" height="15" fill="rgb(238,48,10)" fg:x="3199" fg:w="6"/><text x="71.8000%" y="590.50"></text></g><g><title>DecimalIntegerLiteral (qasm3Parser.py:4242) (6 samples, 0.13%)</title><rect x="71.8408%" y="580" width="0.1342%" height="15" fill="rgb(251,196,23)" fg:x="3212" fg:w="6"/><text x="72.0908%" y="590.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (360 samples, 8.05%)</title><rect x="64.1244%" y="372" width="8.0519%" height="15" fill="rgb(250,152,24)" fg:x="2867" fg:w="360"/><text x="64.3744%" y="382.50">wrapped (op..</text></g><g><title>visitGateOperand (openqasm3/parser.py:866) (347 samples, 7.76%)</title><rect x="64.4151%" y="388" width="7.7611%" height="15" fill="rgb(209,150,17)" fg:x="2880" fg:w="347"/><text x="64.6651%" y="398.50">visitGateOp..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (334 samples, 7.47%)</title><rect x="64.7059%" y="404" width="7.4704%" height="15" fill="rgb(234,202,34)" fg:x="2893" fg:w="334"/><text x="64.9559%" y="414.50">visit (ant..</text></g><g><title>accept (qasm3Parser.py:5244) (331 samples, 7.40%)</title><rect x="64.7730%" y="420" width="7.4033%" height="15" fill="rgb(253,148,53)" fg:x="2896" fg:w="331"/><text x="65.0230%" y="430.50">accept (qa..</text></g><g><title>wrapped (openqasm3/parser.py:138) (325 samples, 7.27%)</title><rect x="64.9072%" y="436" width="7.2691%" height="15" fill="rgb(218,129,16)" fg:x="2902" fg:w="325"/><text x="65.1572%" y="446.50">wrapped (o..</text></g><g><title>visitIndexedIdentifier (openqasm3/parser.py:772) (132 samples, 2.95%)</title><rect x="69.2239%" y="452" width="2.9524%" height="15" fill="rgb(216,85,19)" fg:x="3095" fg:w="132"/><text x="69.4739%" y="462.50">vis..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (121 samples, 2.71%)</title><rect x="69.4699%" y="468" width="2.7063%" height="15" fill="rgb(235,228,7)" fg:x="3106" fg:w="121"/><text x="69.7199%" y="478.50">vi..</text></g><g><title>accept (qasm3Parser.py:5128) (112 samples, 2.51%)</title><rect x="69.6712%" y="484" width="2.5050%" height="15" fill="rgb(245,175,0)" fg:x="3115" fg:w="112"/><text x="69.9212%" y="494.50">ac..</text></g><g><title>visitIndexOperator (openqasm3/parser.py:764) (90 samples, 2.01%)</title><rect x="70.1633%" y="500" width="2.0130%" height="15" fill="rgb(208,168,36)" fg:x="3137" fg:w="90"/><text x="70.4133%" y="510.50">v..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (70 samples, 1.57%)</title><rect x="70.6106%" y="516" width="1.5656%" height="15" fill="rgb(246,171,24)" fg:x="3157" fg:w="70"/><text x="70.8606%" y="526.50"></text></g><g><title>accept (qasm3Parser.py:4268) (63 samples, 1.41%)</title><rect x="70.7672%" y="532" width="1.4091%" height="15" fill="rgb(215,142,24)" fg:x="3164" fg:w="63"/><text x="71.0172%" y="542.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (49 samples, 1.10%)</title><rect x="71.0803%" y="548" width="1.0960%" height="15" fill="rgb(250,187,7)" fg:x="3178" fg:w="49"/><text x="71.3303%" y="558.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:658) (20 samples, 0.45%)</title><rect x="71.7289%" y="564" width="0.4473%" height="15" fill="rgb(228,66,33)" fg:x="3207" fg:w="20"/><text x="71.9789%" y="574.50"></text></g><g><title>getText (antlr4/tree/Tree.py:116) (9 samples, 0.20%)</title><rect x="71.9749%" y="580" width="0.2013%" height="15" fill="rgb(234,215,21)" fg:x="3218" fg:w="9"/><text x="72.2249%" y="590.50"></text></g><g><title>visitGateCallStatement (openqasm3/parser.py:429) (387 samples, 8.66%)</title><rect x="63.5428%" y="324" width="8.6558%" height="15" fill="rgb(222,191,20)" fg:x="2841" fg:w="387"/><text x="63.7928%" y="334.50">visitGateCal..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (370 samples, 8.28%)</title><rect x="63.9231%" y="340" width="8.2756%" height="15" fill="rgb(245,79,54)" fg:x="2858" fg:w="370"/><text x="64.1731%" y="350.50">visit (antlr..</text></g><g><title>accept (qasm3Parser.py:6145) (368 samples, 8.23%)</title><rect x="63.9678%" y="356" width="8.2308%" height="15" fill="rgb(240,10,37)" fg:x="2860" fg:w="368"/><text x="64.2178%" y="366.50">accept (qas..</text></g><g><title>visitGateCallStatement (openqasm3/parser.py:430) (11 samples, 0.25%)</title><rect x="72.1986%" y="324" width="0.2460%" height="15" fill="rgb(214,192,32)" fg:x="3228" fg:w="11"/><text x="72.4486%" y="334.50"></text></g><g><title>gateOperandList (qasm3Parser.py:2313) (11 samples, 0.25%)</title><rect x="72.1986%" y="340" width="0.2460%" height="15" fill="rgb(209,36,54)" fg:x="3228" fg:w="11"/><text x="72.4486%" y="350.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (9 samples, 0.20%)</title><rect x="72.2433%" y="356" width="0.2013%" height="15" fill="rgb(220,10,11)" fg:x="3230" fg:w="9"/><text x="72.4933%" y="366.50"></text></g><g><title>visitGateCallStatement (openqasm3/parser.py:433) (8 samples, 0.18%)</title><rect x="72.4670%" y="324" width="0.1789%" height="15" fill="rgb(221,106,17)" fg:x="3240" fg:w="8"/><text x="72.7170%" y="334.50"></text></g><g><title>GPHASE (qasm3Parser.py:2341) (7 samples, 0.16%)</title><rect x="72.4894%" y="340" width="0.1566%" height="15" fill="rgb(251,142,44)" fg:x="3241" fg:w="7"/><text x="72.7394%" y="350.50"></text></g><g><title>visitGateCallStatement (openqasm3/parser.py:439) (7 samples, 0.16%)</title><rect x="72.6459%" y="324" width="0.1566%" height="15" fill="rgb(238,13,15)" fg:x="3248" fg:w="7"/><text x="72.8959%" y="334.50"></text></g><g><title>getText (antlr4/tree/Tree.py:116) (5 samples, 0.11%)</title><rect x="72.9814%" y="356" width="0.1118%" height="15" fill="rgb(208,107,27)" fg:x="3263" fg:w="5"/><text x="73.2314%" y="366.50"></text></g><g><title>visitGateCallStatement (openqasm3/parser.py:441) (16 samples, 0.36%)</title><rect x="72.8249%" y="324" width="0.3579%" height="15" fill="rgb(205,136,37)" fg:x="3256" fg:w="16"/><text x="73.0749%" y="334.50"></text></g><g><title>_visit_identifier (openqasm3/parser.py:147) (12 samples, 0.27%)</title><rect x="72.9143%" y="340" width="0.2684%" height="15" fill="rgb(250,205,27)" fg:x="3260" fg:w="12"/><text x="73.1643%" y="350.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (607 samples, 13.58%)</title><rect x="59.7182%" y="308" width="13.5764%" height="15" fill="rgb(210,80,43)" fg:x="2670" fg:w="607"/><text x="59.9682%" y="318.50">wrapped (openqasm3/pa..</text></g><g><title>visitGateCallStatement (openqasm3/parser.py:444) (5 samples, 0.11%)</title><rect x="73.1827%" y="324" width="0.1118%" height="15" fill="rgb(247,160,36)" fg:x="3272" fg:w="5"/><text x="73.4327%" y="334.50"></text></g><g><title>designator (qasm3Parser.py:2333) (5 samples, 0.11%)</title><rect x="73.1827%" y="340" width="0.1118%" height="15" fill="rgb(234,13,49)" fg:x="3272" fg:w="5"/><text x="73.4327%" y="350.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (5 samples, 0.11%)</title><rect x="73.1827%" y="356" width="0.1118%" height="15" fill="rgb(234,122,0)" fg:x="3272" fg:w="5"/><text x="73.4327%" y="366.50"></text></g><g><title>visitStatement (openqasm3/parser.py:217) (622 samples, 13.91%)</title><rect x="59.4722%" y="260" width="13.9119%" height="15" fill="rgb(207,146,38)" fg:x="2659" fg:w="622"/><text x="59.7222%" y="270.50">visitStatement (openq..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (619 samples, 13.84%)</title><rect x="59.5393%" y="276" width="13.8448%" height="15" fill="rgb(207,177,25)" fg:x="2662" fg:w="619"/><text x="59.7893%" y="286.50">visit (antlr4/tree/Tr..</text></g><g><title>accept (qasm3Parser.py:2356) (617 samples, 13.80%)</title><rect x="59.5840%" y="292" width="13.8000%" height="15" fill="rgb(211,178,42)" fg:x="2664" fg:w="617"/><text x="59.8340%" y="302.50">accept (qasm3Parser.p..</text></g><g><title>wrapped (openqasm3/parser.py:138) (642 samples, 14.36%)</title><rect x="59.2261%" y="244" width="14.3592%" height="15" fill="rgb(230,69,54)" fg:x="2648" fg:w="642"/><text x="59.4761%" y="254.50">wrapped (openqasm3/par..</text></g><g><title>visitStatement (openqasm3/parser.py:218) (9 samples, 0.20%)</title><rect x="73.3840%" y="260" width="0.2013%" height="15" fill="rgb(214,135,41)" fg:x="3281" fg:w="9"/><text x="73.6340%" y="270.50"></text></g><g><title>annotation (qasm3Parser.py:861) (8 samples, 0.18%)</title><rect x="73.4064%" y="276" width="0.1789%" height="15" fill="rgb(237,67,25)" fg:x="3282" fg:w="8"/><text x="73.6564%" y="286.50"></text></g><g><title>parse (openqasm3/parser.py:108) (673 samples, 15.05%)</title><rect x="58.5775%" y="116" width="15.0526%" height="15" fill="rgb(222,189,50)" fg:x="2619" fg:w="673"/><text x="58.8275%" y="126.50">parse (openqasm3/parser..</text></g><g><title>wrapped (openqasm3/parser.py:138) (673 samples, 15.05%)</title><rect x="58.5775%" y="132" width="15.0526%" height="15" fill="rgb(245,148,34)" fg:x="2619" fg:w="673"/><text x="58.8275%" y="142.50">wrapped (openqasm3/pars..</text></g><g><title>visitProgram (openqasm3/parser.py:210) (673 samples, 15.05%)</title><rect x="58.5775%" y="148" width="15.0526%" height="15" fill="rgb(222,29,6)" fg:x="2619" fg:w="673"/><text x="58.8275%" y="158.50">visitProgram (openqasm3..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (670 samples, 14.99%)</title><rect x="58.6446%" y="164" width="14.9855%" height="15" fill="rgb(221,189,43)" fg:x="2622" fg:w="670"/><text x="58.8946%" y="174.50">visit (antlr4/tree/Tree..</text></g><g><title>accept (qasm3Parser.py:1283) (669 samples, 14.96%)</title><rect x="58.6670%" y="180" width="14.9631%" height="15" fill="rgb(207,36,27)" fg:x="2623" fg:w="669"/><text x="58.9170%" y="190.50">accept (qasm3Parser.py:..</text></g><g><title>visitStatementOrScope (openqasm3/parser.py:942) (668 samples, 14.94%)</title><rect x="58.6893%" y="196" width="14.9407%" height="15" fill="rgb(217,90,24)" fg:x="2624" fg:w="668"/><text x="58.9393%" y="206.50">visitStatementOrScope (..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (655 samples, 14.65%)</title><rect x="58.9801%" y="212" width="14.6500%" height="15" fill="rgb(224,66,35)" fg:x="2637" fg:w="655"/><text x="59.2301%" y="222.50">visit (antlr4/tree/Tre..</text></g><g><title>accept (qasm3Parser.py:879) (651 samples, 14.56%)</title><rect x="59.0696%" y="228" width="14.5605%" height="15" fill="rgb(221,13,50)" fg:x="2641" fg:w="651"/><text x="59.3196%" y="238.50">accept (qasm3Parser.py..</text></g><g><title>&lt;module&gt; (test.py:77) (3,285 samples, 73.47%)</title><rect x="0.2460%" y="68" width="73.4735%" height="15" fill="rgb(236,68,49)" fg:x="11" fg:w="3285"/><text x="0.4960%" y="78.50">&lt;module&gt; (test.py:77)</text></g><g><title>load (pyqasm/entrypoint.py:50) (3,266 samples, 73.05%)</title><rect x="0.6710%" y="84" width="73.0485%" height="15" fill="rgb(229,146,28)" fg:x="30" fg:w="3266"/><text x="0.9210%" y="94.50">load (pyqasm/entrypoint.py:50)</text></g><g><title>loads (pyqasm/entrypoint.py:78) (3,266 samples, 73.05%)</title><rect x="0.6710%" y="100" width="73.0485%" height="15" fill="rgb(225,31,38)" fg:x="30" fg:w="3266"/><text x="0.9210%" y="110.50">loads (pyqasm/entrypoint.py:78)</text></g><g><title>wrapper (reprlib.py:21) (9 samples, 0.20%)</title><rect x="75.1957%" y="228" width="0.2013%" height="15" fill="rgb(250,208,3)" fg:x="3362" fg:w="9"/><text x="75.4457%" y="238.50"></text></g><g><title>__repr__ (&lt;string&gt;:9) (9 samples, 0.20%)</title><rect x="75.1957%" y="244" width="0.2013%" height="15" fill="rgb(246,54,23)" fg:x="3362" fg:w="9"/><text x="75.4457%" y="254.50"></text></g><g><title>__repr__ (&lt;string&gt;:6) (21 samples, 0.47%)</title><rect x="74.9720%" y="212" width="0.4697%" height="15" fill="rgb(243,76,11)" fg:x="3352" fg:w="21"/><text x="75.2220%" y="222.50"></text></g><g><title>wrapper (reprlib.py:19) (5 samples, 0.11%)</title><rect x="76.4035%" y="260" width="0.1118%" height="15" fill="rgb(245,21,50)" fg:x="3416" fg:w="5"/><text x="76.6535%" y="270.50"></text></g><g><title>wrapper (reprlib.py:21) (21 samples, 0.47%)</title><rect x="76.5153%" y="260" width="0.4697%" height="15" fill="rgb(228,9,43)" fg:x="3421" fg:w="21"/><text x="76.7653%" y="270.50"></text></g><g><title>__repr__ (&lt;string&gt;:9) (21 samples, 0.47%)</title><rect x="76.5153%" y="276" width="0.4697%" height="15" fill="rgb(208,100,47)" fg:x="3421" fg:w="21"/><text x="76.7653%" y="286.50"></text></g><g><title>__repr__ (&lt;string&gt;:6) (39 samples, 0.87%)</title><rect x="76.1351%" y="244" width="0.8723%" height="15" fill="rgb(232,26,8)" fg:x="3404" fg:w="39"/><text x="76.3851%" y="254.50"></text></g><g><title>wrapper (reprlib.py:21) (49 samples, 1.10%)</title><rect x="76.0904%" y="228" width="1.0960%" height="15" fill="rgb(216,166,38)" fg:x="3402" fg:w="49"/><text x="76.3404%" y="238.50"></text></g><g><title>__repr__ (&lt;string&gt;:9) (8 samples, 0.18%)</title><rect x="77.0074%" y="244" width="0.1789%" height="15" fill="rgb(251,202,51)" fg:x="3443" fg:w="8"/><text x="77.2574%" y="254.50"></text></g><g><title>__repr__ (&lt;string&gt;:7) (80 samples, 1.79%)</title><rect x="75.4417%" y="212" width="1.7893%" height="15" fill="rgb(254,216,34)" fg:x="3373" fg:w="80"/><text x="75.6917%" y="222.50">_..</text></g><g><title>__repr__ (&lt;string&gt;:8) (16 samples, 0.36%)</title><rect x="77.2310%" y="212" width="0.3579%" height="15" fill="rgb(251,32,27)" fg:x="3453" fg:w="16"/><text x="77.4810%" y="222.50"></text></g><g><title>wrapper (reprlib.py:21) (10 samples, 0.22%)</title><rect x="77.3652%" y="228" width="0.2237%" height="15" fill="rgb(208,127,28)" fg:x="3459" fg:w="10"/><text x="77.6152%" y="238.50"></text></g><g><title>wrapper (reprlib.py:21) (164 samples, 3.67%)</title><rect x="74.0327%" y="164" width="3.6681%" height="15" fill="rgb(224,137,22)" fg:x="3310" fg:w="164"/><text x="74.2827%" y="174.50">wrap..</text></g><g><title>__repr__ (&lt;string&gt;:11) (164 samples, 3.67%)</title><rect x="74.0327%" y="180" width="3.6681%" height="15" fill="rgb(254,70,32)" fg:x="3310" fg:w="164"/><text x="74.2827%" y="190.50">__re..</text></g><g><title>wrapper (reprlib.py:21) (125 samples, 2.80%)</title><rect x="74.9049%" y="196" width="2.7958%" height="15" fill="rgb(229,75,37)" fg:x="3349" fg:w="125"/><text x="75.1549%" y="206.50">wr..</text></g><g><title>__repr__ (&lt;string&gt;:9) (5 samples, 0.11%)</title><rect x="77.5889%" y="212" width="0.1118%" height="15" fill="rgb(252,64,23)" fg:x="3469" fg:w="5"/><text x="77.8389%" y="222.50"></text></g><g><title>visit_statement (pyqasm/visitor.py:3091) (172 samples, 3.85%)</title><rect x="73.8985%" y="148" width="3.8470%" height="15" fill="rgb(232,162,48)" fg:x="3304" fg:w="172"/><text x="74.1485%" y="158.50">visi..</text></g><g><title>visit_statement (pyqasm/visitor.py:3093) (6 samples, 0.13%)</title><rect x="77.7455%" y="148" width="0.1342%" height="15" fill="rgb(246,160,12)" fg:x="3476" fg:w="6"/><text x="77.9955%" y="158.50"></text></g><g><title>visit_statement (pyqasm/visitor.py:3120) (5 samples, 0.11%)</title><rect x="78.2375%" y="148" width="0.1118%" height="15" fill="rgb(247,166,0)" fg:x="3498" fg:w="5"/><text x="78.4875%" y="158.50"></text></g><g><title>copy (copy.py:88) (6 samples, 0.13%)</title><rect x="78.5730%" y="180" width="0.1342%" height="15" fill="rgb(249,219,21)" fg:x="3513" fg:w="6"/><text x="78.8230%" y="190.50"></text></g><g><title>_visit_generic_gate_operation (pyqasm/visitor.py:1296) (23 samples, 0.51%)</title><rect x="78.5059%" y="164" width="0.5144%" height="15" fill="rgb(205,209,3)" fg:x="3510" fg:w="23"/><text x="78.7559%" y="174.50"></text></g><g><title>copy (copy.py:98) (13 samples, 0.29%)</title><rect x="78.7296%" y="180" width="0.2908%" height="15" fill="rgb(243,44,1)" fg:x="3520" fg:w="13"/><text x="78.9796%" y="190.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:288) (5 samples, 0.11%)</title><rect x="79.2887%" y="180" width="0.1118%" height="15" fill="rgb(206,159,16)" fg:x="3545" fg:w="5"/><text x="79.5387%" y="190.50"></text></g><g><title>get_from_visible_scope (pyqasm/scope.py:194) (5 samples, 0.11%)</title><rect x="79.2887%" y="196" width="0.1118%" height="15" fill="rgb(244,77,30)" fg:x="3545" fg:w="5"/><text x="79.5387%" y="206.50"></text></g><g><title>in_global_scope (pyqasm/scope.py:105) (5 samples, 0.11%)</title><rect x="79.2887%" y="212" width="0.1118%" height="15" fill="rgb(218,69,12)" fg:x="3545" fg:w="5"/><text x="79.5387%" y="222.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:323) (23 samples, 0.51%)</title><rect x="79.4900%" y="180" width="0.5144%" height="15" fill="rgb(212,87,7)" fg:x="3554" fg:w="23"/><text x="79.7400%" y="190.50"></text></g><g><title>_visit_generic_gate_operation (pyqasm/visitor.py:1344) (47 samples, 1.05%)</title><rect x="79.1769%" y="164" width="1.0512%" height="15" fill="rgb(245,114,25)" fg:x="3540" fg:w="47"/><text x="79.4269%" y="174.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:341) (6 samples, 0.13%)</title><rect x="80.0939%" y="180" width="0.1342%" height="15" fill="rgb(210,61,42)" fg:x="3581" fg:w="6"/><text x="80.3439%" y="190.50"></text></g><g><title>one_qubit_rotation_op (pyqasm/maps/gates.py:981) (8 samples, 0.18%)</title><rect x="80.7873%" y="228" width="0.1789%" height="15" fill="rgb(211,52,33)" fg:x="3612" fg:w="8"/><text x="81.0373%" y="238.50"></text></g><g><title>__init__ (&lt;string&gt;:3) (7 samples, 0.16%)</title><rect x="80.8097%" y="244" width="0.1566%" height="15" fill="rgb(234,58,33)" fg:x="3613" fg:w="7"/><text x="81.0597%" y="254.50"></text></g><g><title>phaseshift_gate (pyqasm/maps/gates.py:283) (10 samples, 0.22%)</title><rect x="80.7873%" y="212" width="0.2237%" height="15" fill="rgb(220,115,36)" fg:x="3612" fg:w="10"/><text x="81.0373%" y="222.50"></text></g><g><title>one_qubit_gate_op (pyqasm/maps/gates.py:968) (109 samples, 2.44%)</title><rect x="81.0110%" y="228" width="2.4379%" height="15" fill="rgb(243,153,54)" fg:x="3622" fg:w="109"/><text x="81.2610%" y="238.50">on..</text></g><g><title>__init__ (&lt;string&gt;:2) (104 samples, 2.33%)</title><rect x="81.1228%" y="244" width="2.3261%" height="15" fill="rgb(251,47,18)" fg:x="3627" fg:w="104"/><text x="81.3728%" y="254.50">_..</text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:1000) (134 samples, 3.00%)</title><rect x="80.5189%" y="180" width="2.9971%" height="15" fill="rgb(242,102,42)" fg:x="3600" fg:w="134"/><text x="80.7689%" y="190.50">_vi..</text></g><g><title>_broadcast_gate_operation (pyqasm/visitor.py:885) (129 samples, 2.89%)</title><rect x="80.6307%" y="196" width="2.8853%" height="15" fill="rgb(234,31,38)" fg:x="3605" fg:w="129"/><text x="80.8807%" y="206.50">_b..</text></g><g><title>phaseshift_gate (pyqasm/maps/gates.py:284) (112 samples, 2.51%)</title><rect x="81.0110%" y="212" width="2.5050%" height="15" fill="rgb(221,117,51)" fg:x="3622" fg:w="112"/><text x="81.2610%" y="222.50">ph..</text></g><g><title>_update_qubit_depth_for_gate (pyqasm/visitor.py:907) (13 samples, 0.29%)</title><rect x="83.6502%" y="196" width="0.2908%" height="15" fill="rgb(212,20,18)" fg:x="3740" fg:w="13"/><text x="83.9002%" y="206.50"></text></g><g><title>_update_qubit_depth_for_gate (pyqasm/visitor.py:915) (16 samples, 0.36%)</title><rect x="84.1199%" y="196" width="0.3579%" height="15" fill="rgb(245,133,36)" fg:x="3761" fg:w="16"/><text x="84.3699%" y="206.50"></text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:1009) (47 samples, 1.05%)</title><rect x="83.5160%" y="180" width="1.0512%" height="15" fill="rgb(212,6,19)" fg:x="3734" fg:w="47"/><text x="83.7660%" y="190.50"></text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:1023) (11 samples, 0.25%)</title><rect x="84.6567%" y="180" width="0.2460%" height="15" fill="rgb(218,1,36)" fg:x="3785" fg:w="11"/><text x="84.9067%" y="190.50"></text></g><g><title>verify_gate_qubits (pyqasm/analyzer.py:289) (10 samples, 0.22%)</title><rect x="84.6790%" y="196" width="0.2237%" height="15" fill="rgb(246,84,54)" fg:x="3786" fg:w="10"/><text x="84.9290%" y="206.50"></text></g><g><title>wrapper (reprlib.py:21) (13 samples, 0.29%)</title><rect x="85.9316%" y="260" width="0.2908%" height="15" fill="rgb(242,110,6)" fg:x="3842" fg:w="13"/><text x="86.1816%" y="270.50"></text></g><g><title>__repr__ (&lt;string&gt;:9) (13 samples, 0.29%)</title><rect x="85.9316%" y="276" width="0.2908%" height="15" fill="rgb(214,47,5)" fg:x="3842" fg:w="13"/><text x="86.1816%" y="286.50"></text></g><g><title>__repr__ (&lt;string&gt;:6) (24 samples, 0.54%)</title><rect x="85.7079%" y="244" width="0.5368%" height="15" fill="rgb(218,159,25)" fg:x="3832" fg:w="24"/><text x="85.9579%" y="254.50"></text></g><g><title>__repr__ (&lt;string&gt;:7) (39 samples, 0.87%)</title><rect x="86.2447%" y="244" width="0.8723%" height="15" fill="rgb(215,211,28)" fg:x="3856" fg:w="39"/><text x="86.4947%" y="254.50"></text></g><g><title>wrapper (reprlib.py:21) (13 samples, 0.29%)</title><rect x="86.8262%" y="260" width="0.2908%" height="15" fill="rgb(238,59,32)" fg:x="3882" fg:w="13"/><text x="87.0762%" y="270.50"></text></g><g><title>__repr__ (&lt;string&gt;:6) (11 samples, 0.25%)</title><rect x="86.8709%" y="276" width="0.2460%" height="15" fill="rgb(226,82,3)" fg:x="3884" fg:w="11"/><text x="87.1209%" y="286.50"></text></g><g><title>wrapper (reprlib.py:21) (6 samples, 0.13%)</title><rect x="87.1617%" y="260" width="0.1342%" height="15" fill="rgb(240,164,32)" fg:x="3897" fg:w="6"/><text x="87.4117%" y="270.50"></text></g><g><title>__repr__ (&lt;string&gt;:8) (9 samples, 0.20%)</title><rect x="87.1170%" y="244" width="0.2013%" height="15" fill="rgb(232,46,7)" fg:x="3895" fg:w="9"/><text x="87.3670%" y="254.50"></text></g><g><title>wrapper (reprlib.py:21) (80 samples, 1.79%)</title><rect x="85.6855%" y="228" width="1.7893%" height="15" fill="rgb(229,129,53)" fg:x="3831" fg:w="80"/><text x="85.9355%" y="238.50">w..</text></g><g><title>__repr__ (&lt;string&gt;:9) (7 samples, 0.16%)</title><rect x="87.3183%" y="244" width="0.1566%" height="15" fill="rgb(234,188,29)" fg:x="3904" fg:w="7"/><text x="87.5683%" y="254.50"></text></g><g><title>wrapper (reprlib.py:21) (109 samples, 2.44%)</title><rect x="85.1040%" y="196" width="2.4379%" height="15" fill="rgb(246,141,4)" fg:x="3805" fg:w="109"/><text x="85.3540%" y="206.50">wr..</text></g><g><title>__repr__ (&lt;string&gt;:11) (109 samples, 2.44%)</title><rect x="85.1040%" y="212" width="2.4379%" height="15" fill="rgb(229,23,39)" fg:x="3805" fg:w="109"/><text x="85.3540%" y="222.50">__..</text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:948) (120 samples, 2.68%)</title><rect x="84.9027%" y="180" width="2.6840%" height="15" fill="rgb(206,12,3)" fg:x="3796" fg:w="120"/><text x="85.1527%" y="190.50">_v..</text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:960) (9 samples, 0.20%)</title><rect x="87.6090%" y="180" width="0.2013%" height="15" fill="rgb(252,226,20)" fg:x="3917" fg:w="9"/><text x="87.8590%" y="190.50"></text></g><g><title>evaluate_expression (pyqasm/expressions.py:283) (6 samples, 0.13%)</title><rect x="88.2129%" y="228" width="0.1342%" height="15" fill="rgb(216,123,35)" fg:x="3944" fg:w="6"/><text x="88.4629%" y="238.50"></text></g><g><title>_check_and_return_value (pyqasm/expressions.py:224) (6 samples, 0.13%)</title><rect x="88.2129%" y="244" width="0.1342%" height="15" fill="rgb(212,68,40)" fg:x="3944" fg:w="6"/><text x="88.4629%" y="254.50"></text></g><g><title>evaluate_expression (pyqasm/expressions.py:385) (5 samples, 0.11%)</title><rect x="88.3471%" y="228" width="0.1118%" height="15" fill="rgb(254,125,32)" fg:x="3950" fg:w="5"/><text x="88.5971%" y="238.50"></text></g><g><title>evaluate_expression (pyqasm/expressions.py:457) (14 samples, 0.31%)</title><rect x="88.1682%" y="212" width="0.3131%" height="15" fill="rgb(253,97,22)" fg:x="3942" fg:w="14"/><text x="88.4182%" y="222.50"></text></g><g><title>evaluate_expression (pyqasm/expressions.py:467) (5 samples, 0.11%)</title><rect x="88.5261%" y="212" width="0.1118%" height="15" fill="rgb(241,101,14)" fg:x="3958" fg:w="5"/><text x="88.7761%" y="222.50"></text></g><g><title>_get_op_parameters (pyqasm/visitor.py:805) (36 samples, 0.81%)</title><rect x="87.8551%" y="196" width="0.8052%" height="15" fill="rgb(238,103,29)" fg:x="3928" fg:w="36"/><text x="88.1051%" y="206.50"></text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:970) (38 samples, 0.85%)</title><rect x="87.8327%" y="180" width="0.8499%" height="15" fill="rgb(233,195,47)" fg:x="3927" fg:w="38"/><text x="88.0827%" y="190.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:288) (11 samples, 0.25%)</title><rect x="88.9287%" y="212" width="0.2460%" height="15" fill="rgb(246,218,30)" fg:x="3976" fg:w="11"/><text x="89.1787%" y="222.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:323) (402 samples, 8.99%)</title><rect x="89.2865%" y="212" width="8.9913%" height="15" fill="rgb(219,145,47)" fg:x="3992" fg:w="402"/><text x="89.5365%" y="222.50">_get_op_bits ..</text></g><g><title>evaluate_expression (pyqasm/expressions.py:355) (382 samples, 8.54%)</title><rect x="89.7338%" y="228" width="8.5439%" height="15" fill="rgb(243,12,26)" fg:x="4012" fg:w="382"/><text x="89.9838%" y="238.50">evaluate_exp..</text></g><g><title>_check_and_return_value (pyqasm/expressions.py:224) (382 samples, 8.54%)</title><rect x="89.7338%" y="244" width="8.5439%" height="15" fill="rgb(214,87,16)" fg:x="4012" fg:w="382"/><text x="89.9838%" y="254.50">_check_and_r..</text></g><g><title>_get_op_bits (pyqasm/visitor.py:341) (7 samples, 0.16%)</title><rect x="98.3673%" y="212" width="0.1566%" height="15" fill="rgb(208,99,42)" fg:x="4398" fg:w="7"/><text x="98.6173%" y="222.50"></text></g><g><title>_unroll_multiple_target_qubits (pyqasm/visitor.py:850) (443 samples, 9.91%)</title><rect x="88.6826%" y="196" width="9.9083%" height="15" fill="rgb(253,99,2)" fg:x="3965" fg:w="443"/><text x="88.9326%" y="206.50">_unroll_multip..</text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:983) (447 samples, 10.00%)</title><rect x="88.6826%" y="180" width="9.9978%" height="15" fill="rgb(220,168,23)" fg:x="3965" fg:w="447"/><text x="88.9326%" y="190.50">_visit_basic_g..</text></g><g><title>_visit_generic_gate_operation (pyqasm/visitor.py:1421) (820 samples, 18.34%)</title><rect x="80.3623%" y="164" width="18.3404%" height="15" fill="rgb(242,38,24)" fg:x="3593" fg:w="820"/><text x="80.6123%" y="174.50">_visit_generic_gate_operation..</text></g><g><title>consolidate_qubit_registers (pyqasm/transformer.py:564) (6 samples, 0.13%)</title><rect x="99.2395%" y="180" width="0.1342%" height="15" fill="rgb(225,182,9)" fg:x="4437" fg:w="6"/><text x="99.4895%" y="190.50"></text></g><g><title>consolidate_qubit_registers (pyqasm/transformer.py:568) (23 samples, 0.51%)</title><rect x="99.3961%" y="180" width="0.5144%" height="15" fill="rgb(243,178,37)" fg:x="4444" fg:w="23"/><text x="99.6461%" y="190.50"></text></g><g><title>__init__ (__init__) (6 samples, 0.13%)</title><rect x="99.7763%" y="196" width="0.1342%" height="15" fill="rgb(232,139,19)" fg:x="4461" fg:w="6"/><text x="100.0263%" y="206.50"></text></g><g><title>_visit_generic_gate_operation (pyqasm/visitor.py:1436) (51 samples, 1.14%)</title><rect x="98.7922%" y="164" width="1.1407%" height="15" fill="rgb(225,201,24)" fg:x="4417" fg:w="51"/><text x="99.0422%" y="174.50"></text></g><g><title>all (4,471 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(221,47,46)" fg:x="0" fg:w="4471"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (test.py:78) (1,175 samples, 26.28%)</title><rect x="73.7195%" y="68" width="26.2805%" height="15" fill="rgb(249,23,13)" fg:x="3296" fg:w="1175"/><text x="73.9695%" y="78.50">&lt;module&gt; (test.py:78)</text></g><g><title>wrapper (pyqasm/modules/base.py:60) (1,175 samples, 26.28%)</title><rect x="73.7195%" y="84" width="26.2805%" height="15" fill="rgb(219,9,5)" fg:x="3296" fg:w="1175"/><text x="73.9695%" y="94.50">wrapper (pyqasm/modules/base.py:60)</text></g><g><title>unroll (pyqasm/modules/base.py:619) (1,175 samples, 26.28%)</title><rect x="73.7195%" y="100" width="26.2805%" height="15" fill="rgb(254,171,16)" fg:x="3296" fg:w="1175"/><text x="73.9695%" y="110.50">unroll (pyqasm/modules/base.py:619)</text></g><g><title>accept (pyqasm/modules/qasm2.py:107) (1,175 samples, 26.28%)</title><rect x="73.7195%" y="116" width="26.2805%" height="15" fill="rgb(230,171,20)" fg:x="3296" fg:w="1175"/><text x="73.9695%" y="126.50">accept (pyqasm/modules/qasm2.py:107)</text></g><g><title>visit_basic_block (pyqasm/visitor.py:3150) (1,175 samples, 26.28%)</title><rect x="73.7195%" y="132" width="26.2805%" height="15" fill="rgb(210,71,41)" fg:x="3296" fg:w="1175"/><text x="73.9695%" y="142.50">visit_basic_block (pyqasm/visitor.py:3150)</text></g><g><title>visit_statement (pyqasm/visitor.py:3130) (964 samples, 21.56%)</title><rect x="78.4388%" y="148" width="21.5612%" height="15" fill="rgb(206,173,20)" fg:x="3507" fg:w="964"/><text x="78.6888%" y="158.50">visit_statement (pyqasm/visitor.py..</text></g></svg></svg>