<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="666" onload="init(evt)" viewBox="0 0 1200 666" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="666" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o tests/profiles/unroll/unroll.svg -- python3 /Users/vinay/Desktop/test.py</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="655.00"> </text><svg id="frames" x="10" width="1180" total_samples="4044"><g><title>&lt;module&gt; (test.py:7) (14 samples, 0.35%)</title><rect x="0.0000%" y="68" width="0.3462%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="14"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (14 samples, 0.35%)</title><rect x="0.0000%" y="84" width="0.3462%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="14"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (14 samples, 0.35%)</title><rect x="0.0000%" y="100" width="0.3462%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="14"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (14 samples, 0.35%)</title><rect x="0.0000%" y="116" width="0.3462%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="14"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (14 samples, 0.35%)</title><rect x="0.0000%" y="132" width="0.3462%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="14"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (14 samples, 0.35%)</title><rect x="0.0000%" y="148" width="0.3462%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="14"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (pyqasm/__init__.py:64) (14 samples, 0.35%)</title><rect x="0.0000%" y="164" width="0.3462%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="14"/><text x="0.2500%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (14 samples, 0.35%)</title><rect x="0.0000%" y="180" width="0.3462%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="14"/><text x="0.2500%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (14 samples, 0.35%)</title><rect x="0.0000%" y="196" width="0.3462%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="14"/><text x="0.2500%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (14 samples, 0.35%)</title><rect x="0.0000%" y="212" width="0.3462%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="14"/><text x="0.2500%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (14 samples, 0.35%)</title><rect x="0.0000%" y="228" width="0.3462%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="14"/><text x="0.2500%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (14 samples, 0.35%)</title><rect x="0.0000%" y="244" width="0.3462%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="14"/><text x="0.2500%" y="254.50"></text></g><g><title>&lt;module&gt; (pyqasm/entrypoint.py:28) (10 samples, 0.25%)</title><rect x="0.0989%" y="260" width="0.2473%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="10"/><text x="0.3489%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (10 samples, 0.25%)</title><rect x="0.0989%" y="276" width="0.2473%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="10"/><text x="0.3489%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (10 samples, 0.25%)</title><rect x="0.0989%" y="292" width="0.2473%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="10"/><text x="0.3489%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (10 samples, 0.25%)</title><rect x="0.0989%" y="308" width="0.2473%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="10"/><text x="0.3489%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (10 samples, 0.25%)</title><rect x="0.0989%" y="324" width="0.2473%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="10"/><text x="0.3489%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (10 samples, 0.25%)</title><rect x="0.0989%" y="340" width="0.2473%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="10"/><text x="0.3489%" y="350.50"></text></g><g><title>&lt;module&gt; (pyqasm/modules/__init__.py:32) (10 samples, 0.25%)</title><rect x="0.0989%" y="356" width="0.2473%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="10"/><text x="0.3489%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (10 samples, 0.25%)</title><rect x="0.0989%" y="372" width="0.2473%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="10"/><text x="0.3489%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (10 samples, 0.25%)</title><rect x="0.0989%" y="388" width="0.2473%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="10"/><text x="0.3489%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (10 samples, 0.25%)</title><rect x="0.0989%" y="404" width="0.2473%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="10"/><text x="0.3489%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (9 samples, 0.22%)</title><rect x="0.1236%" y="420" width="0.2226%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="9"/><text x="0.3736%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.22%)</title><rect x="0.1236%" y="436" width="0.2226%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="9"/><text x="0.3736%" y="446.50"></text></g><g><title>&lt;module&gt; (pyqasm/modules/base.py:30) (9 samples, 0.22%)</title><rect x="0.1236%" y="452" width="0.2226%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="9"/><text x="0.3736%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.22%)</title><rect x="0.1236%" y="468" width="0.2226%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="9"/><text x="0.3736%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.22%)</title><rect x="0.1236%" y="484" width="0.2226%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="9"/><text x="0.3736%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.22%)</title><rect x="0.1236%" y="500" width="0.2226%" height="15" fill="rgb(238,160,17)" fg:x="5" fg:w="9"/><text x="0.3736%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (9 samples, 0.22%)</title><rect x="0.1236%" y="516" width="0.2226%" height="15" fill="rgb(214,148,48)" fg:x="5" fg:w="9"/><text x="0.3736%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.22%)</title><rect x="0.1236%" y="532" width="0.2226%" height="15" fill="rgb(232,36,49)" fg:x="5" fg:w="9"/><text x="0.3736%" y="542.50"></text></g><g><title>&lt;module&gt; (pyqasm/analyzer.py:24) (9 samples, 0.22%)</title><rect x="0.1236%" y="548" width="0.2226%" height="15" fill="rgb(209,103,24)" fg:x="5" fg:w="9"/><text x="0.3736%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (9 samples, 0.22%)</title><rect x="0.1236%" y="564" width="0.2226%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="9"/><text x="0.3736%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (9 samples, 0.22%)</title><rect x="0.1236%" y="580" width="0.2226%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="9"/><text x="0.3736%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (9 samples, 0.22%)</title><rect x="0.1236%" y="596" width="0.2226%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="9"/><text x="0.3736%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1026) (9 samples, 0.22%)</title><rect x="0.1236%" y="612" width="0.2226%" height="15" fill="rgb(241,83,37)" fg:x="5" fg:w="9"/><text x="0.3736%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (9 samples, 0.22%)</title><rect x="0.1236%" y="628" width="0.2226%" height="15" fill="rgb(233,36,39)" fg:x="5" fg:w="9"/><text x="0.3736%" y="638.50"></text></g><g><title>load (pyqasm/entrypoint.py:49) (10 samples, 0.25%)</title><rect x="0.3462%" y="84" width="0.2473%" height="15" fill="rgb(226,3,54)" fg:x="14" fg:w="10"/><text x="0.5962%" y="94.50"></text></g><g><title>process_include_statements (pyqasm/preprocess.py:77) (6 samples, 0.15%)</title><rect x="0.4451%" y="100" width="0.1484%" height="15" fill="rgb(245,192,40)" fg:x="18" fg:w="6"/><text x="0.6951%" y="110.50"></text></g><g><title>__init__ (qasm3Parser.py:1259) (6 samples, 0.15%)</title><rect x="0.8160%" y="164" width="0.1484%" height="15" fill="rgb(238,167,29)" fg:x="33" fg:w="6"/><text x="1.0660%" y="174.50"></text></g><g><title>statementOrScope (qasm3Parser.py:1292) (11 samples, 0.27%)</title><rect x="0.7171%" y="148" width="0.2720%" height="15" fill="rgb(232,182,51)" fg:x="29" fg:w="11"/><text x="0.9671%" y="158.50"></text></g><g><title>statementOrScope (qasm3Parser.py:1293) (6 samples, 0.15%)</title><rect x="0.9891%" y="148" width="0.1484%" height="15" fill="rgb(231,60,39)" fg:x="40" fg:w="6"/><text x="1.2391%" y="158.50"></text></g><g><title>statementOrScope (qasm3Parser.py:1298) (6 samples, 0.15%)</title><rect x="1.2611%" y="148" width="0.1484%" height="15" fill="rgb(208,69,12)" fg:x="51" fg:w="6"/><text x="1.5111%" y="158.50"></text></g><g><title>statementOrScope (qasm3Parser.py:1299) (5 samples, 0.12%)</title><rect x="1.4095%" y="148" width="0.1236%" height="15" fill="rgb(235,93,37)" fg:x="57" fg:w="5"/><text x="1.6595%" y="158.50"></text></g><g><title>__init__ (qasm3Parser.py:2305) (7 samples, 0.17%)</title><rect x="1.7804%" y="196" width="0.1731%" height="15" fill="rgb(213,116,39)" fg:x="72" fg:w="7"/><text x="2.0304%" y="206.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (5 samples, 0.12%)</title><rect x="2.0030%" y="212" width="0.1236%" height="15" fill="rgb(222,207,29)" fg:x="81" fg:w="5"/><text x="2.2530%" y="222.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2365) (21 samples, 0.52%)</title><rect x="1.6815%" y="180" width="0.5193%" height="15" fill="rgb(206,96,30)" fg:x="68" fg:w="21"/><text x="1.9315%" y="190.50"></text></g><g><title>__init__ (qasm3Parser.py:2306) (10 samples, 0.25%)</title><rect x="1.9535%" y="196" width="0.2473%" height="15" fill="rgb(218,138,4)" fg:x="79" fg:w="10"/><text x="2.2035%" y="206.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2366) (8 samples, 0.20%)</title><rect x="2.2008%" y="180" width="0.1978%" height="15" fill="rgb(250,191,14)" fg:x="89" fg:w="8"/><text x="2.4508%" y="190.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2369) (7 samples, 0.17%)</title><rect x="2.3986%" y="180" width="0.1731%" height="15" fill="rgb(239,60,40)" fg:x="97" fg:w="7"/><text x="2.6486%" y="190.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:395) (5 samples, 0.12%)</title><rect x="2.6706%" y="212" width="0.1236%" height="15" fill="rgb(206,27,48)" fg:x="108" fg:w="5"/><text x="2.9206%" y="222.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (8 samples, 0.20%)</title><rect x="2.6706%" y="196" width="0.1978%" height="15" fill="rgb(225,35,8)" fg:x="108" fg:w="8"/><text x="2.9206%" y="206.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (6 samples, 0.15%)</title><rect x="2.8684%" y="196" width="0.1484%" height="15" fill="rgb(250,213,24)" fg:x="116" fg:w="6"/><text x="3.1184%" y="206.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2371) (18 samples, 0.45%)</title><rect x="2.5964%" y="180" width="0.4451%" height="15" fill="rgb(247,123,22)" fg:x="105" fg:w="18"/><text x="2.8464%" y="190.50"></text></g><g><title>match (antlr4/Parser.py:121) (5 samples, 0.12%)</title><rect x="3.3877%" y="196" width="0.1236%" height="15" fill="rgb(231,138,38)" fg:x="137" fg:w="5"/><text x="3.6377%" y="206.50"></text></g><g><title>getCurrentToken (antlr4/Parser.py:313) (5 samples, 0.12%)</title><rect x="3.3877%" y="212" width="0.1236%" height="15" fill="rgb(231,145,46)" fg:x="137" fg:w="5"/><text x="3.6377%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:348) (8 samples, 0.20%)</title><rect x="3.6350%" y="212" width="0.1978%" height="15" fill="rgb(251,118,11)" fg:x="147" fg:w="8"/><text x="3.8850%" y="222.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:85) (5 samples, 0.12%)</title><rect x="3.9565%" y="244" width="0.1236%" height="15" fill="rgb(217,147,25)" fg:x="160" fg:w="5"/><text x="4.2065%" y="254.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (14 samples, 0.35%)</title><rect x="3.8823%" y="228" width="0.3462%" height="15" fill="rgb(247,81,37)" fg:x="157" fg:w="14"/><text x="4.1323%" y="238.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2385) (47 samples, 1.16%)</title><rect x="3.3136%" y="180" width="1.1622%" height="15" fill="rgb(209,12,38)" fg:x="134" fg:w="47"/><text x="3.5636%" y="190.50"></text></g><g><title>match (antlr4/Parser.py:124) (37 samples, 0.91%)</title><rect x="3.5608%" y="196" width="0.9149%" height="15" fill="rgb(227,1,9)" fg:x="144" fg:w="37"/><text x="3.8108%" y="206.50"></text></g><g><title>consume (antlr4/Parser.py:354) (25 samples, 0.62%)</title><rect x="3.8576%" y="212" width="0.6182%" height="15" fill="rgb(248,47,43)" fg:x="156" fg:w="25"/><text x="4.1076%" y="222.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:105) (7 samples, 0.17%)</title><rect x="4.3027%" y="228" width="0.1731%" height="15" fill="rgb(221,10,30)" fg:x="174" fg:w="7"/><text x="4.5527%" y="238.50"></text></g><g><title>consume (antlr4/Parser.py:348) (5 samples, 0.12%)</title><rect x="4.6983%" y="212" width="0.1236%" height="15" fill="rgb(210,229,1)" fg:x="190" fg:w="5"/><text x="4.9483%" y="222.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:86) (6 samples, 0.15%)</title><rect x="4.9209%" y="244" width="0.1484%" height="15" fill="rgb(222,148,37)" fg:x="199" fg:w="6"/><text x="5.1709%" y="254.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (13 samples, 0.32%)</title><rect x="4.8467%" y="228" width="0.3215%" height="15" fill="rgb(234,67,33)" fg:x="196" fg:w="13"/><text x="5.0967%" y="238.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2391) (24 samples, 0.59%)</title><rect x="4.6241%" y="180" width="0.5935%" height="15" fill="rgb(247,98,35)" fg:x="187" fg:w="24"/><text x="4.8741%" y="190.50"></text></g><g><title>match (antlr4/Parser.py:124) (23 samples, 0.57%)</title><rect x="4.6489%" y="196" width="0.5687%" height="15" fill="rgb(247,138,52)" fg:x="188" fg:w="23"/><text x="4.8989%" y="206.50"></text></g><g><title>consume (antlr4/Parser.py:354) (16 samples, 0.40%)</title><rect x="4.8220%" y="212" width="0.3956%" height="15" fill="rgb(213,79,30)" fg:x="195" fg:w="16"/><text x="5.0720%" y="222.50"></text></g><g><title>expressionList (qasm3Parser.py:6661) (9 samples, 0.22%)</title><rect x="5.4649%" y="196" width="0.2226%" height="15" fill="rgb(246,177,23)" fg:x="221" fg:w="9"/><text x="5.7149%" y="206.50"></text></g><g><title>expression (qasm3Parser.py:4277) (7 samples, 0.17%)</title><rect x="5.8605%" y="212" width="0.1731%" height="15" fill="rgb(230,62,27)" fg:x="237" fg:w="7"/><text x="6.1105%" y="222.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (7 samples, 0.17%)</title><rect x="6.1820%" y="228" width="0.1731%" height="15" fill="rgb(216,154,8)" fg:x="250" fg:w="7"/><text x="6.4320%" y="238.50"></text></g><g><title>expression (qasm3Parser.py:4286) (11 samples, 0.27%)</title><rect x="6.1573%" y="212" width="0.2720%" height="15" fill="rgb(244,35,45)" fg:x="249" fg:w="11"/><text x="6.4073%" y="222.50"></text></g><g><title>expression (qasm3Parser.py:4313) (11 samples, 0.27%)</title><rect x="6.5776%" y="212" width="0.2720%" height="15" fill="rgb(251,115,12)" fg:x="266" fg:w="11"/><text x="6.8276%" y="222.50"></text></g><g><title>expression (qasm3Parser.py:4377) (6 samples, 0.15%)</title><rect x="6.8744%" y="212" width="0.1484%" height="15" fill="rgb(240,54,50)" fg:x="278" fg:w="6"/><text x="7.1244%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:346) (7 samples, 0.17%)</title><rect x="7.1958%" y="228" width="0.1731%" height="15" fill="rgb(233,84,52)" fg:x="291" fg:w="7"/><text x="7.4458%" y="238.50"></text></g><g><title>getCurrentToken (antlr4/Parser.py:313) (5 samples, 0.12%)</title><rect x="7.2453%" y="244" width="0.1236%" height="15" fill="rgb(207,117,47)" fg:x="293" fg:w="5"/><text x="7.4953%" y="254.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (7 samples, 0.17%)</title><rect x="7.4679%" y="244" width="0.1731%" height="15" fill="rgb(249,43,39)" fg:x="302" fg:w="7"/><text x="7.7179%" y="254.50"></text></g><g><title>expression (qasm3Parser.py:4386) (20 samples, 0.49%)</title><rect x="7.1711%" y="212" width="0.4946%" height="15" fill="rgb(209,38,44)" fg:x="290" fg:w="20"/><text x="7.4211%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:354) (8 samples, 0.20%)</title><rect x="7.4679%" y="228" width="0.1978%" height="15" fill="rgb(236,212,23)" fg:x="302" fg:w="8"/><text x="7.7179%" y="238.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:395) (7 samples, 0.17%)</title><rect x="7.9130%" y="244" width="0.1731%" height="15" fill="rgb(242,79,21)" fg:x="320" fg:w="7"/><text x="8.1630%" y="254.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (7 samples, 0.17%)</title><rect x="7.9130%" y="260" width="0.1731%" height="15" fill="rgb(211,96,35)" fg:x="320" fg:w="7"/><text x="8.1630%" y="270.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (10 samples, 0.25%)</title><rect x="7.9130%" y="228" width="0.2473%" height="15" fill="rgb(253,215,40)" fg:x="320" fg:w="10"/><text x="8.1630%" y="238.50"></text></g><g><title>expression (qasm3Parser.py:4393) (17 samples, 0.42%)</title><rect x="7.7646%" y="212" width="0.4204%" height="15" fill="rgb(211,81,21)" fg:x="314" fg:w="17"/><text x="8.0146%" y="222.50"></text></g><g><title>expression (qasm3Parser.py:4401) (11 samples, 0.27%)</title><rect x="8.2591%" y="212" width="0.2720%" height="15" fill="rgb(208,190,38)" fg:x="334" fg:w="11"/><text x="8.5091%" y="222.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (10 samples, 0.25%)</title><rect x="8.2839%" y="228" width="0.2473%" height="15" fill="rgb(235,213,38)" fg:x="335" fg:w="10"/><text x="8.5339%" y="238.50"></text></g><g><title>expression (qasm3Parser.py:4416) (7 samples, 0.17%)</title><rect x="8.5312%" y="212" width="0.1731%" height="15" fill="rgb(237,122,38)" fg:x="345" fg:w="7"/><text x="8.7812%" y="222.50"></text></g><g><title>expression (qasm3Parser.py:4429) (7 samples, 0.17%)</title><rect x="8.8526%" y="212" width="0.1731%" height="15" fill="rgb(244,218,35)" fg:x="358" fg:w="7"/><text x="9.1026%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:354) (5 samples, 0.12%)</title><rect x="8.9021%" y="228" width="0.1236%" height="15" fill="rgb(240,68,47)" fg:x="360" fg:w="5"/><text x="9.1521%" y="238.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (5 samples, 0.12%)</title><rect x="8.9021%" y="244" width="0.1236%" height="15" fill="rgb(210,16,53)" fg:x="360" fg:w="5"/><text x="9.1521%" y="254.50"></text></g><g><title>expression (qasm3Parser.py:4386) (6 samples, 0.15%)</title><rect x="9.1988%" y="228" width="0.1484%" height="15" fill="rgb(235,124,12)" fg:x="372" fg:w="6"/><text x="9.4488%" y="238.50"></text></g><g><title>expression (qasm3Parser.py:4431) (22 samples, 0.54%)</title><rect x="9.0257%" y="212" width="0.5440%" height="15" fill="rgb(224,169,11)" fg:x="365" fg:w="22"/><text x="9.2757%" y="222.50"></text></g><g><title>expression (qasm3Parser.py:4578) (5 samples, 0.12%)</title><rect x="9.4461%" y="228" width="0.1236%" height="15" fill="rgb(250,166,2)" fg:x="382" fg:w="5"/><text x="9.6961%" y="238.50"></text></g><g><title>unrollRecursionContexts (antlr4/Parser.py:436) (5 samples, 0.12%)</title><rect x="9.4461%" y="244" width="0.1236%" height="15" fill="rgb(242,216,29)" fg:x="382" fg:w="5"/><text x="9.6961%" y="254.50"></text></g><g><title>expression (qasm3Parser.py:4571) (8 samples, 0.20%)</title><rect x="9.5697%" y="212" width="0.1978%" height="15" fill="rgb(230,116,27)" fg:x="387" fg:w="8"/><text x="9.8197%" y="222.50"></text></g><g><title>expressionList (qasm3Parser.py:6667) (164 samples, 4.06%)</title><rect x="5.8605%" y="196" width="4.0554%" height="15" fill="rgb(228,99,48)" fg:x="237" fg:w="164"/><text x="6.1105%" y="206.50">expr..</text></g><g><title>expression (qasm3Parser.py:4578) (6 samples, 0.15%)</title><rect x="9.7676%" y="212" width="0.1484%" height="15" fill="rgb(253,11,6)" fg:x="395" fg:w="6"/><text x="10.0176%" y="222.50"></text></g><g><title>expressionList (qasm3Parser.py:6670) (7 samples, 0.17%)</title><rect x="9.9654%" y="196" width="0.1731%" height="15" fill="rgb(247,143,39)" fg:x="403" fg:w="7"/><text x="10.2154%" y="206.50"></text></g><g><title>exitRule (antlr4/Parser.py:381) (5 samples, 0.12%)</title><rect x="10.1879%" y="212" width="0.1236%" height="15" fill="rgb(236,97,10)" fg:x="412" fg:w="5"/><text x="10.4379%" y="222.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2397) (201 samples, 4.97%)</title><rect x="5.4402%" y="180" width="4.9703%" height="15" fill="rgb(233,208,19)" fg:x="220" fg:w="201"/><text x="5.6902%" y="190.50">gateCa..</text></g><g><title>expressionList (qasm3Parser.py:6694) (9 samples, 0.22%)</title><rect x="10.1879%" y="196" width="0.2226%" height="15" fill="rgb(216,164,2)" fg:x="412" fg:w="9"/><text x="10.4379%" y="206.50"></text></g><g><title>consume (antlr4/Parser.py:348) (5 samples, 0.12%)</title><rect x="10.5094%" y="212" width="0.1236%" height="15" fill="rgb(220,129,5)" fg:x="425" fg:w="5"/><text x="10.7594%" y="222.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (6 samples, 0.15%)</title><rect x="10.6578%" y="228" width="0.1484%" height="15" fill="rgb(242,17,10)" fg:x="431" fg:w="6"/><text x="10.9078%" y="238.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2401) (19 samples, 0.47%)</title><rect x="10.4105%" y="180" width="0.4698%" height="15" fill="rgb(242,107,0)" fg:x="421" fg:w="19"/><text x="10.6605%" y="190.50"></text></g><g><title>match (antlr4/Parser.py:124) (17 samples, 0.42%)</title><rect x="10.4599%" y="196" width="0.4204%" height="15" fill="rgb(251,28,31)" fg:x="423" fg:w="17"/><text x="10.7099%" y="206.50"></text></g><g><title>consume (antlr4/Parser.py:354) (9 samples, 0.22%)</title><rect x="10.6578%" y="212" width="0.2226%" height="15" fill="rgb(233,223,10)" fg:x="431" fg:w="9"/><text x="10.9078%" y="222.50"></text></g><g><title>__init__ (qasm3Parser.py:6779) (36 samples, 0.89%)</title><rect x="11.2265%" y="212" width="0.8902%" height="15" fill="rgb(215,21,27)" fg:x="454" fg:w="36"/><text x="11.4765%" y="222.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6818) (43 samples, 1.06%)</title><rect x="11.1771%" y="196" width="1.0633%" height="15" fill="rgb(232,23,21)" fg:x="452" fg:w="43"/><text x="11.4271%" y="206.50"></text></g><g><title>__init__ (qasm3Parser.py:6780) (5 samples, 0.12%)</title><rect x="12.1167%" y="212" width="0.1236%" height="15" fill="rgb(244,5,23)" fg:x="490" fg:w="5"/><text x="12.3667%" y="222.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6819) (8 samples, 0.20%)</title><rect x="12.2404%" y="196" width="0.1978%" height="15" fill="rgb(226,81,46)" fg:x="495" fg:w="8"/><text x="12.4904%" y="206.50"></text></g><g><title>__init__ (qasm3Parser.py:6121) (9 samples, 0.22%)</title><rect x="12.6607%" y="228" width="0.2226%" height="15" fill="rgb(247,70,30)" fg:x="512" fg:w="9"/><text x="12.9107%" y="238.50"></text></g><g><title>gateOperand (qasm3Parser.py:6154) (19 samples, 0.47%)</title><rect x="12.5865%" y="212" width="0.4698%" height="15" fill="rgb(212,68,19)" fg:x="509" fg:w="19"/><text x="12.8365%" y="222.50"></text></g><g><title>__init__ (qasm3Parser.py:6122) (7 samples, 0.17%)</title><rect x="12.8833%" y="228" width="0.1731%" height="15" fill="rgb(240,187,13)" fg:x="521" fg:w="7"/><text x="13.1333%" y="238.50"></text></g><g><title>gateOperand (qasm3Parser.py:6155) (12 samples, 0.30%)</title><rect x="13.0564%" y="212" width="0.2967%" height="15" fill="rgb(223,113,26)" fg:x="528" fg:w="12"/><text x="13.3064%" y="222.50"></text></g><g><title>enterRule (antlr4/Parser.py:376) (5 samples, 0.12%)</title><rect x="13.2295%" y="228" width="0.1236%" height="15" fill="rgb(206,192,2)" fg:x="535" fg:w="5"/><text x="13.4795%" y="238.50"></text></g><g><title>addContextToParseTree (antlr4/Parser.py:366) (5 samples, 0.12%)</title><rect x="13.2295%" y="244" width="0.1236%" height="15" fill="rgb(241,108,4)" fg:x="535" fg:w="5"/><text x="13.4795%" y="254.50"></text></g><g><title>gateOperand (qasm3Parser.py:6157) (51 samples, 1.26%)</title><rect x="13.3531%" y="212" width="1.2611%" height="15" fill="rgb(247,173,49)" fg:x="540" fg:w="51"/><text x="13.6031%" y="222.50"></text></g><g><title>state (antlr4/Recognizer.py:143) (50 samples, 1.24%)</title><rect x="13.3778%" y="228" width="1.2364%" height="15" fill="rgb(224,114,35)" fg:x="541" fg:w="50"/><text x="13.6278%" y="238.50"></text></g><g><title>__init__ (qasm3Parser.py:5217) (6 samples, 0.15%)</title><rect x="14.9357%" y="244" width="0.1484%" height="15" fill="rgb(245,159,27)" fg:x="604" fg:w="6"/><text x="15.1857%" y="254.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5253) (16 samples, 0.40%)</title><rect x="14.8615%" y="228" width="0.3956%" height="15" fill="rgb(245,172,44)" fg:x="601" fg:w="16"/><text x="15.1115%" y="238.50"></text></g><g><title>__init__ (qasm3Parser.py:5218) (7 samples, 0.17%)</title><rect x="15.0841%" y="244" width="0.1731%" height="15" fill="rgb(236,23,11)" fg:x="610" fg:w="7"/><text x="15.3341%" y="254.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5254) (6 samples, 0.15%)</title><rect x="15.2572%" y="228" width="0.1484%" height="15" fill="rgb(205,117,38)" fg:x="617" fg:w="6"/><text x="15.5072%" y="238.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5257) (6 samples, 0.15%)</title><rect x="15.4055%" y="228" width="0.1484%" height="15" fill="rgb(237,72,25)" fg:x="623" fg:w="6"/><text x="15.6555%" y="238.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (6 samples, 0.15%)</title><rect x="16.0979%" y="356" width="0.1484%" height="15" fill="rgb(244,70,9)" fg:x="651" fg:w="6"/><text x="16.3479%" y="366.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (22 samples, 0.54%)</title><rect x="15.9743%" y="340" width="0.5440%" height="15" fill="rgb(217,125,39)" fg:x="646" fg:w="22"/><text x="16.2243%" y="350.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (30 samples, 0.74%)</title><rect x="15.9248%" y="324" width="0.7418%" height="15" fill="rgb(235,36,10)" fg:x="644" fg:w="30"/><text x="16.1748%" y="334.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (7 samples, 0.17%)</title><rect x="16.8892%" y="356" width="0.1731%" height="15" fill="rgb(251,123,47)" fg:x="683" fg:w="7"/><text x="17.1392%" y="366.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (11 samples, 0.27%)</title><rect x="16.8645%" y="340" width="0.2720%" height="15" fill="rgb(221,13,13)" fg:x="682" fg:w="11"/><text x="17.1145%" y="350.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (12 samples, 0.30%)</title><rect x="16.8645%" y="324" width="0.2967%" height="15" fill="rgb(238,131,9)" fg:x="682" fg:w="12"/><text x="17.1145%" y="334.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (61 samples, 1.51%)</title><rect x="15.8012%" y="276" width="1.5084%" height="15" fill="rgb(211,50,8)" fg:x="639" fg:w="61"/><text x="16.0512%" y="286.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (58 samples, 1.43%)</title><rect x="15.8754%" y="292" width="1.4342%" height="15" fill="rgb(245,182,24)" fg:x="642" fg:w="58"/><text x="16.1254%" y="302.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (58 samples, 1.43%)</title><rect x="15.8754%" y="308" width="1.4342%" height="15" fill="rgb(242,14,37)" fg:x="642" fg:w="58"/><text x="16.1254%" y="318.50"></text></g><g><title>nextToken (antlr4/Lexer.py:158) (6 samples, 0.15%)</title><rect x="17.1612%" y="324" width="0.1484%" height="15" fill="rgb(246,228,12)" fg:x="694" fg:w="6"/><text x="17.4112%" y="334.50"></text></g><g><title>consume (antlr4/Parser.py:348) (66 samples, 1.63%)</title><rect x="15.7765%" y="260" width="1.6320%" height="15" fill="rgb(213,55,15)" fg:x="638" fg:w="66"/><text x="16.0265%" y="270.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:85) (6 samples, 0.15%)</title><rect x="17.4827%" y="292" width="0.1484%" height="15" fill="rgb(209,9,3)" fg:x="707" fg:w="6"/><text x="17.7327%" y="302.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:86) (6 samples, 0.15%)</title><rect x="17.6311%" y="292" width="0.1484%" height="15" fill="rgb(230,59,30)" fg:x="713" fg:w="6"/><text x="17.8811%" y="302.50"></text></g><g><title>__setattr__ (antlr4/tree/Tree.py:89) (6 samples, 0.15%)</title><rect x="17.6311%" y="308" width="0.1484%" height="15" fill="rgb(209,121,21)" fg:x="713" fg:w="6"/><text x="17.8811%" y="318.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (13 samples, 0.32%)</title><rect x="17.4827%" y="276" width="0.3215%" height="15" fill="rgb(220,109,13)" fg:x="707" fg:w="13"/><text x="17.7327%" y="286.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5259) (95 samples, 2.35%)</title><rect x="15.5539%" y="228" width="2.3492%" height="15" fill="rgb(232,18,1)" fg:x="629" fg:w="95"/><text x="15.8039%" y="238.50">i..</text></g><g><title>match (antlr4/Parser.py:124) (90 samples, 2.23%)</title><rect x="15.6775%" y="244" width="2.2255%" height="15" fill="rgb(215,41,42)" fg:x="634" fg:w="90"/><text x="15.9275%" y="254.50">m..</text></g><g><title>consume (antlr4/Parser.py:354) (18 samples, 0.45%)</title><rect x="17.4580%" y="260" width="0.4451%" height="15" fill="rgb(224,123,36)" fg:x="706" fg:w="18"/><text x="17.7080%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5137) (8 samples, 0.20%)</title><rect x="18.0514%" y="244" width="0.1978%" height="15" fill="rgb(240,125,3)" fg:x="730" fg:w="8"/><text x="18.3014%" y="254.50"></text></g><g><title>indexOperator (qasm3Parser.py:5138) (8 samples, 0.20%)</title><rect x="18.2493%" y="244" width="0.1978%" height="15" fill="rgb(205,98,50)" fg:x="738" fg:w="8"/><text x="18.4993%" y="254.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:170) (11 samples, 0.27%)</title><rect x="18.9664%" y="372" width="0.2720%" height="15" fill="rgb(205,185,37)" fg:x="767" fg:w="11"/><text x="19.2164%" y="382.50"></text></g><g><title>getExistingTargetState (antlr4/atn/LexerATNSimulator.py:210) (5 samples, 0.12%)</title><rect x="19.1147%" y="388" width="0.1236%" height="15" fill="rgb(238,207,15)" fg:x="773" fg:w="5"/><text x="19.3647%" y="398.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (10 samples, 0.25%)</title><rect x="19.2878%" y="372" width="0.2473%" height="15" fill="rgb(213,199,42)" fg:x="780" fg:w="10"/><text x="19.5378%" y="382.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:553) (5 samples, 0.12%)</title><rect x="19.5351%" y="388" width="0.1236%" height="15" fill="rgb(235,201,11)" fg:x="790" fg:w="5"/><text x="19.7851%" y="398.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (11 samples, 0.27%)</title><rect x="19.5351%" y="372" width="0.2720%" height="15" fill="rgb(207,46,11)" fg:x="790" fg:w="11"/><text x="19.7851%" y="382.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:559) (5 samples, 0.12%)</title><rect x="19.6835%" y="388" width="0.1236%" height="15" fill="rgb(241,35,35)" fg:x="796" fg:w="5"/><text x="19.9335%" y="398.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:187) (8 samples, 0.20%)</title><rect x="19.8071%" y="372" width="0.1978%" height="15" fill="rgb(243,32,47)" fg:x="801" fg:w="8"/><text x="20.0571%" y="382.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:191) (6 samples, 0.15%)</title><rect x="20.0049%" y="372" width="0.1484%" height="15" fill="rgb(247,202,23)" fg:x="809" fg:w="6"/><text x="20.2549%" y="382.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (58 samples, 1.43%)</title><rect x="18.8427%" y="356" width="1.4342%" height="15" fill="rgb(219,102,11)" fg:x="762" fg:w="58"/><text x="19.0927%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (62 samples, 1.53%)</title><rect x="18.8180%" y="340" width="1.5331%" height="15" fill="rgb(243,110,44)" fg:x="761" fg:w="62"/><text x="19.0680%" y="350.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (5 samples, 0.12%)</title><rect x="20.5242%" y="356" width="0.1236%" height="15" fill="rgb(222,74,54)" fg:x="830" fg:w="5"/><text x="20.7742%" y="366.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (5 samples, 0.12%)</title><rect x="20.5242%" y="372" width="0.1236%" height="15" fill="rgb(216,99,12)" fg:x="830" fg:w="5"/><text x="20.7742%" y="382.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (6 samples, 0.15%)</title><rect x="20.5242%" y="340" width="0.1484%" height="15" fill="rgb(226,22,26)" fg:x="830" fg:w="6"/><text x="20.7742%" y="350.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (81 samples, 2.00%)</title><rect x="18.7191%" y="292" width="2.0030%" height="15" fill="rgb(217,163,10)" fg:x="757" fg:w="81"/><text x="18.9691%" y="302.50">c..</text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (80 samples, 1.98%)</title><rect x="18.7438%" y="308" width="1.9782%" height="15" fill="rgb(213,25,53)" fg:x="758" fg:w="80"/><text x="18.9938%" y="318.50">s..</text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (80 samples, 1.98%)</title><rect x="18.7438%" y="324" width="1.9782%" height="15" fill="rgb(252,105,26)" fg:x="758" fg:w="80"/><text x="18.9938%" y="334.50">f..</text></g><g><title>consume (antlr4/Parser.py:348) (89 samples, 2.20%)</title><rect x="18.6944%" y="276" width="2.2008%" height="15" fill="rgb(220,39,43)" fg:x="756" fg:w="89"/><text x="18.9444%" y="286.50">c..</text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (7 samples, 0.17%)</title><rect x="20.8952%" y="292" width="0.1731%" height="15" fill="rgb(229,68,48)" fg:x="845" fg:w="7"/><text x="21.1452%" y="302.50"></text></g><g><title>indexOperator (qasm3Parser.py:5143) (107 samples, 2.65%)</title><rect x="18.5460%" y="244" width="2.6459%" height="15" fill="rgb(252,8,32)" fg:x="750" fg:w="107"/><text x="18.7960%" y="254.50">in..</text></g><g><title>match (antlr4/Parser.py:124) (102 samples, 2.52%)</title><rect x="18.6696%" y="260" width="2.5223%" height="15" fill="rgb(223,20,43)" fg:x="755" fg:w="102"/><text x="18.9196%" y="270.50">ma..</text></g><g><title>consume (antlr4/Parser.py:354) (12 samples, 0.30%)</title><rect x="20.8952%" y="276" width="0.2967%" height="15" fill="rgb(229,81,49)" fg:x="845" fg:w="12"/><text x="21.1452%" y="286.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:398) (5 samples, 0.12%)</title><rect x="21.6864%" y="276" width="0.1236%" height="15" fill="rgb(236,28,36)" fg:x="877" fg:w="5"/><text x="21.9364%" y="286.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (5 samples, 0.12%)</title><rect x="22.3294%" y="372" width="0.1236%" height="15" fill="rgb(249,185,26)" fg:x="903" fg:w="5"/><text x="22.5794%" y="382.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (24 samples, 0.59%)</title><rect x="22.1316%" y="356" width="0.5935%" height="15" fill="rgb(249,174,33)" fg:x="895" fg:w="24"/><text x="22.3816%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (29 samples, 0.72%)</title><rect x="22.0821%" y="340" width="0.7171%" height="15" fill="rgb(233,201,37)" fg:x="893" fg:w="29"/><text x="22.3321%" y="350.50"></text></g><g><title>__init__ (antlr4/Token.py:76) (140 samples, 3.46%)</title><rect x="22.8981%" y="388" width="3.4619%" height="15" fill="rgb(221,78,26)" fg:x="926" fg:w="140"/><text x="23.1481%" y="398.50">__i..</text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (143 samples, 3.54%)</title><rect x="22.8981%" y="372" width="3.5361%" height="15" fill="rgb(250,127,30)" fg:x="926" fg:w="143"/><text x="23.1481%" y="382.50">cre..</text></g><g><title>emit (antlr4/Lexer.py:222) (145 samples, 3.59%)</title><rect x="22.8734%" y="356" width="3.5856%" height="15" fill="rgb(230,49,44)" fg:x="925" fg:w="145"/><text x="23.1234%" y="366.50">emit..</text></g><g><title>nextToken (antlr4/Lexer.py:153) (149 samples, 3.68%)</title><rect x="22.8239%" y="340" width="3.6845%" height="15" fill="rgb(229,67,23)" fg:x="923" fg:w="149"/><text x="23.0739%" y="350.50">next..</text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (184 samples, 4.55%)</title><rect x="21.9832%" y="324" width="4.5500%" height="15" fill="rgb(249,83,47)" fg:x="889" fg:w="184"/><text x="22.2332%" y="334.50">fetch..</text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (192 samples, 4.75%)</title><rect x="21.8348%" y="292" width="4.7478%" height="15" fill="rgb(215,43,3)" fg:x="883" fg:w="192"/><text x="22.0848%" y="302.50">consum..</text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (190 samples, 4.70%)</title><rect x="21.8843%" y="308" width="4.6983%" height="15" fill="rgb(238,154,13)" fg:x="885" fg:w="190"/><text x="22.1343%" y="318.50">sync ..</text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:467) (197 samples, 4.87%)</title><rect x="21.8348%" y="276" width="4.8714%" height="15" fill="rgb(219,56,2)" fg:x="883" fg:w="197"/><text x="22.0848%" y="286.50">execAT..</text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (213 samples, 5.27%)</title><rect x="21.5628%" y="260" width="5.2671%" height="15" fill="rgb(233,0,4)" fg:x="872" fg:w="213"/><text x="21.8128%" y="270.50">adapti..</text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:468) (5 samples, 0.12%)</title><rect x="26.7062%" y="276" width="0.1236%" height="15" fill="rgb(235,30,7)" fg:x="1080" fg:w="5"/><text x="26.9562%" y="286.50"></text></g><g><title>indexOperator (qasm3Parser.py:5154) (221 samples, 5.46%)</title><rect x="21.4886%" y="244" width="5.4649%" height="15" fill="rgb(250,79,13)" fg:x="869" fg:w="221"/><text x="21.7386%" y="254.50">indexOp..</text></g><g><title>expression (qasm3Parser.py:4277) (8 samples, 0.20%)</title><rect x="27.0524%" y="260" width="0.1978%" height="15" fill="rgb(211,146,34)" fg:x="1094" fg:w="8"/><text x="27.3024%" y="270.50"></text></g><g><title>__init__ (qasm3Parser.py:3684) (7 samples, 0.17%)</title><rect x="27.0772%" y="276" width="0.1731%" height="15" fill="rgb(228,22,38)" fg:x="1095" fg:w="7"/><text x="27.3272%" y="286.50"></text></g><g><title>expression (qasm3Parser.py:4280) (5 samples, 0.12%)</title><rect x="27.2502%" y="260" width="0.1236%" height="15" fill="rgb(235,168,5)" fg:x="1102" fg:w="5"/><text x="27.5002%" y="270.50"></text></g><g><title>expression (qasm3Parser.py:4283) (6 samples, 0.15%)</title><rect x="27.3986%" y="260" width="0.1484%" height="15" fill="rgb(221,155,16)" fg:x="1108" fg:w="6"/><text x="27.6486%" y="270.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:395) (6 samples, 0.15%)</title><rect x="27.6954%" y="292" width="0.1484%" height="15" fill="rgb(215,215,53)" fg:x="1120" fg:w="6"/><text x="27.9454%" y="302.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (6 samples, 0.15%)</title><rect x="27.6954%" y="308" width="0.1484%" height="15" fill="rgb(223,4,10)" fg:x="1120" fg:w="6"/><text x="27.9454%" y="318.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (10 samples, 0.25%)</title><rect x="27.6459%" y="276" width="0.2473%" height="15" fill="rgb(234,103,6)" fg:x="1118" fg:w="10"/><text x="27.8959%" y="286.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (6 samples, 0.15%)</title><rect x="27.8932%" y="276" width="0.1484%" height="15" fill="rgb(227,97,0)" fg:x="1128" fg:w="6"/><text x="28.1432%" y="286.50"></text></g><g><title>seek (antlr4/BufferedTokenStream.py:77) (6 samples, 0.15%)</title><rect x="27.8932%" y="292" width="0.1484%" height="15" fill="rgb(234,150,53)" fg:x="1128" fg:w="6"/><text x="28.1432%" y="302.50"></text></g><g><title>expression (qasm3Parser.py:4286) (20 samples, 0.49%)</title><rect x="27.5717%" y="260" width="0.4946%" height="15" fill="rgb(228,201,54)" fg:x="1115" fg:w="20"/><text x="27.8217%" y="270.50"></text></g><g><title>__init__ (qasm3Parser.py:4232) (8 samples, 0.20%)</title><rect x="28.2394%" y="276" width="0.1978%" height="15" fill="rgb(222,22,37)" fg:x="1142" fg:w="8"/><text x="28.4894%" y="286.50"></text></g><g><title>__init__ (qasm3Parser.py:3684) (5 samples, 0.12%)</title><rect x="28.3136%" y="292" width="0.1236%" height="15" fill="rgb(237,53,32)" fg:x="1145" fg:w="5"/><text x="28.5636%" y="302.50"></text></g><g><title>expression (qasm3Parser.py:4377) (15 samples, 0.37%)</title><rect x="28.1405%" y="260" width="0.3709%" height="15" fill="rgb(233,25,53)" fg:x="1138" fg:w="15"/><text x="28.3905%" y="270.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:101) (8 samples, 0.20%)</title><rect x="28.7587%" y="292" width="0.1978%" height="15" fill="rgb(210,40,34)" fg:x="1163" fg:w="8"/><text x="29.0087%" y="302.50"></text></g><g><title>adjustSeekIndex (antlr4/CommonTokenStream.py:45) (8 samples, 0.20%)</title><rect x="28.7587%" y="308" width="0.1978%" height="15" fill="rgb(241,220,44)" fg:x="1163" fg:w="8"/><text x="29.0087%" y="318.50"></text></g><g><title>consume (antlr4/Parser.py:348) (13 samples, 0.32%)</title><rect x="28.7339%" y="276" width="0.3215%" height="15" fill="rgb(235,28,35)" fg:x="1162" fg:w="13"/><text x="28.9839%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (6 samples, 0.15%)</title><rect x="29.1296%" y="292" width="0.1484%" height="15" fill="rgb(210,56,17)" fg:x="1178" fg:w="6"/><text x="29.3796%" y="302.50"></text></g><g><title>__setattr__ (antlr4/tree/Tree.py:88) (6 samples, 0.15%)</title><rect x="29.3274%" y="308" width="0.1484%" height="15" fill="rgb(224,130,29)" fg:x="1186" fg:w="6"/><text x="29.5774%" y="318.50"></text></g><g><title>expression (qasm3Parser.py:4386) (35 samples, 0.87%)</title><rect x="28.6597%" y="260" width="0.8655%" height="15" fill="rgb(235,212,8)" fg:x="1159" fg:w="35"/><text x="28.9097%" y="270.50"></text></g><g><title>consume (antlr4/Parser.py:354) (18 samples, 0.45%)</title><rect x="29.0801%" y="276" width="0.4451%" height="15" fill="rgb(223,33,50)" fg:x="1176" fg:w="18"/><text x="29.3301%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:105) (8 samples, 0.20%)</title><rect x="29.3274%" y="292" width="0.1978%" height="15" fill="rgb(219,149,13)" fg:x="1186" fg:w="8"/><text x="29.5774%" y="302.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:315) (7 samples, 0.17%)</title><rect x="29.7478%" y="276" width="0.1731%" height="15" fill="rgb(250,156,29)" fg:x="1203" fg:w="7"/><text x="29.9978%" y="286.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (6 samples, 0.15%)</title><rect x="29.9209%" y="276" width="0.1484%" height="15" fill="rgb(216,193,19)" fg:x="1210" fg:w="6"/><text x="30.1709%" y="286.50"></text></g><g><title>expression (qasm3Parser.py:4393) (19 samples, 0.47%)</title><rect x="29.6736%" y="260" width="0.4698%" height="15" fill="rgb(216,135,14)" fg:x="1200" fg:w="19"/><text x="29.9236%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5157) (136 samples, 3.36%)</title><rect x="27.0030%" y="244" width="3.3630%" height="15" fill="rgb(241,47,5)" fg:x="1092" fg:w="136"/><text x="27.2530%" y="254.50">ind..</text></g><g><title>expression (qasm3Parser.py:4578) (9 samples, 0.22%)</title><rect x="30.1434%" y="260" width="0.2226%" height="15" fill="rgb(233,42,35)" fg:x="1219" fg:w="9"/><text x="30.3934%" y="270.50"></text></g><g><title>unrollRecursionContexts (antlr4/Parser.py:436) (9 samples, 0.22%)</title><rect x="30.1434%" y="276" width="0.2226%" height="15" fill="rgb(231,13,6)" fg:x="1219" fg:w="9"/><text x="30.3934%" y="286.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (5 samples, 0.12%)</title><rect x="30.2423%" y="292" width="0.1236%" height="15" fill="rgb(207,181,40)" fg:x="1223" fg:w="5"/><text x="30.4923%" y="302.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (9 samples, 0.22%)</title><rect x="30.4896%" y="260" width="0.2226%" height="15" fill="rgb(254,173,49)" fg:x="1233" fg:w="9"/><text x="30.7396%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5168) (15 samples, 0.37%)</title><rect x="30.4649%" y="244" width="0.3709%" height="15" fill="rgb(221,1,38)" fg:x="1232" fg:w="15"/><text x="30.7149%" y="254.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (5 samples, 0.12%)</title><rect x="30.7122%" y="260" width="0.1236%" height="15" fill="rgb(206,124,46)" fg:x="1242" fg:w="5"/><text x="30.9622%" y="270.50"></text></g><g><title>match (antlr4/Parser.py:121) (8 samples, 0.20%)</title><rect x="30.9594%" y="260" width="0.1978%" height="15" fill="rgb(249,21,11)" fg:x="1252" fg:w="8"/><text x="31.2094%" y="270.50"></text></g><g><title>getCurrentToken (antlr4/Parser.py:313) (7 samples, 0.17%)</title><rect x="30.9842%" y="276" width="0.1731%" height="15" fill="rgb(222,201,40)" fg:x="1253" fg:w="7"/><text x="31.2342%" y="286.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (25 samples, 0.62%)</title><rect x="31.5529%" y="356" width="0.6182%" height="15" fill="rgb(235,61,29)" fg:x="1276" fg:w="25"/><text x="31.8029%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (28 samples, 0.69%)</title><rect x="31.5529%" y="340" width="0.6924%" height="15" fill="rgb(219,207,3)" fg:x="1276" fg:w="28"/><text x="31.8029%" y="350.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (7 samples, 0.17%)</title><rect x="32.3442%" y="340" width="0.1731%" height="15" fill="rgb(222,56,46)" fg:x="1308" fg:w="7"/><text x="32.5942%" y="350.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (6 samples, 0.15%)</title><rect x="32.3689%" y="356" width="0.1484%" height="15" fill="rgb(239,76,54)" fg:x="1309" fg:w="6"/><text x="32.6189%" y="366.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (47 samples, 1.16%)</title><rect x="31.3798%" y="292" width="1.1622%" height="15" fill="rgb(231,124,27)" fg:x="1269" fg:w="47"/><text x="31.6298%" y="302.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (45 samples, 1.11%)</title><rect x="31.4293%" y="308" width="1.1128%" height="15" fill="rgb(249,195,6)" fg:x="1271" fg:w="45"/><text x="31.6793%" y="318.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (44 samples, 1.09%)</title><rect x="31.4540%" y="324" width="1.0880%" height="15" fill="rgb(237,174,47)" fg:x="1272" fg:w="44"/><text x="31.7040%" y="334.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:101) (8 samples, 0.20%)</title><rect x="32.5420%" y="292" width="0.1978%" height="15" fill="rgb(206,201,31)" fg:x="1316" fg:w="8"/><text x="32.7920%" y="302.50"></text></g><g><title>adjustSeekIndex (antlr4/CommonTokenStream.py:45) (6 samples, 0.15%)</title><rect x="32.5915%" y="308" width="0.1484%" height="15" fill="rgb(231,57,52)" fg:x="1318" fg:w="6"/><text x="32.8415%" y="318.50"></text></g><g><title>consume (antlr4/Parser.py:348) (59 samples, 1.46%)</title><rect x="31.3304%" y="276" width="1.4590%" height="15" fill="rgb(248,177,22)" fg:x="1267" fg:w="59"/><text x="31.5804%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (7 samples, 0.17%)</title><rect x="32.8635%" y="292" width="0.1731%" height="15" fill="rgb(215,211,37)" fg:x="1329" fg:w="7"/><text x="33.1135%" y="302.50"></text></g><g><title>indexOperator (qasm3Parser.py:5204) (92 samples, 2.27%)</title><rect x="30.9100%" y="244" width="2.2750%" height="15" fill="rgb(241,128,51)" fg:x="1250" fg:w="92"/><text x="31.1600%" y="254.50">i..</text></g><g><title>match (antlr4/Parser.py:124) (80 samples, 1.98%)</title><rect x="31.2067%" y="260" width="1.9782%" height="15" fill="rgb(227,165,31)" fg:x="1262" fg:w="80"/><text x="31.4567%" y="270.50">m..</text></g><g><title>consume (antlr4/Parser.py:354) (14 samples, 0.35%)</title><rect x="32.8388%" y="276" width="0.3462%" height="15" fill="rgb(228,167,24)" fg:x="1328" fg:w="14"/><text x="33.0888%" y="286.50"></text></g><g><title>exitRule (antlr4/Parser.py:381) (7 samples, 0.17%)</title><rect x="33.1850%" y="260" width="0.1731%" height="15" fill="rgb(228,143,12)" fg:x="1342" fg:w="7"/><text x="33.4350%" y="270.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (5 samples, 0.12%)</title><rect x="33.2344%" y="276" width="0.1236%" height="15" fill="rgb(249,149,8)" fg:x="1344" fg:w="5"/><text x="33.4844%" y="286.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5265) (622 samples, 15.38%)</title><rect x="18.0020%" y="228" width="15.3808%" height="15" fill="rgb(243,35,44)" fg:x="728" fg:w="622"/><text x="18.2520%" y="238.50">indexedIdentifier (qasm3..</text></g><g><title>indexOperator (qasm3Parser.py:5210) (8 samples, 0.20%)</title><rect x="33.1850%" y="244" width="0.1978%" height="15" fill="rgb(246,89,9)" fg:x="1342" fg:w="8"/><text x="33.4350%" y="254.50"></text></g><g><title>exitRule (antlr4/Parser.py:381) (5 samples, 0.12%)</title><rect x="33.4817%" y="244" width="0.1236%" height="15" fill="rgb(233,213,13)" fg:x="1354" fg:w="5"/><text x="33.7317%" y="254.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (5 samples, 0.12%)</title><rect x="33.4817%" y="260" width="0.1236%" height="15" fill="rgb(233,141,41)" fg:x="1354" fg:w="5"/><text x="33.7317%" y="270.50"></text></g><g><title>gateOperand (qasm3Parser.py:6163) (761 samples, 18.82%)</title><rect x="14.8368%" y="212" width="18.8180%" height="15" fill="rgb(239,167,4)" fg:x="600" fg:w="761"/><text x="15.0868%" y="222.50">gateOperand (qasm3Parser.py:6..</text></g><g><title>indexedIdentifier (qasm3Parser.py:5275) (7 samples, 0.17%)</title><rect x="33.4817%" y="228" width="0.1731%" height="15" fill="rgb(209,217,16)" fg:x="1354" fg:w="7"/><text x="33.7317%" y="238.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6824) (862 samples, 21.32%)</title><rect x="12.5865%" y="196" width="21.3155%" height="15" fill="rgb(219,88,35)" fg:x="509" fg:w="862"/><text x="12.8365%" y="206.50">gateOperandList (qasm3Parser.py:68..</text></g><g><title>gateOperand (qasm3Parser.py:6178) (10 samples, 0.25%)</title><rect x="33.6548%" y="212" width="0.2473%" height="15" fill="rgb(220,193,23)" fg:x="1361" fg:w="10"/><text x="33.9048%" y="222.50"></text></g><g><title>exitRule (antlr4/Parser.py:381) (8 samples, 0.20%)</title><rect x="33.7043%" y="228" width="0.1978%" height="15" fill="rgb(230,90,52)" fg:x="1363" fg:w="8"/><text x="33.9543%" y="238.50"></text></g><g><title>LT (antlr4/CommonTokenStream.py:66) (5 samples, 0.12%)</title><rect x="33.7784%" y="244" width="0.1236%" height="15" fill="rgb(252,106,19)" fg:x="1366" fg:w="5"/><text x="34.0284%" y="254.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:398) (5 samples, 0.12%)</title><rect x="34.1246%" y="228" width="0.1236%" height="15" fill="rgb(206,74,20)" fg:x="1380" fg:w="5"/><text x="34.3746%" y="238.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (8 samples, 0.20%)</title><rect x="34.4461%" y="308" width="0.1978%" height="15" fill="rgb(230,138,44)" fg:x="1393" fg:w="8"/><text x="34.6961%" y="318.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (11 samples, 0.27%)</title><rect x="34.4214%" y="292" width="0.2720%" height="15" fill="rgb(235,182,43)" fg:x="1392" fg:w="11"/><text x="34.6714%" y="302.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (8 samples, 0.20%)</title><rect x="34.6934%" y="308" width="0.1978%" height="15" fill="rgb(242,16,51)" fg:x="1403" fg:w="8"/><text x="34.9434%" y="318.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (7 samples, 0.17%)</title><rect x="34.7181%" y="324" width="0.1731%" height="15" fill="rgb(248,9,4)" fg:x="1404" fg:w="7"/><text x="34.9681%" y="334.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (11 samples, 0.27%)</title><rect x="34.6934%" y="292" width="0.2720%" height="15" fill="rgb(210,31,22)" fg:x="1403" fg:w="11"/><text x="34.9434%" y="302.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (25 samples, 0.62%)</title><rect x="34.3719%" y="244" width="0.6182%" height="15" fill="rgb(239,54,39)" fg:x="1390" fg:w="25"/><text x="34.6219%" y="254.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (25 samples, 0.62%)</title><rect x="34.3719%" y="260" width="0.6182%" height="15" fill="rgb(230,99,41)" fg:x="1390" fg:w="25"/><text x="34.6219%" y="270.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (25 samples, 0.62%)</title><rect x="34.3719%" y="276" width="0.6182%" height="15" fill="rgb(253,106,12)" fg:x="1390" fg:w="25"/><text x="34.6219%" y="286.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:467) (32 samples, 0.79%)</title><rect x="34.3225%" y="228" width="0.7913%" height="15" fill="rgb(213,46,41)" fg:x="1388" fg:w="32"/><text x="34.5725%" y="238.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (48 samples, 1.19%)</title><rect x="33.9763%" y="212" width="1.1869%" height="15" fill="rgb(215,133,35)" fg:x="1374" fg:w="48"/><text x="34.2263%" y="222.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6827) (56 samples, 1.38%)</title><rect x="33.9021%" y="196" width="1.3848%" height="15" fill="rgb(213,28,5)" fg:x="1371" fg:w="56"/><text x="34.1521%" y="206.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (5 samples, 0.12%)</title><rect x="35.1632%" y="212" width="0.1236%" height="15" fill="rgb(215,77,49)" fg:x="1422" fg:w="5"/><text x="35.4132%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:346) (6 samples, 0.15%)</title><rect x="35.3363%" y="228" width="0.1484%" height="15" fill="rgb(248,100,22)" fg:x="1429" fg:w="6"/><text x="35.5863%" y="238.50"></text></g><g><title>getCurrentToken (antlr4/Parser.py:313) (5 samples, 0.12%)</title><rect x="35.3610%" y="244" width="0.1236%" height="15" fill="rgb(208,67,9)" fg:x="1430" fg:w="5"/><text x="35.6110%" y="254.50"></text></g><g><title>consume (antlr4/Parser.py:348) (7 samples, 0.17%)</title><rect x="35.5094%" y="228" width="0.1731%" height="15" fill="rgb(219,133,21)" fg:x="1436" fg:w="7"/><text x="35.7594%" y="238.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6831) (25 samples, 0.62%)</title><rect x="35.3116%" y="196" width="0.6182%" height="15" fill="rgb(246,46,29)" fg:x="1428" fg:w="25"/><text x="35.5616%" y="206.50"></text></g><g><title>match (antlr4/Parser.py:124) (24 samples, 0.59%)</title><rect x="35.3363%" y="212" width="0.5935%" height="15" fill="rgb(246,185,52)" fg:x="1429" fg:w="24"/><text x="35.5863%" y="222.50"></text></g><g><title>consume (antlr4/Parser.py:354) (8 samples, 0.20%)</title><rect x="35.7319%" y="228" width="0.1978%" height="15" fill="rgb(252,136,11)" fg:x="1445" fg:w="8"/><text x="35.9819%" y="238.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5254) (5 samples, 0.12%)</title><rect x="36.2760%" y="228" width="0.1236%" height="15" fill="rgb(219,138,53)" fg:x="1467" fg:w="5"/><text x="36.5260%" y="238.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (8 samples, 0.20%)</title><rect x="36.6222%" y="324" width="0.1978%" height="15" fill="rgb(211,51,23)" fg:x="1481" fg:w="8"/><text x="36.8722%" y="334.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (8 samples, 0.20%)</title><rect x="36.6222%" y="340" width="0.1978%" height="15" fill="rgb(247,221,28)" fg:x="1481" fg:w="8"/><text x="36.8722%" y="350.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (21 samples, 0.52%)</title><rect x="36.5480%" y="276" width="0.5193%" height="15" fill="rgb(251,222,45)" fg:x="1478" fg:w="21"/><text x="36.7980%" y="286.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (21 samples, 0.52%)</title><rect x="36.5480%" y="292" width="0.5193%" height="15" fill="rgb(217,162,53)" fg:x="1478" fg:w="21"/><text x="36.7980%" y="302.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (20 samples, 0.49%)</title><rect x="36.5727%" y="308" width="0.4946%" height="15" fill="rgb(229,93,14)" fg:x="1479" fg:w="20"/><text x="36.8227%" y="318.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (7 samples, 0.17%)</title><rect x="36.8942%" y="324" width="0.1731%" height="15" fill="rgb(209,67,49)" fg:x="1492" fg:w="7"/><text x="37.1442%" y="334.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (5 samples, 0.12%)</title><rect x="36.9436%" y="340" width="0.1236%" height="15" fill="rgb(213,87,29)" fg:x="1494" fg:w="5"/><text x="37.1936%" y="350.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (5 samples, 0.12%)</title><rect x="36.9436%" y="356" width="0.1236%" height="15" fill="rgb(205,151,52)" fg:x="1494" fg:w="5"/><text x="37.1936%" y="366.50"></text></g><g><title>consume (antlr4/Parser.py:348) (23 samples, 0.57%)</title><rect x="36.5232%" y="260" width="0.5687%" height="15" fill="rgb(253,215,39)" fg:x="1477" fg:w="23"/><text x="36.7732%" y="270.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (5 samples, 0.12%)</title><rect x="37.1167%" y="276" width="0.1236%" height="15" fill="rgb(221,220,41)" fg:x="1501" fg:w="5"/><text x="37.3667%" y="286.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5259) (34 samples, 0.84%)</title><rect x="36.4243%" y="228" width="0.8408%" height="15" fill="rgb(218,133,21)" fg:x="1473" fg:w="34"/><text x="36.6743%" y="238.50"></text></g><g><title>match (antlr4/Parser.py:124) (30 samples, 0.74%)</title><rect x="36.5232%" y="244" width="0.7418%" height="15" fill="rgb(221,193,43)" fg:x="1477" fg:w="30"/><text x="36.7732%" y="254.50"></text></g><g><title>consume (antlr4/Parser.py:354) (6 samples, 0.15%)</title><rect x="37.1167%" y="260" width="0.1484%" height="15" fill="rgb(240,128,52)" fg:x="1501" fg:w="6"/><text x="37.3667%" y="270.50"></text></g><g><title>__init__ (qasm3Parser.py:5081) (42 samples, 1.04%)</title><rect x="37.3145%" y="260" width="1.0386%" height="15" fill="rgb(253,114,12)" fg:x="1509" fg:w="42"/><text x="37.5645%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5137) (45 samples, 1.11%)</title><rect x="37.2898%" y="244" width="1.1128%" height="15" fill="rgb(215,223,47)" fg:x="1508" fg:w="45"/><text x="37.5398%" y="254.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (7 samples, 0.17%)</title><rect x="38.9219%" y="372" width="0.1731%" height="15" fill="rgb(248,225,23)" fg:x="1574" fg:w="7"/><text x="39.1719%" y="382.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (24 samples, 0.59%)</title><rect x="38.7488%" y="340" width="0.5935%" height="15" fill="rgb(250,108,0)" fg:x="1567" fg:w="24"/><text x="38.9988%" y="350.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (24 samples, 0.59%)</title><rect x="38.7488%" y="356" width="0.5935%" height="15" fill="rgb(228,208,7)" fg:x="1567" fg:w="24"/><text x="38.9988%" y="366.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (32 samples, 0.79%)</title><rect x="38.6499%" y="292" width="0.7913%" height="15" fill="rgb(244,45,10)" fg:x="1563" fg:w="32"/><text x="38.8999%" y="302.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (29 samples, 0.72%)</title><rect x="38.7240%" y="308" width="0.7171%" height="15" fill="rgb(207,125,25)" fg:x="1566" fg:w="29"/><text x="38.9740%" y="318.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (29 samples, 0.72%)</title><rect x="38.7240%" y="324" width="0.7171%" height="15" fill="rgb(210,195,18)" fg:x="1566" fg:w="29"/><text x="38.9740%" y="334.50"></text></g><g><title>consume (antlr4/Parser.py:348) (37 samples, 0.91%)</title><rect x="38.6499%" y="276" width="0.9149%" height="15" fill="rgb(249,80,12)" fg:x="1563" fg:w="37"/><text x="38.8999%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (7 samples, 0.17%)</title><rect x="39.6142%" y="292" width="0.1731%" height="15" fill="rgb(221,65,9)" fg:x="1602" fg:w="7"/><text x="39.8642%" y="302.50"></text></g><g><title>__setattr__ (antlr4/tree/Tree.py:88) (8 samples, 0.20%)</title><rect x="39.8121%" y="308" width="0.1978%" height="15" fill="rgb(235,49,36)" fg:x="1610" fg:w="8"/><text x="40.0621%" y="318.50"></text></g><g><title>indexOperator (qasm3Parser.py:5143) (63 samples, 1.56%)</title><rect x="38.4768%" y="244" width="1.5579%" height="15" fill="rgb(225,32,20)" fg:x="1556" fg:w="63"/><text x="38.7268%" y="254.50"></text></g><g><title>match (antlr4/Parser.py:124) (58 samples, 1.43%)</title><rect x="38.6004%" y="260" width="1.4342%" height="15" fill="rgb(215,141,46)" fg:x="1561" fg:w="58"/><text x="38.8504%" y="270.50"></text></g><g><title>consume (antlr4/Parser.py:354) (19 samples, 0.47%)</title><rect x="39.5648%" y="276" width="0.4698%" height="15" fill="rgb(250,160,47)" fg:x="1600" fg:w="19"/><text x="39.8148%" y="286.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:105) (9 samples, 0.22%)</title><rect x="39.8121%" y="292" width="0.2226%" height="15" fill="rgb(216,222,40)" fg:x="1610" fg:w="9"/><text x="40.0621%" y="302.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (11 samples, 0.27%)</title><rect x="40.2077%" y="340" width="0.2720%" height="15" fill="rgb(234,217,39)" fg:x="1626" fg:w="11"/><text x="40.4577%" y="350.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (10 samples, 0.25%)</title><rect x="40.2324%" y="356" width="0.2473%" height="15" fill="rgb(207,178,40)" fg:x="1627" fg:w="10"/><text x="40.4824%" y="366.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (8 samples, 0.20%)</title><rect x="40.5786%" y="372" width="0.1978%" height="15" fill="rgb(221,136,13)" fg:x="1641" fg:w="8"/><text x="40.8286%" y="382.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (10 samples, 0.25%)</title><rect x="40.5786%" y="356" width="0.2473%" height="15" fill="rgb(249,199,10)" fg:x="1641" fg:w="10"/><text x="40.8286%" y="366.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (28 samples, 0.69%)</title><rect x="40.1583%" y="292" width="0.6924%" height="15" fill="rgb(249,222,13)" fg:x="1624" fg:w="28"/><text x="40.4083%" y="302.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (28 samples, 0.69%)</title><rect x="40.1583%" y="308" width="0.6924%" height="15" fill="rgb(244,185,38)" fg:x="1624" fg:w="28"/><text x="40.4083%" y="318.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (27 samples, 0.67%)</title><rect x="40.1830%" y="324" width="0.6677%" height="15" fill="rgb(236,202,9)" fg:x="1625" fg:w="27"/><text x="40.4330%" y="334.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (12 samples, 0.30%)</title><rect x="40.5539%" y="340" width="0.2967%" height="15" fill="rgb(250,229,37)" fg:x="1640" fg:w="12"/><text x="40.8039%" y="350.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:467) (30 samples, 0.74%)</title><rect x="40.1583%" y="276" width="0.7418%" height="15" fill="rgb(206,174,23)" fg:x="1624" fg:w="30"/><text x="40.4083%" y="286.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (38 samples, 0.94%)</title><rect x="40.0593%" y="260" width="0.9397%" height="15" fill="rgb(211,33,43)" fg:x="1620" fg:w="38"/><text x="40.3093%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5154) (40 samples, 0.99%)</title><rect x="40.0593%" y="244" width="0.9891%" height="15" fill="rgb(245,58,50)" fg:x="1620" fg:w="40"/><text x="40.3093%" y="254.50"></text></g><g><title>expression (qasm3Parser.py:4286) (5 samples, 0.12%)</title><rect x="41.2463%" y="260" width="0.1236%" height="15" fill="rgb(244,68,36)" fg:x="1668" fg:w="5"/><text x="41.4963%" y="270.50"></text></g><g><title>__init__ (antlr4/tree/Tree.py:85) (27 samples, 0.67%)</title><rect x="41.6914%" y="308" width="0.6677%" height="15" fill="rgb(232,229,15)" fg:x="1686" fg:w="27"/><text x="41.9414%" y="318.50"></text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (28 samples, 0.69%)</title><rect x="41.6914%" y="292" width="0.6924%" height="15" fill="rgb(254,30,23)" fg:x="1686" fg:w="28"/><text x="41.9414%" y="302.50"></text></g><g><title>expression (qasm3Parser.py:4386) (34 samples, 0.84%)</title><rect x="41.5678%" y="260" width="0.8408%" height="15" fill="rgb(235,160,14)" fg:x="1681" fg:w="34"/><text x="41.8178%" y="270.50"></text></g><g><title>consume (antlr4/Parser.py:354) (29 samples, 0.72%)</title><rect x="41.6914%" y="276" width="0.7171%" height="15" fill="rgb(212,155,44)" fg:x="1686" fg:w="29"/><text x="41.9414%" y="286.50"></text></g><g><title>expression (qasm3Parser.py:4393) (11 samples, 0.27%)</title><rect x="42.4827%" y="260" width="0.2720%" height="15" fill="rgb(226,2,50)" fg:x="1718" fg:w="11"/><text x="42.7327%" y="270.50"></text></g><g><title>indexOperator (qasm3Parser.py:5157) (71 samples, 1.76%)</title><rect x="41.0485%" y="244" width="1.7557%" height="15" fill="rgb(234,177,6)" fg:x="1660" fg:w="71"/><text x="41.2985%" y="254.50"></text></g><g><title>indexOperator (qasm3Parser.py:5168) (9 samples, 0.22%)</title><rect x="42.8289%" y="244" width="0.2226%" height="15" fill="rgb(217,24,9)" fg:x="1732" fg:w="9"/><text x="43.0789%" y="254.50"></text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (5 samples, 0.12%)</title><rect x="42.9278%" y="260" width="0.1236%" height="15" fill="rgb(220,13,46)" fg:x="1736" fg:w="5"/><text x="43.1778%" y="270.50"></text></g><g><title>seek (antlr4/BufferedTokenStream.py:77) (5 samples, 0.12%)</title><rect x="42.9278%" y="276" width="0.1236%" height="15" fill="rgb(239,221,27)" fg:x="1736" fg:w="5"/><text x="43.1778%" y="286.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (11 samples, 0.27%)</title><rect x="43.4471%" y="356" width="0.2720%" height="15" fill="rgb(222,198,25)" fg:x="1757" fg:w="11"/><text x="43.6971%" y="366.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (15 samples, 0.37%)</title><rect x="43.3729%" y="340" width="0.3709%" height="15" fill="rgb(211,99,13)" fg:x="1754" fg:w="15"/><text x="43.6229%" y="350.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (27 samples, 0.67%)</title><rect x="43.1998%" y="292" width="0.6677%" height="15" fill="rgb(232,111,31)" fg:x="1747" fg:w="27"/><text x="43.4498%" y="302.50"></text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (23 samples, 0.57%)</title><rect x="43.2987%" y="308" width="0.5687%" height="15" fill="rgb(245,82,37)" fg:x="1751" fg:w="23"/><text x="43.5487%" y="318.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (22 samples, 0.54%)</title><rect x="43.3234%" y="324" width="0.5440%" height="15" fill="rgb(227,149,46)" fg:x="1752" fg:w="22"/><text x="43.5734%" y="334.50"></text></g><g><title>consume (antlr4/Parser.py:348) (29 samples, 0.72%)</title><rect x="43.1998%" y="276" width="0.7171%" height="15" fill="rgb(218,36,50)" fg:x="1747" fg:w="29"/><text x="43.4498%" y="286.50"></text></g><g><title>indexOperator (qasm3Parser.py:5204) (38 samples, 0.94%)</title><rect x="43.1009%" y="244" width="0.9397%" height="15" fill="rgb(226,80,48)" fg:x="1743" fg:w="38"/><text x="43.3509%" y="254.50"></text></g><g><title>match (antlr4/Parser.py:124) (35 samples, 0.87%)</title><rect x="43.1751%" y="260" width="0.8655%" height="15" fill="rgb(238,224,15)" fg:x="1746" fg:w="35"/><text x="43.4251%" y="270.50"></text></g><g><title>consume (antlr4/Parser.py:354) (5 samples, 0.12%)</title><rect x="43.9169%" y="276" width="0.1236%" height="15" fill="rgb(241,136,10)" fg:x="1776" fg:w="5"/><text x="44.1669%" y="286.50"></text></g><g><title>indexedIdentifier (qasm3Parser.py:5265) (274 samples, 6.78%)</title><rect x="37.2898%" y="228" width="6.7755%" height="15" fill="rgb(208,32,45)" fg:x="1508" fg:w="274"/><text x="37.5398%" y="238.50">indexedId..</text></g><g><title>gateOperand (qasm3Parser.py:6163) (322 samples, 7.96%)</title><rect x="36.1523%" y="212" width="7.9624%" height="15" fill="rgb(207,135,9)" fg:x="1462" fg:w="322"/><text x="36.4023%" y="222.50">gateOperand..</text></g><g><title>gateOperandList (qasm3Parser.py:6833) (336 samples, 8.31%)</title><rect x="35.9298%" y="196" width="8.3086%" height="15" fill="rgb(206,86,44)" fg:x="1453" fg:w="336"/><text x="36.1798%" y="206.50">gateOperandL..</text></g><g><title>gateOperand (qasm3Parser.py:6178) (5 samples, 0.12%)</title><rect x="44.1147%" y="212" width="0.1236%" height="15" fill="rgb(245,177,15)" fg:x="1784" fg:w="5"/><text x="44.3647%" y="222.50"></text></g><g><title>gateOperandList (qasm3Parser.py:6836) (5 samples, 0.12%)</title><rect x="44.2631%" y="196" width="0.1236%" height="15" fill="rgb(206,64,50)" fg:x="1790" fg:w="5"/><text x="44.5131%" y="206.50"></text></g><g><title>exitRule (antlr4/Parser.py:381) (7 samples, 0.17%)</title><rect x="44.4857%" y="212" width="0.1731%" height="15" fill="rgb(234,36,40)" fg:x="1799" fg:w="7"/><text x="44.7357%" y="222.50"></text></g><g><title>gateCallStatement (qasm3Parser.py:2413) (1,357 samples, 33.56%)</title><rect x="11.1276%" y="180" width="33.5559%" height="15" fill="rgb(213,64,8)" fg:x="450" fg:w="1357"/><text x="11.3776%" y="190.50">gateCallStatement (qasm3Parser.py:2413)</text></g><g><title>gateOperandList (qasm3Parser.py:6851) (8 samples, 0.20%)</title><rect x="44.4857%" y="196" width="0.1978%" height="15" fill="rgb(210,75,36)" fg:x="1799" fg:w="8"/><text x="44.7357%" y="206.50"></text></g><g><title>match (antlr4/Parser.py:121) (5 samples, 0.12%)</title><rect x="44.7329%" y="196" width="0.1236%" height="15" fill="rgb(229,88,21)" fg:x="1809" fg:w="5"/><text x="44.9829%" y="206.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:145) (7 samples, 0.17%)</title><rect x="45.4500%" y="308" width="0.1731%" height="15" fill="rgb(252,204,47)" fg:x="1838" fg:w="7"/><text x="45.7000%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:170) (9 samples, 0.22%)</title><rect x="45.6479%" y="308" width="0.2226%" height="15" fill="rgb(208,77,27)" fg:x="1846" fg:w="9"/><text x="45.8979%" y="318.50"></text></g><g><title>getExistingTargetState (antlr4/atn/LexerATNSimulator.py:210) (5 samples, 0.12%)</title><rect x="45.7468%" y="324" width="0.1236%" height="15" fill="rgb(221,76,26)" fg:x="1850" fg:w="5"/><text x="45.9968%" y="334.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (10 samples, 0.25%)</title><rect x="45.8952%" y="308" width="0.2473%" height="15" fill="rgb(225,139,18)" fg:x="1856" fg:w="10"/><text x="46.1452%" y="318.50"></text></g><g><title>LA (antlr4/InputStream.py:53) (5 samples, 0.12%)</title><rect x="46.2908%" y="340" width="0.1236%" height="15" fill="rgb(230,137,11)" fg:x="1872" fg:w="5"/><text x="46.5408%" y="350.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:553) (11 samples, 0.27%)</title><rect x="46.1919%" y="324" width="0.2720%" height="15" fill="rgb(212,28,1)" fg:x="1868" fg:w="11"/><text x="46.4419%" y="334.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (13 samples, 0.32%)</title><rect x="46.1919%" y="308" width="0.3215%" height="15" fill="rgb(248,164,17)" fg:x="1868" fg:w="13"/><text x="46.4419%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:187) (8 samples, 0.20%)</title><rect x="46.5134%" y="308" width="0.1978%" height="15" fill="rgb(222,171,42)" fg:x="1881" fg:w="8"/><text x="46.7634%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:191) (9 samples, 0.22%)</title><rect x="46.7606%" y="308" width="0.2226%" height="15" fill="rgb(243,84,45)" fg:x="1891" fg:w="9"/><text x="47.0106%" y="318.50"></text></g><g><title>LA (antlr4/InputStream.py:53) (5 samples, 0.12%)</title><rect x="46.8595%" y="324" width="0.1236%" height="15" fill="rgb(252,49,23)" fg:x="1895" fg:w="5"/><text x="47.1095%" y="334.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (73 samples, 1.81%)</title><rect x="45.4253%" y="292" width="1.8051%" height="15" fill="rgb(215,19,7)" fg:x="1837" fg:w="73"/><text x="45.6753%" y="302.50">m..</text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:195) (9 samples, 0.22%)</title><rect x="47.0079%" y="308" width="0.2226%" height="15" fill="rgb(238,81,41)" fg:x="1901" fg:w="9"/><text x="47.2579%" y="318.50"></text></g><g><title>failOrAccept (antlr4/atn/LexerATNSimulator.py:248) (8 samples, 0.20%)</title><rect x="47.0326%" y="324" width="0.1978%" height="15" fill="rgb(210,199,37)" fg:x="1902" fg:w="8"/><text x="47.2826%" y="334.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (81 samples, 2.00%)</title><rect x="45.3759%" y="276" width="2.0030%" height="15" fill="rgb(244,192,49)" fg:x="1835" fg:w="81"/><text x="45.6259%" y="286.50">n..</text></g><g><title>nextToken (antlr4/Lexer.py:141) (5 samples, 0.12%)</title><rect x="47.3788%" y="276" width="0.1236%" height="15" fill="rgb(226,211,11)" fg:x="1916" fg:w="5"/><text x="47.6288%" y="286.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (6 samples, 0.15%)</title><rect x="47.6508%" y="308" width="0.1484%" height="15" fill="rgb(236,162,54)" fg:x="1927" fg:w="6"/><text x="47.9008%" y="318.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (10 samples, 0.25%)</title><rect x="47.5767%" y="276" width="0.2473%" height="15" fill="rgb(220,229,9)" fg:x="1924" fg:w="10"/><text x="47.8267%" y="286.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (9 samples, 0.22%)</title><rect x="47.6014%" y="292" width="0.2226%" height="15" fill="rgb(250,87,22)" fg:x="1925" fg:w="9"/><text x="47.8514%" y="302.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (113 samples, 2.79%)</title><rect x="45.0544%" y="228" width="2.7943%" height="15" fill="rgb(239,43,17)" fg:x="1822" fg:w="113"/><text x="45.3044%" y="238.50">co..</text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (110 samples, 2.72%)</title><rect x="45.1286%" y="244" width="2.7201%" height="15" fill="rgb(231,177,25)" fg:x="1825" fg:w="110"/><text x="45.3786%" y="254.50">sy..</text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (107 samples, 2.65%)</title><rect x="45.2028%" y="260" width="2.6459%" height="15" fill="rgb(219,179,1)" fg:x="1828" fg:w="107"/><text x="45.4528%" y="270.50">fe..</text></g><g><title>consume (antlr4/Parser.py:348) (123 samples, 3.04%)</title><rect x="45.0049%" y="212" width="3.0415%" height="15" fill="rgb(238,219,53)" fg:x="1820" fg:w="123"/><text x="45.2549%" y="222.50">con..</text></g><g><title>__init__ (antlr4/tree/Tree.py:85) (104 samples, 2.57%)</title><rect x="48.1949%" y="244" width="2.5717%" height="15" fill="rgb(232,167,36)" fg:x="1949" fg:w="104"/><text x="48.4449%" y="254.50">__..</text></g><g><title>addTokenNode (antlr4/ParserRuleContext.py:103) (113 samples, 2.79%)</title><rect x="48.1701%" y="228" width="2.7943%" height="15" fill="rgb(244,19,51)" fg:x="1948" fg:w="113"/><text x="48.4201%" y="238.50">ad..</text></g><g><title>gateCallStatement (qasm3Parser.py:2415) (260 samples, 6.43%)</title><rect x="44.7082%" y="180" width="6.4293%" height="15" fill="rgb(224,6,22)" fg:x="1808" fg:w="260"/><text x="44.9582%" y="190.50">gateCall..</text></g><g><title>match (antlr4/Parser.py:124) (254 samples, 6.28%)</title><rect x="44.8566%" y="196" width="6.2809%" height="15" fill="rgb(224,145,5)" fg:x="1814" fg:w="254"/><text x="45.1066%" y="206.50">match (a..</text></g><g><title>consume (antlr4/Parser.py:354) (122 samples, 3.02%)</title><rect x="48.1207%" y="212" width="3.0168%" height="15" fill="rgb(234,130,49)" fg:x="1946" fg:w="122"/><text x="48.3707%" y="222.50">con..</text></g><g><title>statement (qasm3Parser.py:1002) (2,010 samples, 49.70%)</title><rect x="1.6320%" y="164" width="49.7033%" height="15" fill="rgb(254,6,2)" fg:x="66" fg:w="2010"/><text x="1.8820%" y="174.50">statement (qasm3Parser.py:1002)</text></g><g><title>gateCallStatement (qasm3Parser.py:2476) (8 samples, 0.20%)</title><rect x="51.1375%" y="180" width="0.1978%" height="15" fill="rgb(208,96,46)" fg:x="2068" fg:w="8"/><text x="51.3875%" y="190.50"></text></g><g><title>exitRule (antlr4/Parser.py:381) (5 samples, 0.12%)</title><rect x="51.4095%" y="180" width="0.1236%" height="15" fill="rgb(239,3,39)" fg:x="2079" fg:w="5"/><text x="51.6595%" y="190.50"></text></g><g><title>statement (qasm3Parser.py:1070) (10 samples, 0.25%)</title><rect x="51.4095%" y="164" width="0.2473%" height="15" fill="rgb(233,210,1)" fg:x="2079" fg:w="10"/><text x="51.6595%" y="174.50"></text></g><g><title>__init__ (antlr4/ParserRuleContext.py:39) (5 samples, 0.12%)</title><rect x="51.7557%" y="196" width="0.1236%" height="15" fill="rgb(244,137,37)" fg:x="2093" fg:w="5"/><text x="52.0057%" y="206.50"></text></g><g><title>statement (qasm3Parser.py:888) (11 samples, 0.27%)</title><rect x="51.6568%" y="164" width="0.2720%" height="15" fill="rgb(240,136,2)" fg:x="2089" fg:w="11"/><text x="51.9068%" y="174.50"></text></g><g><title>__init__ (qasm3Parser.py:736) (7 samples, 0.17%)</title><rect x="51.7557%" y="180" width="0.1731%" height="15" fill="rgb(239,18,37)" fg:x="2093" fg:w="7"/><text x="52.0057%" y="190.50"></text></g><g><title>statement (qasm3Parser.py:889) (11 samples, 0.27%)</title><rect x="51.9288%" y="164" width="0.2720%" height="15" fill="rgb(218,185,22)" fg:x="2100" fg:w="11"/><text x="52.1788%" y="174.50"></text></g><g><title>enterRule (antlr4/Parser.py:376) (5 samples, 0.12%)</title><rect x="52.0772%" y="180" width="0.1236%" height="15" fill="rgb(225,218,4)" fg:x="2106" fg:w="5"/><text x="52.3272%" y="190.50"></text></g><g><title>addContextToParseTree (antlr4/Parser.py:366) (5 samples, 0.12%)</title><rect x="52.0772%" y="196" width="0.1236%" height="15" fill="rgb(230,182,32)" fg:x="2106" fg:w="5"/><text x="52.3272%" y="206.50"></text></g><g><title>statement (qasm3Parser.py:901) (6 samples, 0.15%)</title><rect x="52.4481%" y="164" width="0.1484%" height="15" fill="rgb(242,56,43)" fg:x="2121" fg:w="6"/><text x="52.6981%" y="174.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:398) (8 samples, 0.20%)</title><rect x="52.9921%" y="196" width="0.1978%" height="15" fill="rgb(233,99,24)" fg:x="2143" fg:w="8"/><text x="53.2421%" y="206.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:123) (6 samples, 0.15%)</title><rect x="53.4619%" y="244" width="0.1484%" height="15" fill="rgb(234,209,42)" fg:x="2162" fg:w="6"/><text x="53.7119%" y="254.50"></text></g><g><title>nextToken (antlr4/Lexer.py:128) (5 samples, 0.12%)</title><rect x="53.7092%" y="260" width="0.1236%" height="15" fill="rgb(227,7,12)" fg:x="2172" fg:w="5"/><text x="53.9592%" y="270.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:145) (8 samples, 0.20%)</title><rect x="54.1790%" y="292" width="0.1978%" height="15" fill="rgb(245,203,43)" fg:x="2191" fg:w="8"/><text x="54.4290%" y="302.50"></text></g><g><title>getExistingTargetState (antlr4/atn/LexerATNSimulator.py:207) (15 samples, 0.37%)</title><rect x="54.6983%" y="308" width="0.3709%" height="15" fill="rgb(238,205,33)" fg:x="2212" fg:w="15"/><text x="54.9483%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:170) (31 samples, 0.77%)</title><rect x="54.4758%" y="292" width="0.7666%" height="15" fill="rgb(231,56,7)" fg:x="2203" fg:w="31"/><text x="54.7258%" y="302.50"></text></g><g><title>getExistingTargetState (antlr4/atn/LexerATNSimulator.py:210) (7 samples, 0.17%)</title><rect x="55.0692%" y="308" width="0.1731%" height="15" fill="rgb(244,186,29)" fg:x="2227" fg:w="7"/><text x="55.3192%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:176) (26 samples, 0.64%)</title><rect x="55.2671%" y="292" width="0.6429%" height="15" fill="rgb(234,111,31)" fg:x="2235" fg:w="26"/><text x="55.5171%" y="302.50"></text></g><g><title>__eq__ (antlr4/dfa/DFAState.py:113) (14 samples, 0.35%)</title><rect x="55.5638%" y="308" width="0.3462%" height="15" fill="rgb(241,149,10)" fg:x="2247" fg:w="14"/><text x="55.8138%" y="318.50"></text></g><g><title>__eq__ (antlr4/atn/ATNConfigSet.py:145) (5 samples, 0.12%)</title><rect x="55.7864%" y="324" width="0.1236%" height="15" fill="rgb(249,206,44)" fg:x="2256" fg:w="5"/><text x="56.0364%" y="334.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:553) (7 samples, 0.17%)</title><rect x="55.9842%" y="308" width="0.1731%" height="15" fill="rgb(251,153,30)" fg:x="2264" fg:w="7"/><text x="56.2342%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:184) (17 samples, 0.42%)</title><rect x="55.9347%" y="292" width="0.4204%" height="15" fill="rgb(239,152,38)" fg:x="2262" fg:w="17"/><text x="56.1847%" y="302.50"></text></g><g><title>consume (antlr4/atn/LexerATNSimulator.py:559) (6 samples, 0.15%)</title><rect x="56.2067%" y="308" width="0.1484%" height="15" fill="rgb(249,139,47)" fg:x="2273" fg:w="6"/><text x="56.4567%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:187) (12 samples, 0.30%)</title><rect x="56.3798%" y="292" width="0.2967%" height="15" fill="rgb(244,64,35)" fg:x="2280" fg:w="12"/><text x="56.6298%" y="302.50"></text></g><g><title>captureSimState (antlr4/atn/LexerATNSimulator.py:473) (8 samples, 0.20%)</title><rect x="56.4787%" y="308" width="0.1978%" height="15" fill="rgb(216,46,15)" fg:x="2284" fg:w="8"/><text x="56.7287%" y="318.50"></text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:191) (11 samples, 0.27%)</title><rect x="56.7013%" y="292" width="0.2720%" height="15" fill="rgb(250,74,19)" fg:x="2293" fg:w="11"/><text x="56.9513%" y="302.50"></text></g><g><title>accept (antlr4/atn/LexerATNSimulator.py:290) (5 samples, 0.12%)</title><rect x="57.2206%" y="324" width="0.1236%" height="15" fill="rgb(249,42,33)" fg:x="2314" fg:w="5"/><text x="57.4706%" y="334.50"></text></g><g><title>match (antlr4/atn/LexerATNSimulator.py:104) (144 samples, 3.56%)</title><rect x="54.0307%" y="276" width="3.5608%" height="15" fill="rgb(242,149,17)" fg:x="2185" fg:w="144"/><text x="54.2807%" y="286.50">matc..</text></g><g><title>execATN (antlr4/atn/LexerATNSimulator.py:195) (25 samples, 0.62%)</title><rect x="56.9733%" y="292" width="0.6182%" height="15" fill="rgb(244,29,21)" fg:x="2304" fg:w="25"/><text x="57.2233%" y="302.50"></text></g><g><title>failOrAccept (antlr4/atn/LexerATNSimulator.py:248) (18 samples, 0.45%)</title><rect x="57.1464%" y="308" width="0.4451%" height="15" fill="rgb(220,130,37)" fg:x="2311" fg:w="18"/><text x="57.3964%" y="318.50"></text></g><g><title>accept (antlr4/atn/LexerATNSimulator.py:295) (9 samples, 0.22%)</title><rect x="57.3689%" y="324" width="0.2226%" height="15" fill="rgb(211,67,2)" fg:x="2320" fg:w="9"/><text x="57.6189%" y="334.50"></text></g><g><title>execute (antlr4/atn/LexerActionExecutor.py:126) (5 samples, 0.12%)</title><rect x="57.4679%" y="340" width="0.1236%" height="15" fill="rgb(235,68,52)" fg:x="2324" fg:w="5"/><text x="57.7179%" y="350.50"></text></g><g><title>nextToken (antlr4/Lexer.py:137) (157 samples, 3.88%)</title><rect x="53.9812%" y="260" width="3.8823%" height="15" fill="rgb(246,142,3)" fg:x="2183" fg:w="157"/><text x="54.2312%" y="270.50">next..</text></g><g><title>__init__ (antlr4/Token.py:76) (41 samples, 1.01%)</title><rect x="58.5312%" y="308" width="1.0138%" height="15" fill="rgb(241,25,7)" fg:x="2367" fg:w="41"/><text x="58.7812%" y="318.50"></text></g><g><title>create (antlr4/CommonTokenFactory.py:47) (57 samples, 1.41%)</title><rect x="58.3086%" y="292" width="1.4095%" height="15" fill="rgb(242,119,39)" fg:x="2358" fg:w="57"/><text x="58.5586%" y="302.50"></text></g><g><title>emit (antlr4/Lexer.py:222) (65 samples, 1.61%)</title><rect x="58.1355%" y="276" width="1.6073%" height="15" fill="rgb(241,98,45)" fg:x="2351" fg:w="65"/><text x="58.3855%" y="286.50"></text></g><g><title>nextToken (antlr4/Lexer.py:153) (70 samples, 1.73%)</title><rect x="58.0366%" y="260" width="1.7310%" height="15" fill="rgb(254,28,30)" fg:x="2347" fg:w="70"/><text x="58.2866%" y="270.50"></text></g><g><title>fetch (antlr4/BufferedTokenStream.py:124) (252 samples, 6.23%)</title><rect x="53.6103%" y="244" width="6.2315%" height="15" fill="rgb(241,142,54)" fg:x="2168" fg:w="252"/><text x="53.8603%" y="254.50">fetch (a..</text></g><g><title>sync (antlr4/BufferedTokenStream.py:112) (264 samples, 6.53%)</title><rect x="53.3877%" y="228" width="6.5282%" height="15" fill="rgb(222,85,15)" fg:x="2159" fg:w="264"/><text x="53.6377%" y="238.50">sync (ant..</text></g><g><title>consume (antlr4/BufferedTokenStream.py:100) (267 samples, 6.60%)</title><rect x="53.3630%" y="212" width="6.6024%" height="15" fill="rgb(210,85,47)" fg:x="2158" fg:w="267"/><text x="53.6130%" y="222.50">consume (..</text></g><g><title>nextTokenOnChannel (antlr4/BufferedTokenStream.py:206) (6 samples, 0.15%)</title><rect x="60.1137%" y="244" width="0.1484%" height="15" fill="rgb(224,206,25)" fg:x="2431" fg:w="6"/><text x="60.3637%" y="254.50"></text></g><g><title>consume (antlr4/BufferedTokenStream.py:101) (15 samples, 0.37%)</title><rect x="59.9654%" y="212" width="0.3709%" height="15" fill="rgb(243,201,19)" fg:x="2425" fg:w="15"/><text x="60.2154%" y="222.50"></text></g><g><title>adjustSeekIndex (antlr4/CommonTokenStream.py:45) (11 samples, 0.27%)</title><rect x="60.0643%" y="228" width="0.2720%" height="15" fill="rgb(236,59,4)" fg:x="2429" fg:w="11"/><text x="60.3143%" y="238.50"></text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:467) (291 samples, 7.20%)</title><rect x="53.2888%" y="196" width="7.1958%" height="15" fill="rgb(254,179,45)" fg:x="2155" fg:w="291"/><text x="53.5388%" y="206.50">execATN (a..</text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:346) (313 samples, 7.74%)</title><rect x="52.9179%" y="180" width="7.7399%" height="15" fill="rgb(226,14,10)" fg:x="2140" fg:w="313"/><text x="53.1679%" y="190.50">adaptivePre..</text></g><g><title>execATN (antlr4/atn/ParserATNSimulator.py:468) (7 samples, 0.17%)</title><rect x="60.4847%" y="196" width="0.1731%" height="15" fill="rgb(244,27,41)" fg:x="2446" fg:w="7"/><text x="60.7347%" y="206.50"></text></g><g><title>LA (antlr4/BufferedTokenStream.py:150) (7 samples, 0.17%)</title><rect x="60.4847%" y="212" width="0.1731%" height="15" fill="rgb(235,35,32)" fg:x="2446" fg:w="7"/><text x="60.7347%" y="222.50"></text></g><g><title>statement (qasm3Parser.py:914) (326 samples, 8.06%)</title><rect x="52.7695%" y="164" width="8.0613%" height="15" fill="rgb(218,68,31)" fg:x="2134" fg:w="326"/><text x="53.0195%" y="174.50">statement (..</text></g><g><title>adaptivePredict (antlr4/atn/ParserATNSimulator.py:353) (5 samples, 0.12%)</title><rect x="60.7072%" y="180" width="0.1236%" height="15" fill="rgb(207,120,37)" fg:x="2455" fg:w="5"/><text x="60.9572%" y="190.50"></text></g><g><title>seek (antlr4/BufferedTokenStream.py:77) (5 samples, 0.12%)</title><rect x="60.7072%" y="196" width="0.1236%" height="15" fill="rgb(227,98,0)" fg:x="2455" fg:w="5"/><text x="60.9572%" y="206.50"></text></g><g><title>statementOrScope (qasm3Parser.py:1301) (2,400 samples, 59.35%)</title><rect x="1.5579%" y="148" width="59.3472%" height="15" fill="rgb(207,7,3)" fg:x="63" fg:w="2400"/><text x="1.8079%" y="158.50">statementOrScope (qasm3Parser.py:1301)</text></g><g><title>program (qasm3Parser.py:659) (2,436 samples, 60.24%)</title><rect x="0.6924%" y="132" width="60.2374%" height="15" fill="rgb(206,98,19)" fg:x="28" fg:w="2436"/><text x="0.9424%" y="142.50">program (qasm3Parser.py:659)</text></g><g><title>parse (openqasm3/parser.py:105) (2,446 samples, 60.48%)</title><rect x="0.5935%" y="116" width="60.4847%" height="15" fill="rgb(217,5,26)" fg:x="24" fg:w="2446"/><text x="0.8435%" y="126.50">parse (openqasm3/parser.py:105)</text></g><g><title>getChild (antlr4/ParserRuleContext.py:118) (5 samples, 0.12%)</title><rect x="61.3254%" y="244" width="0.1236%" height="15" fill="rgb(235,190,38)" fg:x="2480" fg:w="5"/><text x="61.5754%" y="254.50"></text></g><g><title>scope (qasm3Parser.py:1267) (8 samples, 0.20%)</title><rect x="61.3007%" y="212" width="0.1978%" height="15" fill="rgb(247,86,24)" fg:x="2479" fg:w="8"/><text x="61.5507%" y="222.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (7 samples, 0.17%)</title><rect x="61.3254%" y="228" width="0.1731%" height="15" fill="rgb(205,101,16)" fg:x="2480" fg:w="7"/><text x="61.5754%" y="238.50"></text></g><g><title>visitStatement (openqasm3/parser.py:215) (6 samples, 0.15%)</title><rect x="61.7458%" y="260" width="0.1484%" height="15" fill="rgb(246,168,33)" fg:x="2497" fg:w="6"/><text x="61.9958%" y="270.50"></text></g><g><title>pragma (qasm3Parser.py:740) (5 samples, 0.12%)</title><rect x="61.7705%" y="276" width="0.1236%" height="15" fill="rgb(231,114,1)" fg:x="2498" fg:w="5"/><text x="62.0205%" y="286.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (5 samples, 0.12%)</title><rect x="61.7705%" y="292" width="0.1236%" height="15" fill="rgb(207,184,53)" fg:x="2498" fg:w="5"/><text x="62.0205%" y="302.50"></text></g><g><title>visitGateCallStatement (openqasm3/parser.py:422) (7 samples, 0.17%)</title><rect x="62.0425%" y="324" width="0.1731%" height="15" fill="rgb(224,95,51)" fg:x="2509" fg:w="7"/><text x="62.2925%" y="334.50"></text></g><g><title>gateModifier (qasm3Parser.py:2321) (6 samples, 0.15%)</title><rect x="62.0673%" y="340" width="0.1484%" height="15" fill="rgb(212,188,45)" fg:x="2510" fg:w="6"/><text x="62.3173%" y="350.50"></text></g><g><title>accept (qasm3Parser.py:4224) (6 samples, 0.15%)</title><rect x="62.4382%" y="420" width="0.1484%" height="15" fill="rgb(223,154,38)" fg:x="2525" fg:w="6"/><text x="62.6882%" y="430.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (5 samples, 0.12%)</title><rect x="62.4629%" y="436" width="0.1236%" height="15" fill="rgb(251,22,52)" fg:x="2526" fg:w="5"/><text x="62.7129%" y="446.50"></text></g><g><title>_visit_binary_expression (openqasm3/parser.py:600) (8 samples, 0.20%)</title><rect x="62.4135%" y="388" width="0.1978%" height="15" fill="rgb(229,209,22)" fg:x="2524" fg:w="8"/><text x="62.6635%" y="398.50"></text></g><g><title>visit (antlr4/tree/Tree.py:34) (7 samples, 0.17%)</title><rect x="62.4382%" y="404" width="0.1731%" height="15" fill="rgb(234,138,34)" fg:x="2525" fg:w="7"/><text x="62.6882%" y="414.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:651) (133 samples, 3.29%)</title><rect x="62.6855%" y="452" width="3.2888%" height="15" fill="rgb(212,95,11)" fg:x="2535" fg:w="133"/><text x="62.9355%" y="462.50">vis..</text></g><g><title>Identifier (qasm3Parser.py:4236) (133 samples, 3.29%)</title><rect x="62.6855%" y="468" width="3.2888%" height="15" fill="rgb(240,179,47)" fg:x="2535" fg:w="133"/><text x="62.9355%" y="478.50">Ide..</text></g><g><title>getToken (antlr4/ParserRuleContext.py:137) (132 samples, 3.26%)</title><rect x="62.7102%" y="484" width="3.2641%" height="15" fill="rgb(240,163,11)" fg:x="2536" fg:w="132"/><text x="62.9602%" y="494.50">get..</text></g><g><title>wrapped (openqasm3/parser.py:138) (150 samples, 3.71%)</title><rect x="62.4135%" y="372" width="3.7092%" height="15" fill="rgb(236,37,12)" fg:x="2524" fg:w="150"/><text x="62.6635%" y="382.50">wrap..</text></g><g><title>_visit_binary_expression (openqasm3/parser.py:602) (140 samples, 3.46%)</title><rect x="62.6607%" y="388" width="3.4619%" height="15" fill="rgb(232,164,16)" fg:x="2534" fg:w="140"/><text x="62.9107%" y="398.50">_vi..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (139 samples, 3.44%)</title><rect x="62.6855%" y="404" width="3.4372%" height="15" fill="rgb(244,205,15)" fg:x="2535" fg:w="139"/><text x="62.9355%" y="414.50">vis..</text></g><g><title>accept (qasm3Parser.py:4268) (139 samples, 3.44%)</title><rect x="62.6855%" y="420" width="3.4372%" height="15" fill="rgb(223,117,47)" fg:x="2535" fg:w="139"/><text x="62.9355%" y="430.50">acc..</text></g><g><title>wrapped (openqasm3/parser.py:138) (139 samples, 3.44%)</title><rect x="62.6855%" y="436" width="3.4372%" height="15" fill="rgb(244,107,35)" fg:x="2535" fg:w="139"/><text x="62.9355%" y="446.50">wra..</text></g><g><title>accept (qasm3Parser.py:3881) (151 samples, 3.73%)</title><rect x="62.4135%" y="356" width="3.7339%" height="15" fill="rgb(205,140,8)" fg:x="2524" fg:w="151"/><text x="62.6635%" y="366.50">acce..</text></g><g><title>visitGateCallStatement (openqasm3/parser.py:424) (184 samples, 4.55%)</title><rect x="62.2156%" y="324" width="4.5500%" height="15" fill="rgb(228,84,46)" fg:x="2516" fg:w="184"/><text x="62.4656%" y="334.50">visit..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (176 samples, 4.35%)</title><rect x="62.4135%" y="340" width="4.3521%" height="15" fill="rgb(254,188,9)" fg:x="2524" fg:w="176"/><text x="62.6635%" y="350.50">visit..</text></g><g><title>accept (qasm3Parser.py:4268) (24 samples, 0.59%)</title><rect x="66.1721%" y="356" width="0.5935%" height="15" fill="rgb(206,112,54)" fg:x="2676" fg:w="24"/><text x="66.4221%" y="366.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (22 samples, 0.54%)</title><rect x="66.2216%" y="372" width="0.5440%" height="15" fill="rgb(216,84,49)" fg:x="2678" fg:w="22"/><text x="66.4716%" y="382.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:658) (10 samples, 0.25%)</title><rect x="66.5183%" y="388" width="0.2473%" height="15" fill="rgb(214,194,35)" fg:x="2690" fg:w="10"/><text x="66.7683%" y="398.50"></text></g><g><title>gateOperand (qasm3Parser.py:6785) (5 samples, 0.12%)</title><rect x="67.0376%" y="340" width="0.1236%" height="15" fill="rgb(249,28,3)" fg:x="2711" fg:w="5"/><text x="67.2876%" y="350.50"></text></g><g><title>gateOperandList (qasm3Parser.py:2313) (7 samples, 0.17%)</title><rect x="67.1612%" y="340" width="0.1731%" height="15" fill="rgb(222,56,52)" fg:x="2716" fg:w="7"/><text x="67.4112%" y="350.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (6 samples, 0.15%)</title><rect x="67.1860%" y="356" width="0.1484%" height="15" fill="rgb(245,217,50)" fg:x="2717" fg:w="6"/><text x="67.4360%" y="366.50"></text></g><g><title>wrapped (openqasm3/parser.py:137) (8 samples, 0.20%)</title><rect x="67.4580%" y="372" width="0.1978%" height="15" fill="rgb(213,201,24)" fg:x="2728" fg:w="8"/><text x="67.7080%" y="382.50"></text></g><g><title>get_span (openqasm3/parser.py:114) (6 samples, 0.15%)</title><rect x="67.5074%" y="388" width="0.1484%" height="15" fill="rgb(248,116,28)" fg:x="2730" fg:w="6"/><text x="67.7574%" y="398.50"></text></g><g><title>visitGateOperand (openqasm3/parser.py:864) (8 samples, 0.20%)</title><rect x="67.7052%" y="388" width="0.1978%" height="15" fill="rgb(219,72,43)" fg:x="2738" fg:w="8"/><text x="67.9552%" y="398.50"></text></g><g><title>HardwareQubit (qasm3Parser.py:6130) (8 samples, 0.20%)</title><rect x="67.7052%" y="404" width="0.1978%" height="15" fill="rgb(209,138,14)" fg:x="2738" fg:w="8"/><text x="67.9552%" y="414.50"></text></g><g><title>wrapped (openqasm3/parser.py:137) (6 samples, 0.15%)</title><rect x="68.0762%" y="436" width="0.1484%" height="15" fill="rgb(222,18,33)" fg:x="2753" fg:w="6"/><text x="68.3262%" y="446.50"></text></g><g><title>get_span (openqasm3/parser.py:114) (6 samples, 0.15%)</title><rect x="68.0762%" y="452" width="0.1484%" height="15" fill="rgb(213,199,7)" fg:x="2753" fg:w="6"/><text x="68.3262%" y="462.50"></text></g><g><title>getChildren (antlr4/ParserRuleContext.py:126) (186 samples, 4.60%)</title><rect x="68.3729%" y="500" width="4.5994%" height="15" fill="rgb(250,110,10)" fg:x="2765" fg:w="186"/><text x="68.6229%" y="510.50">getCh..</text></g><g><title>getTypedRuleContexts (antlr4/ParserRuleContext.py:164) (191 samples, 4.72%)</title><rect x="68.3234%" y="484" width="4.7230%" height="15" fill="rgb(248,123,6)" fg:x="2763" fg:w="191"/><text x="68.5734%" y="494.50">getTyp..</text></g><g><title>visitIndexedIdentifier (openqasm3/parser.py:768) (198 samples, 4.90%)</title><rect x="68.2245%" y="452" width="4.8961%" height="15" fill="rgb(206,91,31)" fg:x="2759" fg:w="198"/><text x="68.4745%" y="462.50">visitI..</text></g><g><title>indexOperator (qasm3Parser.py:5226) (198 samples, 4.90%)</title><rect x="68.2245%" y="468" width="4.8961%" height="15" fill="rgb(211,154,13)" fg:x="2759" fg:w="198"/><text x="68.4745%" y="478.50">indexO..</text></g><g><title>Identifier (qasm3Parser.py:5222) (5 samples, 0.12%)</title><rect x="73.2443%" y="468" width="0.1236%" height="15" fill="rgb(225,148,7)" fg:x="2962" fg:w="5"/><text x="73.4943%" y="478.50"></text></g><g><title>getText (antlr4/tree/Tree.py:116) (5 samples, 0.12%)</title><rect x="73.4669%" y="484" width="0.1236%" height="15" fill="rgb(220,160,43)" fg:x="2971" fg:w="5"/><text x="73.7169%" y="494.50"></text></g><g><title>visitIndexedIdentifier (openqasm3/parser.py:771) (21 samples, 0.52%)</title><rect x="73.1701%" y="452" width="0.5193%" height="15" fill="rgb(213,52,39)" fg:x="2959" fg:w="21"/><text x="73.4201%" y="462.50"></text></g><g><title>_visit_identifier (openqasm3/parser.py:147) (13 samples, 0.32%)</title><rect x="73.3680%" y="468" width="0.3215%" height="15" fill="rgb(243,137,7)" fg:x="2967" fg:w="13"/><text x="73.6180%" y="478.50"></text></g><g><title>getTypedRuleContexts (antlr4/ParserRuleContext.py:165) (5 samples, 0.12%)</title><rect x="73.9120%" y="484" width="0.1236%" height="15" fill="rgb(230,79,13)" fg:x="2989" fg:w="5"/><text x="74.1620%" y="494.50"></text></g><g><title>indexOperator (qasm3Parser.py:5226) (13 samples, 0.32%)</title><rect x="73.7389%" y="468" width="0.3215%" height="15" fill="rgb(247,105,23)" fg:x="2982" fg:w="13"/><text x="73.9889%" y="478.50"></text></g><g><title>accept (qasm3Parser.py:5127) (9 samples, 0.22%)</title><rect x="74.0603%" y="484" width="0.2226%" height="15" fill="rgb(223,179,41)" fg:x="2995" fg:w="9"/><text x="74.3103%" y="494.50"></text></g><g><title>getChild (antlr4/ParserRuleContext.py:118) (9 samples, 0.22%)</title><rect x="74.4065%" y="548" width="0.2226%" height="15" fill="rgb(218,9,34)" fg:x="3009" fg:w="9"/><text x="74.6565%" y="558.50"></text></g><g><title>visitIndexOperator (openqasm3/parser.py:753) (18 samples, 0.45%)</title><rect x="74.3323%" y="500" width="0.4451%" height="15" fill="rgb(222,106,8)" fg:x="3006" fg:w="18"/><text x="74.5823%" y="510.50"></text></g><g><title>setExpression (qasm3Parser.py:5092) (17 samples, 0.42%)</title><rect x="74.3571%" y="516" width="0.4204%" height="15" fill="rgb(211,220,0)" fg:x="3007" fg:w="17"/><text x="74.6071%" y="526.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (16 samples, 0.40%)</title><rect x="74.3818%" y="532" width="0.3956%" height="15" fill="rgb(229,52,16)" fg:x="3008" fg:w="16"/><text x="74.6318%" y="542.50"></text></g><g><title>getChild (antlr4/ParserRuleContext.py:119) (6 samples, 0.15%)</title><rect x="74.6291%" y="548" width="0.1484%" height="15" fill="rgb(212,155,18)" fg:x="3018" fg:w="6"/><text x="74.8791%" y="558.50"></text></g><g><title>getChildren (antlr4/ParserRuleContext.py:129) (9 samples, 0.22%)</title><rect x="75.0247%" y="516" width="0.2226%" height="15" fill="rgb(242,21,14)" fg:x="3034" fg:w="9"/><text x="75.2747%" y="526.50"></text></g><g><title>accept (qasm3Parser.py:4267) (7 samples, 0.17%)</title><rect x="75.2967%" y="532" width="0.1731%" height="15" fill="rgb(222,19,48)" fg:x="3045" fg:w="7"/><text x="75.5467%" y="542.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:657) (9 samples, 0.22%)</title><rect x="75.8902%" y="564" width="0.2226%" height="15" fill="rgb(232,45,27)" fg:x="3069" fg:w="9"/><text x="76.1402%" y="574.50"></text></g><g><title>DecimalIntegerLiteral (qasm3Parser.py:4242) (7 samples, 0.17%)</title><rect x="75.9397%" y="580" width="0.1731%" height="15" fill="rgb(249,103,42)" fg:x="3071" fg:w="7"/><text x="76.1897%" y="590.50"></text></g><g><title>DecimalIntegerLiteral (qasm3Parser.py:4242) (5 samples, 0.12%)</title><rect x="76.2117%" y="580" width="0.1236%" height="15" fill="rgb(246,81,33)" fg:x="3082" fg:w="5"/><text x="76.4617%" y="590.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (333 samples, 8.23%)</title><rect x="68.2245%" y="436" width="8.2344%" height="15" fill="rgb(252,33,42)" fg:x="2759" fg:w="333"/><text x="68.4745%" y="446.50">wrapped (op..</text></g><g><title>visitIndexedIdentifier (openqasm3/parser.py:772) (112 samples, 2.77%)</title><rect x="73.6894%" y="452" width="2.7695%" height="15" fill="rgb(209,212,41)" fg:x="2980" fg:w="112"/><text x="73.9394%" y="462.50">vi..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (97 samples, 2.40%)</title><rect x="74.0603%" y="468" width="2.3986%" height="15" fill="rgb(207,154,6)" fg:x="2995" fg:w="97"/><text x="74.3103%" y="478.50">vi..</text></g><g><title>accept (qasm3Parser.py:5128) (88 samples, 2.18%)</title><rect x="74.2829%" y="484" width="2.1761%" height="15" fill="rgb(223,64,47)" fg:x="3004" fg:w="88"/><text x="74.5329%" y="494.50">a..</text></g><g><title>visitIndexOperator (openqasm3/parser.py:764) (68 samples, 1.68%)</title><rect x="74.7774%" y="500" width="1.6815%" height="15" fill="rgb(211,161,38)" fg:x="3024" fg:w="68"/><text x="75.0274%" y="510.50"></text></g><g><title>visit (antlr4/tree/Tree.py:34) (49 samples, 1.21%)</title><rect x="75.2473%" y="516" width="1.2117%" height="15" fill="rgb(219,138,40)" fg:x="3043" fg:w="49"/><text x="75.4973%" y="526.50"></text></g><g><title>accept (qasm3Parser.py:4268) (40 samples, 0.99%)</title><rect x="75.4698%" y="532" width="0.9891%" height="15" fill="rgb(241,228,46)" fg:x="3052" fg:w="40"/><text x="75.7198%" y="542.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (34 samples, 0.84%)</title><rect x="75.6182%" y="548" width="0.8408%" height="15" fill="rgb(223,209,38)" fg:x="3058" fg:w="34"/><text x="75.8682%" y="558.50"></text></g><g><title>visitLiteralExpression (openqasm3/parser.py:658) (14 samples, 0.35%)</title><rect x="76.1128%" y="564" width="0.3462%" height="15" fill="rgb(236,164,45)" fg:x="3078" fg:w="14"/><text x="76.3628%" y="574.50"></text></g><g><title>getText (antlr4/tree/Tree.py:116) (5 samples, 0.12%)</title><rect x="76.3353%" y="580" width="0.1236%" height="15" fill="rgb(231,15,5)" fg:x="3087" fg:w="5"/><text x="76.5853%" y="590.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (357 samples, 8.83%)</title><rect x="67.6558%" y="372" width="8.8279%" height="15" fill="rgb(252,35,15)" fg:x="2736" fg:w="357"/><text x="67.9058%" y="382.50">wrapped (ope..</text></g><g><title>visitGateOperand (openqasm3/parser.py:866) (347 samples, 8.58%)</title><rect x="67.9031%" y="388" width="8.5806%" height="15" fill="rgb(248,181,18)" fg:x="2746" fg:w="347"/><text x="68.1531%" y="398.50">visitGateOpe..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (342 samples, 8.46%)</title><rect x="68.0267%" y="404" width="8.4570%" height="15" fill="rgb(233,39,42)" fg:x="2751" fg:w="342"/><text x="68.2767%" y="414.50">visit (antlr..</text></g><g><title>accept (qasm3Parser.py:5244) (342 samples, 8.46%)</title><rect x="68.0267%" y="420" width="8.4570%" height="15" fill="rgb(238,110,33)" fg:x="2751" fg:w="342"/><text x="68.2767%" y="430.50">accept (qasm..</text></g><g><title>visitGateCallStatement (openqasm3/parser.py:429) (392 samples, 9.69%)</title><rect x="66.8398%" y="324" width="9.6934%" height="15" fill="rgb(233,195,10)" fg:x="2703" fg:w="392"/><text x="67.0898%" y="334.50">visitGateCallS..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (370 samples, 9.15%)</title><rect x="67.3838%" y="340" width="9.1494%" height="15" fill="rgb(254,105,3)" fg:x="2725" fg:w="370"/><text x="67.6338%" y="350.50">visit (antlr4..</text></g><g><title>accept (qasm3Parser.py:6145) (370 samples, 9.15%)</title><rect x="67.3838%" y="356" width="9.1494%" height="15" fill="rgb(221,225,9)" fg:x="2725" fg:w="370"/><text x="67.6338%" y="366.50">accept (qasm3..</text></g><g><title>visitGateCallStatement (openqasm3/parser.py:433) (9 samples, 0.22%)</title><rect x="76.6073%" y="324" width="0.2226%" height="15" fill="rgb(224,227,45)" fg:x="3098" fg:w="9"/><text x="76.8573%" y="334.50"></text></g><g><title>GPHASE (qasm3Parser.py:2341) (9 samples, 0.22%)</title><rect x="76.6073%" y="340" width="0.2226%" height="15" fill="rgb(229,198,43)" fg:x="3098" fg:w="9"/><text x="76.8573%" y="350.50"></text></g><g><title>visitGateCallStatement (openqasm3/parser.py:439) (8 samples, 0.20%)</title><rect x="76.8299%" y="324" width="0.1978%" height="15" fill="rgb(206,209,35)" fg:x="3107" fg:w="8"/><text x="77.0799%" y="334.50"></text></g><g><title>getText (antlr4/tree/Tree.py:116) (8 samples, 0.20%)</title><rect x="77.2750%" y="356" width="0.1978%" height="15" fill="rgb(245,195,53)" fg:x="3125" fg:w="8"/><text x="77.5250%" y="366.50"></text></g><g><title>visitGateCallStatement (openqasm3/parser.py:441) (21 samples, 0.52%)</title><rect x="77.0277%" y="324" width="0.5193%" height="15" fill="rgb(240,92,26)" fg:x="3115" fg:w="21"/><text x="77.2777%" y="334.50"></text></g><g><title>_visit_identifier (openqasm3/parser.py:147) (20 samples, 0.49%)</title><rect x="77.0524%" y="340" width="0.4946%" height="15" fill="rgb(207,40,23)" fg:x="3116" fg:w="20"/><text x="77.3024%" y="350.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (641 samples, 15.85%)</title><rect x="61.9683%" y="308" width="15.8506%" height="15" fill="rgb(223,111,35)" fg:x="2506" fg:w="641"/><text x="62.2183%" y="318.50">wrapped (openqasm3/parse..</text></g><g><title>visitGateCallStatement (openqasm3/parser.py:444) (10 samples, 0.25%)</title><rect x="77.5717%" y="324" width="0.2473%" height="15" fill="rgb(229,147,28)" fg:x="3137" fg:w="10"/><text x="77.8217%" y="334.50"></text></g><g><title>designator (qasm3Parser.py:2333) (10 samples, 0.25%)</title><rect x="77.5717%" y="340" width="0.2473%" height="15" fill="rgb(211,29,28)" fg:x="3137" fg:w="10"/><text x="77.8217%" y="350.50"></text></g><g><title>getTypedRuleContext (antlr4/ParserRuleContext.py:157) (9 samples, 0.22%)</title><rect x="77.5964%" y="356" width="0.2226%" height="15" fill="rgb(228,72,33)" fg:x="3138" fg:w="9"/><text x="77.8464%" y="366.50"></text></g><g><title>getChild (antlr4/ParserRuleContext.py:119) (5 samples, 0.12%)</title><rect x="77.6954%" y="372" width="0.1236%" height="15" fill="rgb(205,214,31)" fg:x="3142" fg:w="5"/><text x="77.9454%" y="382.50"></text></g><g><title>accept (qasm3Parser.py:2356) (643 samples, 15.90%)</title><rect x="61.9683%" y="292" width="15.9001%" height="15" fill="rgb(224,111,15)" fg:x="2506" fg:w="643"/><text x="62.2183%" y="302.50">accept (qasm3Parser.py:2..</text></g><g><title>visitStatement (openqasm3/parser.py:217) (647 samples, 16.00%)</title><rect x="61.8942%" y="260" width="15.9990%" height="15" fill="rgb(253,21,26)" fg:x="2503" fg:w="647"/><text x="62.1442%" y="270.50">visitStatement (openqasm3..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (645 samples, 15.95%)</title><rect x="61.9436%" y="276" width="15.9496%" height="15" fill="rgb(245,139,43)" fg:x="2505" fg:w="645"/><text x="62.1936%" y="286.50">visit (antlr4/tree/Tree.p..</text></g><g><title>visitStatement (openqasm3/parser.py:218) (6 samples, 0.15%)</title><rect x="77.8932%" y="260" width="0.1484%" height="15" fill="rgb(252,170,7)" fg:x="3150" fg:w="6"/><text x="78.1432%" y="270.50"></text></g><g><title>annotation (qasm3Parser.py:861) (5 samples, 0.12%)</title><rect x="77.9179%" y="276" width="0.1236%" height="15" fill="rgb(231,118,14)" fg:x="3151" fg:w="5"/><text x="78.1679%" y="286.50"></text></g><g><title>wrapped (openqasm3/parser.py:138) (662 samples, 16.37%)</title><rect x="61.6963%" y="244" width="16.3699%" height="15" fill="rgb(238,83,0)" fg:x="2495" fg:w="662"/><text x="61.9463%" y="254.50">wrapped (openqasm3/parser..</text></g><g><title>parse (openqasm3/parser.py:108) (689 samples, 17.04%)</title><rect x="61.0781%" y="116" width="17.0376%" height="15" fill="rgb(221,39,39)" fg:x="2470" fg:w="689"/><text x="61.3281%" y="126.50">parse (openqasm3/parser.py..</text></g><g><title>wrapped (openqasm3/parser.py:138) (689 samples, 17.04%)</title><rect x="61.0781%" y="132" width="17.0376%" height="15" fill="rgb(222,119,46)" fg:x="2470" fg:w="689"/><text x="61.3281%" y="142.50">wrapped (openqasm3/parser...</text></g><g><title>visitProgram (openqasm3/parser.py:210) (689 samples, 17.04%)</title><rect x="61.0781%" y="148" width="17.0376%" height="15" fill="rgb(222,165,49)" fg:x="2470" fg:w="689"/><text x="61.3281%" y="158.50">visitProgram (openqasm3/pa..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (688 samples, 17.01%)</title><rect x="61.1029%" y="164" width="17.0129%" height="15" fill="rgb(219,113,52)" fg:x="2471" fg:w="688"/><text x="61.3529%" y="174.50">visit (antlr4/tree/Tree.py..</text></g><g><title>accept (qasm3Parser.py:1283) (683 samples, 16.89%)</title><rect x="61.2265%" y="180" width="16.8892%" height="15" fill="rgb(214,7,15)" fg:x="2476" fg:w="683"/><text x="61.4765%" y="190.50">accept (qasm3Parser.py:128..</text></g><g><title>visitStatementOrScope (openqasm3/parser.py:942) (683 samples, 16.89%)</title><rect x="61.2265%" y="196" width="16.8892%" height="15" fill="rgb(235,32,4)" fg:x="2476" fg:w="683"/><text x="61.4765%" y="206.50">visitStatementOrScope (ope..</text></g><g><title>visit (antlr4/tree/Tree.py:34) (670 samples, 16.57%)</title><rect x="61.5480%" y="212" width="16.5678%" height="15" fill="rgb(238,90,54)" fg:x="2489" fg:w="670"/><text x="61.7980%" y="222.50">visit (antlr4/tree/Tree.py..</text></g><g><title>accept (qasm3Parser.py:879) (668 samples, 16.52%)</title><rect x="61.5974%" y="228" width="16.5183%" height="15" fill="rgb(213,208,19)" fg:x="2491" fg:w="668"/><text x="61.8474%" y="238.50">accept (qasm3Parser.py:87..</text></g><g><title>&lt;module&gt; (test.py:78) (3,146 samples, 77.79%)</title><rect x="0.3462%" y="68" width="77.7943%" height="15" fill="rgb(233,156,4)" fg:x="14" fg:w="3146"/><text x="0.5962%" y="78.50">&lt;module&gt; (test.py:78)</text></g><g><title>load (pyqasm/entrypoint.py:50) (3,136 samples, 77.55%)</title><rect x="0.5935%" y="84" width="77.5470%" height="15" fill="rgb(207,194,5)" fg:x="24" fg:w="3136"/><text x="0.8435%" y="94.50">load (pyqasm/entrypoint.py:50)</text></g><g><title>loads (pyqasm/entrypoint.py:78) (3,136 samples, 77.55%)</title><rect x="0.5935%" y="100" width="77.5470%" height="15" fill="rgb(206,111,30)" fg:x="24" fg:w="3136"/><text x="0.8435%" y="110.50">loads (pyqasm/entrypoint.py:78)</text></g><g><title>__repr__ (&lt;string&gt;:6) (12 samples, 0.30%)</title><rect x="78.9565%" y="212" width="0.2967%" height="15" fill="rgb(243,70,54)" fg:x="3193" fg:w="12"/><text x="79.2065%" y="222.50"></text></g><g><title>wrapper (reprlib.py:19) (5 samples, 0.12%)</title><rect x="79.6983%" y="228" width="0.1236%" height="15" fill="rgb(242,28,8)" fg:x="3223" fg:w="5"/><text x="79.9483%" y="238.50"></text></g><g><title>wrapper (reprlib.py:21) (23 samples, 0.57%)</title><rect x="80.4154%" y="260" width="0.5687%" height="15" fill="rgb(219,106,18)" fg:x="3252" fg:w="23"/><text x="80.6654%" y="270.50"></text></g><g><title>__repr__ (&lt;string&gt;:9) (21 samples, 0.52%)</title><rect x="80.4649%" y="276" width="0.5193%" height="15" fill="rgb(244,222,10)" fg:x="3254" fg:w="21"/><text x="80.7149%" y="286.50"></text></g><g><title>__repr__ (&lt;string&gt;:6) (46 samples, 1.14%)</title><rect x="79.8961%" y="244" width="1.1375%" height="15" fill="rgb(236,179,52)" fg:x="3231" fg:w="46"/><text x="80.1461%" y="254.50"></text></g><g><title>wrapper (reprlib.py:21) (55 samples, 1.36%)</title><rect x="79.8220%" y="228" width="1.3600%" height="15" fill="rgb(213,23,39)" fg:x="3228" fg:w="55"/><text x="80.0720%" y="238.50"></text></g><g><title>__repr__ (&lt;string&gt;:9) (6 samples, 0.15%)</title><rect x="81.0336%" y="244" width="0.1484%" height="15" fill="rgb(238,48,10)" fg:x="3277" fg:w="6"/><text x="81.2836%" y="254.50"></text></g><g><title>__repr__ (&lt;string&gt;:7) (80 samples, 1.98%)</title><rect x="79.2532%" y="212" width="1.9782%" height="15" fill="rgb(251,196,23)" fg:x="3205" fg:w="80"/><text x="79.5032%" y="222.50">_..</text></g><g><title>__repr__ (&lt;string&gt;:8) (6 samples, 0.15%)</title><rect x="81.2315%" y="212" width="0.1484%" height="15" fill="rgb(250,152,24)" fg:x="3285" fg:w="6"/><text x="81.4815%" y="222.50"></text></g><g><title>wrapper (reprlib.py:21) (102 samples, 2.52%)</title><rect x="78.9070%" y="196" width="2.5223%" height="15" fill="rgb(209,150,17)" fg:x="3191" fg:w="102"/><text x="79.1570%" y="206.50">wr..</text></g><g><title>__repr__ (&lt;string&gt;:11) (124 samples, 3.07%)</title><rect x="78.4619%" y="180" width="3.0663%" height="15" fill="rgb(234,202,34)" fg:x="3173" fg:w="124"/><text x="78.7119%" y="190.50">__r..</text></g><g><title>visit_statement (pyqasm/visitor.py:3091) (132 samples, 3.26%)</title><rect x="78.3136%" y="148" width="3.2641%" height="15" fill="rgb(253,148,53)" fg:x="3167" fg:w="132"/><text x="78.5636%" y="158.50">vis..</text></g><g><title>wrapper (reprlib.py:21) (126 samples, 3.12%)</title><rect x="78.4619%" y="164" width="3.1157%" height="15" fill="rgb(218,129,16)" fg:x="3173" fg:w="126"/><text x="78.7119%" y="174.50">wra..</text></g><g><title>copy (copy.py:88) (5 samples, 0.12%)</title><rect x="82.6162%" y="180" width="0.1236%" height="15" fill="rgb(216,85,19)" fg:x="3341" fg:w="5"/><text x="82.8662%" y="190.50"></text></g><g><title>_visit_generic_gate_operation (pyqasm/visitor.py:1296) (31 samples, 0.77%)</title><rect x="82.3689%" y="164" width="0.7666%" height="15" fill="rgb(235,228,7)" fg:x="3331" fg:w="31"/><text x="82.6189%" y="174.50"></text></g><g><title>copy (copy.py:98) (15 samples, 0.37%)</title><rect x="82.7646%" y="180" width="0.3709%" height="15" fill="rgb(245,175,0)" fg:x="3347" fg:w="15"/><text x="83.0146%" y="190.50"></text></g><g><title>_reconstruct (copy.py:269) (8 samples, 0.20%)</title><rect x="82.9377%" y="196" width="0.1978%" height="15" fill="rgb(208,168,36)" fg:x="3354" fg:w="8"/><text x="83.1877%" y="206.50"></text></g><g><title>_visit_generic_gate_operation (pyqasm/visitor.py:1330) (5 samples, 0.12%)</title><rect x="83.1355%" y="164" width="0.1236%" height="15" fill="rgb(246,171,24)" fg:x="3362" fg:w="5"/><text x="83.3855%" y="174.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:288) (10 samples, 0.25%)</title><rect x="83.3333%" y="180" width="0.2473%" height="15" fill="rgb(215,142,24)" fg:x="3370" fg:w="10"/><text x="83.5833%" y="190.50"></text></g><g><title>get_from_visible_scope (pyqasm/scope.py:194) (6 samples, 0.15%)</title><rect x="83.4322%" y="196" width="0.1484%" height="15" fill="rgb(250,187,7)" fg:x="3374" fg:w="6"/><text x="83.6822%" y="206.50"></text></g><g><title>in_global_scope (pyqasm/scope.py:105) (6 samples, 0.15%)</title><rect x="83.4322%" y="212" width="0.1484%" height="15" fill="rgb(228,66,33)" fg:x="3374" fg:w="6"/><text x="83.6822%" y="222.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:323) (21 samples, 0.52%)</title><rect x="83.6548%" y="180" width="0.5193%" height="15" fill="rgb(234,215,21)" fg:x="3383" fg:w="21"/><text x="83.9048%" y="190.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:341) (6 samples, 0.15%)</title><rect x="84.3225%" y="180" width="0.1484%" height="15" fill="rgb(222,191,20)" fg:x="3410" fg:w="6"/><text x="84.5725%" y="190.50"></text></g><g><title>_visit_generic_gate_operation (pyqasm/visitor.py:1344) (51 samples, 1.26%)</title><rect x="83.2591%" y="164" width="1.2611%" height="15" fill="rgb(245,79,54)" fg:x="3367" fg:w="51"/><text x="83.5091%" y="174.50"></text></g><g><title>phaseshift_gate (pyqasm/maps/gates.py:282) (6 samples, 0.15%)</title><rect x="84.9901%" y="212" width="0.1484%" height="15" fill="rgb(240,10,37)" fg:x="3437" fg:w="6"/><text x="85.2401%" y="222.50"></text></g><g><title>one_qubit_rotation_op (pyqasm/maps/gates.py:981) (303 samples, 7.49%)</title><rect x="85.1385%" y="228" width="7.4926%" height="15" fill="rgb(214,192,32)" fg:x="3443" fg:w="303"/><text x="85.3885%" y="238.50">one_qubit_..</text></g><g><title>__init__ (&lt;string&gt;:3) (300 samples, 7.42%)</title><rect x="85.2127%" y="244" width="7.4184%" height="15" fill="rgb(209,36,54)" fg:x="3446" fg:w="300"/><text x="85.4627%" y="254.50">__init__ (..</text></g><g><title>phaseshift_gate (pyqasm/maps/gates.py:283) (306 samples, 7.57%)</title><rect x="85.1385%" y="212" width="7.5668%" height="15" fill="rgb(220,10,11)" fg:x="3443" fg:w="306"/><text x="85.3885%" y="222.50">phaseshift..</text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:1000) (328 samples, 8.11%)</title><rect x="84.7676%" y="180" width="8.1108%" height="15" fill="rgb(221,106,17)" fg:x="3428" fg:w="328"/><text x="85.0176%" y="190.50">_visit_basi..</text></g><g><title>_broadcast_gate_operation (pyqasm/visitor.py:885) (325 samples, 8.04%)</title><rect x="84.8417%" y="196" width="8.0366%" height="15" fill="rgb(251,142,44)" fg:x="3431" fg:w="325"/><text x="85.0917%" y="206.50">_broadcast_..</text></g><g><title>phaseshift_gate (pyqasm/maps/gates.py:284) (7 samples, 0.17%)</title><rect x="92.7052%" y="212" width="0.1731%" height="15" fill="rgb(238,13,15)" fg:x="3749" fg:w="7"/><text x="92.9552%" y="222.50"></text></g><g><title>evaluate_expression (pyqasm/expressions.py:195) (26 samples, 0.64%)</title><rect x="93.3729%" y="212" width="0.6429%" height="15" fill="rgb(208,107,27)" fg:x="3776" fg:w="26"/><text x="93.6229%" y="222.50"></text></g><g><title>_update_qubit_depth_for_gate (pyqasm/visitor.py:907) (46 samples, 1.14%)</title><rect x="93.1256%" y="196" width="1.1375%" height="15" fill="rgb(205,136,37)" fg:x="3766" fg:w="46"/><text x="93.3756%" y="206.50"></text></g><g><title>_update_qubit_depth_for_gate (pyqasm/visitor.py:915) (17 samples, 0.42%)</title><rect x="94.3867%" y="196" width="0.4204%" height="15" fill="rgb(250,205,27)" fg:x="3817" fg:w="17"/><text x="94.6367%" y="206.50"></text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:1009) (80 samples, 1.98%)</title><rect x="92.8783%" y="180" width="1.9782%" height="15" fill="rgb(210,80,43)" fg:x="3756" fg:w="80"/><text x="93.1283%" y="190.50">_..</text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:1023) (19 samples, 0.47%)</title><rect x="94.8566%" y="180" width="0.4698%" height="15" fill="rgb(247,160,36)" fg:x="3836" fg:w="19"/><text x="95.1066%" y="190.50"></text></g><g><title>verify_gate_qubits (pyqasm/analyzer.py:289) (14 samples, 0.35%)</title><rect x="94.9802%" y="196" width="0.3462%" height="15" fill="rgb(234,13,49)" fg:x="3841" fg:w="14"/><text x="95.2302%" y="206.50"></text></g><g><title>__repr__ (&lt;string&gt;:6) (9 samples, 0.22%)</title><rect x="96.1424%" y="244" width="0.2226%" height="15" fill="rgb(234,122,0)" fg:x="3888" fg:w="9"/><text x="96.3924%" y="254.50"></text></g><g><title>wrapper (reprlib.py:21) (6 samples, 0.15%)</title><rect x="96.9832%" y="260" width="0.1484%" height="15" fill="rgb(207,146,38)" fg:x="3922" fg:w="6"/><text x="97.2332%" y="270.50"></text></g><g><title>__repr__ (&lt;string&gt;:7) (34 samples, 0.84%)</title><rect x="96.3650%" y="244" width="0.8408%" height="15" fill="rgb(207,177,25)" fg:x="3897" fg:w="34"/><text x="96.6150%" y="254.50"></text></g><g><title>__repr__ (&lt;string&gt;:6) (6 samples, 0.15%)</title><rect x="97.2799%" y="276" width="0.1484%" height="15" fill="rgb(211,178,42)" fg:x="3934" fg:w="6"/><text x="97.5299%" y="286.50"></text></g><g><title>__repr__ (&lt;string&gt;:8) (10 samples, 0.25%)</title><rect x="97.2057%" y="244" width="0.2473%" height="15" fill="rgb(230,69,54)" fg:x="3931" fg:w="10"/><text x="97.4557%" y="254.50"></text></g><g><title>wrapper (reprlib.py:21) (7 samples, 0.17%)</title><rect x="97.2799%" y="260" width="0.1731%" height="15" fill="rgb(214,135,41)" fg:x="3934" fg:w="7"/><text x="97.5299%" y="270.50"></text></g><g><title>wrapper (reprlib.py:21) (78 samples, 1.93%)</title><rect x="95.6231%" y="196" width="1.9288%" height="15" fill="rgb(237,67,25)" fg:x="3867" fg:w="78"/><text x="95.8731%" y="206.50">w..</text></g><g><title>__repr__ (&lt;string&gt;:11) (78 samples, 1.93%)</title><rect x="95.6231%" y="212" width="1.9288%" height="15" fill="rgb(222,189,50)" fg:x="3867" fg:w="78"/><text x="95.8731%" y="222.50">_..</text></g><g><title>wrapper (reprlib.py:21) (58 samples, 1.43%)</title><rect x="96.1177%" y="228" width="1.4342%" height="15" fill="rgb(245,148,34)" fg:x="3887" fg:w="58"/><text x="96.3677%" y="238.50"></text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:948) (89 samples, 2.20%)</title><rect x="95.3759%" y="180" width="2.2008%" height="15" fill="rgb(222,29,6)" fg:x="3857" fg:w="89"/><text x="95.6259%" y="190.50">_..</text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:960) (8 samples, 0.20%)</title><rect x="97.5767%" y="180" width="0.1978%" height="15" fill="rgb(221,189,43)" fg:x="3946" fg:w="8"/><text x="97.8267%" y="190.50"></text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:970) (15 samples, 0.37%)</title><rect x="97.9228%" y="180" width="0.3709%" height="15" fill="rgb(207,36,27)" fg:x="3960" fg:w="15"/><text x="98.1728%" y="190.50"></text></g><g><title>_get_op_parameters (pyqasm/visitor.py:805) (14 samples, 0.35%)</title><rect x="97.9476%" y="196" width="0.3462%" height="15" fill="rgb(217,90,24)" fg:x="3961" fg:w="14"/><text x="98.1976%" y="206.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:288) (6 samples, 0.15%)</title><rect x="98.4174%" y="212" width="0.1484%" height="15" fill="rgb(224,66,35)" fg:x="3980" fg:w="6"/><text x="98.6674%" y="222.50"></text></g><g><title>evaluate_expression (pyqasm/expressions.py:195) (5 samples, 0.12%)</title><rect x="98.8872%" y="228" width="0.1236%" height="15" fill="rgb(221,13,50)" fg:x="3999" fg:w="5"/><text x="99.1372%" y="238.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:323) (23 samples, 0.57%)</title><rect x="98.6894%" y="212" width="0.5687%" height="15" fill="rgb(236,68,49)" fg:x="3991" fg:w="23"/><text x="98.9394%" y="222.50"></text></g><g><title>_get_op_bits (pyqasm/visitor.py:341) (7 samples, 0.17%)</title><rect x="99.4560%" y="212" width="0.1731%" height="15" fill="rgb(229,146,28)" fg:x="4022" fg:w="7"/><text x="99.7060%" y="222.50"></text></g><g><title>_unroll_multiple_target_qubits (pyqasm/visitor.py:850) (57 samples, 1.41%)</title><rect x="98.3432%" y="196" width="1.4095%" height="15" fill="rgb(225,31,38)" fg:x="3977" fg:w="57"/><text x="98.5932%" y="206.50"></text></g><g><title>_visit_basic_gate_operation (pyqasm/visitor.py:983) (61 samples, 1.51%)</title><rect x="98.3185%" y="180" width="1.5084%" height="15" fill="rgb(250,208,3)" fg:x="3976" fg:w="61"/><text x="98.5685%" y="190.50"></text></g><g><title>_visit_generic_gate_operation (pyqasm/visitor.py:1421) (611 samples, 15.11%)</title><rect x="84.7676%" y="164" width="15.1088%" height="15" fill="rgb(246,54,23)" fg:x="3428" fg:w="611"/><text x="85.0176%" y="174.50">_visit_generic_gate_ope..</text></g><g><title>accept (pyqasm/modules/qasm2.py:107) (882 samples, 21.81%)</title><rect x="78.1652%" y="116" width="21.8101%" height="15" fill="rgb(243,76,11)" fg:x="3161" fg:w="882"/><text x="78.4152%" y="126.50">accept (pyqasm/modules/qasm2.py:10..</text></g><g><title>visit_basic_block (pyqasm/visitor.py:3150) (882 samples, 21.81%)</title><rect x="78.1652%" y="132" width="21.8101%" height="15" fill="rgb(245,21,50)" fg:x="3161" fg:w="882"/><text x="78.4152%" y="142.50">visit_basic_block (pyqasm/visitor...</text></g><g><title>visit_statement (pyqasm/visitor.py:3130) (717 samples, 17.73%)</title><rect x="82.2453%" y="148" width="17.7300%" height="15" fill="rgb(228,9,43)" fg:x="3326" fg:w="717"/><text x="82.4953%" y="158.50">visit_statement (pyqasm/visi..</text></g><g><title>all (4,044 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(208,100,47)" fg:x="0" fg:w="4044"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (test.py:79) (884 samples, 21.86%)</title><rect x="78.1405%" y="68" width="21.8595%" height="15" fill="rgb(232,26,8)" fg:x="3160" fg:w="884"/><text x="78.3905%" y="78.50">&lt;module&gt; (test.py:79)</text></g><g><title>wrapper (pyqasm/modules/base.py:60) (884 samples, 21.86%)</title><rect x="78.1405%" y="84" width="21.8595%" height="15" fill="rgb(216,166,38)" fg:x="3160" fg:w="884"/><text x="78.3905%" y="94.50">wrapper (pyqasm/modules/base.py:60)</text></g><g><title>unroll (pyqasm/modules/base.py:619) (884 samples, 21.86%)</title><rect x="78.1405%" y="100" width="21.8595%" height="15" fill="rgb(251,202,51)" fg:x="3160" fg:w="884"/><text x="78.3905%" y="110.50">unroll (pyqasm/modules/base.py:619)</text></g></svg></svg>